import { TileReader } from './carto-raster-tile';
import { parsePbf } from './tile-loader-utils';
const CartoRasterTileLoader = {
  name: 'CARTO Raster Tile',
  version: '1',
  id: 'cartoRasterTile',
  module: 'carto',
  extensions: ['pbf'],
  mimeTypes: ['application/vnd.carto-raster-tile'],
  category: 'geometry',
  worker: false,
  parse: async (arrayBuffer, options) => parseCartoRasterTile(arrayBuffer, options),
  parseSync: parseCartoRasterTile,
  options: {}
};

function parseCartoRasterTile(arrayBuffer, options) {
  if (!arrayBuffer) return null;
  const tile = parsePbf(arrayBuffer, TileReader);
  const {
    bands,
    blockHeight,
    blockWidth
  } = tile;
  const numericProps = {};

  for (let i = 0; i < bands.length; i++) {
    const {
      name,
      data
    } = bands[i];
    numericProps[name] = data;
  }

  return {
    blockWidth,
    blockHeight,
    cells: {
      numericProps,
      properties: []
    }
  };
}

export default CartoRasterTileLoader;
//# sourceMappingURL=carto-raster-tile-loader.js.map