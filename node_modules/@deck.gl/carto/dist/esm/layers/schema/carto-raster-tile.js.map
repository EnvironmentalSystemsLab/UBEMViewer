{"version":3,"sources":["../../../../src/layers/schema/carto-raster-tile.ts"],"names":["readPackedTypedArray","ARRAY_TYPES","uint8","Uint8Array","uint16","Uint16Array","uint32","Uint32Array","uint64","BigUint64Array","int8","Int8Array","int16","Int16Array","int32","Int32Array","int64","BigInt64Array","float32","Float32Array","float64","Float64Array","BandReader","read","pbf","end","readFields","_readField","name","type","data","tag","obj","readString","TypedArray","Error","TileReader","blockWidth","blockHeight","bands","readVarint","push","pos"],"mappings":"AAAA,SAAQA,oBAAR,QAAmC,YAAnC;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAEC,UADW;AAElBC,EAAAA,MAAM,EAAEC,WAFU;AAGlBC,EAAAA,MAAM,EAAEC,WAHU;AAIlBC,EAAAA,MAAM,EAAEC,cAJU;AAKlBC,EAAAA,IAAI,EAAEC,SALY;AAMlBC,EAAAA,KAAK,EAAEC,UANW;AAOlBC,EAAAA,KAAK,EAAEC,UAPW;AAQlBC,EAAAA,KAAK,EAAEC,aARW;AASlBC,EAAAA,OAAO,EAAEC,YATS;AAUlBC,EAAAA,OAAO,EAAEC;AAVS,CAApB;AAeA,OAAO,MAAMC,UAAN,CAAiB;AACX,SAAJC,IAAI,CAACC,GAAD,EAAMC,GAAN,EAAoB;AAC7B,WAAOD,GAAG,CAACE,UAAJ,CAAeJ,UAAU,CAACK,UAA1B,EAAsC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAAtC,EAAwEL,GAAxE,CAAP;AACD;;AAEgB,SAAVE,UAAU,CAAaI,GAAb,EAAkBC,GAAlB,EAAuBR,GAAvB,EAA4B;AAC3C,QAAIO,GAAG,KAAK,CAAZ,EAAeC,GAAG,CAACJ,IAAJ,GAAWJ,GAAG,CAACS,UAAJ,EAAX,CAAf,KACK,IAAIF,GAAG,KAAK,CAAZ,EAAeC,GAAG,CAACH,IAAJ,GAAWL,GAAG,CAACS,UAAJ,EAAX,CAAf,KACA,IAAIF,GAAG,KAAK,CAAZ,EAAe;AAClB,YAAMG,UAAU,GAAGjC,WAAW,CAAC+B,GAAG,CAACH,IAAL,CAA9B;;AACA,UAAI,CAACK,UAAL,EAAiB;AACf,cAAMC,KAAK,8BAAuBH,GAAG,CAACH,IAA3B,EAAX;AACD;;AACDG,MAAAA,GAAG,CAACF,IAAJ,GAAW,EAAX;AACA9B,MAAAA,oBAAoB,CAACkC,UAAD,EAAaV,GAAb,EAAkBQ,GAAG,CAACF,IAAtB,CAApB;AACD;AACF;;AAhBqB;AAmBxB,OAAO,MAAMM,UAAN,CAAiB;AACX,SAAJb,IAAI,CAACC,GAAD,EAAMC,GAAN,EAAW;AACpB,WAAOD,GAAG,CAACE,UAAJ,CAAeU,UAAU,CAACT,UAA1B,EAAsC;AAACU,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,WAAW,EAAE,CAA7B;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KAAtC,EAAkFd,GAAlF,CAAP;AACD;;AACgB,SAAVE,UAAU,CAAaI,GAAb,EAAkBC,GAAlB,EAAuBR,GAAvB,EAA4B;AAC3C,QAAIO,GAAG,KAAK,CAAZ,EAAeC,GAAG,CAACK,UAAJ,GAAiBb,GAAG,CAACgB,UAAJ,EAAjB,CAAf,KACK,IAAIT,GAAG,KAAK,CAAZ,EAAeC,GAAG,CAACM,WAAJ,GAAkBd,GAAG,CAACgB,UAAJ,EAAlB,CAAf,KACA,IAAIT,GAAG,KAAK,CAAZ,EAAeC,GAAG,CAACO,KAAJ,CAAUE,IAAV,CAAenB,UAAU,CAACC,IAAX,CAAgBC,GAAhB,EAAqBA,GAAG,CAACgB,UAAJ,KAAmBhB,GAAG,CAACkB,GAA5C,CAAf;AACrB;;AARqB","sourcesContent":["import {readPackedTypedArray} from './fast-pbf';\n\nconst ARRAY_TYPES = {\n  uint8: Uint8Array,\n  uint16: Uint16Array,\n  uint32: Uint32Array,\n  uint64: BigUint64Array,\n  int8: Int8Array,\n  int16: Int16Array,\n  int32: Int32Array,\n  int64: BigInt64Array,\n  float32: Float32Array,\n  float64: Float64Array\n};\n\n// Band ========================================\n\nexport class BandReader {\n  static read(pbf, end?: number) {\n    return pbf.readFields(BandReader._readField, {name: '', type: '', data: null}, end);\n  }\n\n  static _readField(this: void, tag, obj, pbf) {\n    if (tag === 1) obj.name = pbf.readString();\n    else if (tag === 2) obj.type = pbf.readString();\n    else if (tag === 3) {\n      const TypedArray = ARRAY_TYPES[obj.type];\n      if (!TypedArray) {\n        throw Error(`Invalid data type: ${obj.type}`);\n      }\n      obj.data = {};\n      readPackedTypedArray(TypedArray, pbf, obj.data);\n    }\n  }\n}\n\nexport class TileReader {\n  static read(pbf, end) {\n    return pbf.readFields(TileReader._readField, {blockWidth: 0, blockHeight: 0, bands: []}, end);\n  }\n  static _readField(this: void, tag, obj, pbf) {\n    if (tag === 1) obj.blockWidth = pbf.readVarint();\n    else if (tag === 2) obj.blockHeight = pbf.readVarint();\n    else if (tag === 3) obj.bands.push(BandReader.read(pbf, pbf.readVarint() + pbf.pos));\n  }\n}\n"],"file":"carto-raster-tile.js"}