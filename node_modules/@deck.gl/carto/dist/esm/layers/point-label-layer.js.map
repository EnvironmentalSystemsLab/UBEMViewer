{"version":3,"sources":["../../../src/layers/point-label-layer.ts"],"names":["CompositeLayer","TextLayer","_TextBackgroundLayer","TextBackgroundLayer","LEFT","TOP","RIGHT","BOTTOM","EnhancedTextBackgroundLayer","getShaders","shaders","vs","replaceAll","replace","EnhancedTextLayer","filterSubLayer","layer","renderPass","background","id","includes","defaultProps","getRadius","type","value","radiusScale","min","PointLabelLayer","calculatePixelOffset","secondary","getTextAnchor","anchor","getAlignmentBaseline","alignment","getSecondaryText","secondarySizeScale","sizeScale","props","xMult","yMult","xPadding","yPadding","secondaryOffset","yOffset","radiusPadding","d","info","r","calculateBackgroundPadding","paddingX","paddingY","backgroundPadding","renderTextLayer","updateTriggers","updateTriggersOverride","data","characterSet","fontFamily","fontSettings","fontWeight","outlineColor","outlineWidth","getColor","getPosition","getSubLayerProps","getPixelOffset","getSize","_subLayerProps","renderLayers","getText","getSecondaryColor","secondaryOutlineColor","out","Boolean"],"mappings":"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","sourcesContent":["import {\n  Accessor,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  DefaultProps,\n  Layer,\n  LayersList\n} from '@deck.gl/core';\nimport {\n  TextLayer,\n  TextLayerProps,\n  _TextBackgroundLayer as TextBackgroundLayer\n} from '@deck.gl/layers';\n\nconst [LEFT, TOP, RIGHT, BOTTOM] = [0, 1, 2, 3];\n\nclass EnhancedTextBackgroundLayer extends TextBackgroundLayer {\n  static layerName = 'EnhancedTextBackgroundLayer';\n\n  getShaders() {\n    const shaders = super.getShaders();\n    let vs = shaders.vs;\n\n    // Modify shader so that the padding is offset by the pixel offset to ensure the padding\n    // always captures the anchor point. As padding is uniform we cannot pass it a per-label value\n    vs = vs.replaceAll('padding.', '_padding.');\n    vs = vs.replace(\n      'void main(void) {',\n      'void main(void) {\\n  vec4 _padding = padding + instancePixelOffsets.xyxy * vec4(1.0, 1.0, -1.0, -1.0);'\n    );\n\n    return {...shaders, vs};\n  }\n}\n\n// TextLayer which includes modified text-background-layer-vertex shader and only renders the\n// primary background layer in the collision pass\nclass EnhancedTextLayer extends TextLayer {\n  static layerName = 'EnhancedTextLayer';\n\n  filterSubLayer({layer, renderPass}) {\n    const background = layer.id.includes('primary-background');\n    if (renderPass === 'collision') {\n      return background; // Only draw primary background layer in collision pass\n    }\n\n    return !background; // Do not draw background layer in other passes\n  }\n}\n\nconst defaultProps: DefaultProps<PointLabelLayerProps> = {\n  ...TextLayer.defaultProps,\n  getRadius: {type: 'accessor', value: 1},\n  radiusScale: {type: 'number', min: 0, value: 1}\n};\n\n/** All properties supported by PointLabelLayer. */\nexport type PointLabelLayerProps<DataT = any> = _PointLabelLayerProps<DataT> &\n  TextLayerProps &\n  CompositeLayerProps;\n\n/** Properties added by PointLabelLayer. */\ntype _PointLabelLayerProps<DataT> = TextLayerProps<DataT> & {\n  /**\n   * Radius multiplier.\n   * @default 1\n   */\n  radiusScale?: number;\n  /**\n   * Radius accessor.\n   * @default 1\n   */\n  getRadius?: Accessor<DataT, number>;\n  /**\n   * Secondary label text accessor\n   */\n  getSecondaryText?: Accessor<DataT, string>;\n  /**\n   * Secondary label color accessor\n   * @default [0, 0, 0, 255]\n   */\n  getSecondaryColor?: Accessor<DataT, Color>;\n  /**\n   * Secondary label color of outline around the text, in `[r, g, b, [a]]`. Each channel is a number between 0-255 and `a` is 255 if not supplied.\n   * @default [0, 0, 0, 255]\n   */\n  secondaryOutlineColor?: Color;\n  /**\n   * Secondary label text size multiplier.\n   * @default 1\n   */\n  secondarySizeScale?: number;\n};\n\nexport default class PointLabelLayer<\n  DataT = any,\n  ExtraProps extends {} = {}\n> extends CompositeLayer<ExtraProps & Required<_PointLabelLayerProps<DataT>>> {\n  static layerName = 'PointLabelLayer';\n  static defaultProps = defaultProps;\n\n  calculatePixelOffset(secondary) {\n    const {\n      getTextAnchor: anchor,\n      getAlignmentBaseline: alignment,\n      getRadius,\n      getSecondaryText,\n      radiusScale,\n      secondarySizeScale,\n      sizeScale\n    } = this.props;\n    const xMult = anchor === 'middle' ? 0 : anchor === 'start' ? 1 : -1;\n    const yMult = alignment === 'center' ? 0 : alignment === 'bottom' ? 1 : -1;\n\n    // Padding based on font size (font size / 4)\n    const xPadding = sizeScale / 4;\n    const yPadding = sizeScale * (1 + 1 / 4);\n\n    // Place secondary label under main label (secondary label always 'top' baseline aligned)\n    const secondaryOffset = 0.6 * (1 - yMult) * sizeScale;\n    let yOffset = secondary ? secondaryOffset : 0;\n\n    // Special case, position relative to secondary label\n    if (anchor === 'middle' && alignment === 'top' && getSecondaryText) {\n      yOffset -= secondaryOffset;\n      yOffset -= secondarySizeScale;\n      yOffset += sizeScale;\n    }\n\n    // Padding based on point radius (radius/ 4)\n    const radiusPadding = 1 + 1 / 4;\n\n    return typeof getRadius === 'function'\n      ? (d, info) => {\n          const r = (info ? getRadius(d, info) : 1) * radiusScale * radiusPadding;\n          return [xMult * (r + xPadding), yMult * (r + yPadding) + yOffset];\n        }\n      : [\n          xMult * (getRadius * radiusScale * radiusPadding + xPadding),\n          yMult * (getRadius * radiusScale * radiusPadding + yPadding) + yOffset\n        ];\n  }\n\n  calculateBackgroundPadding() {\n    const {getTextAnchor: anchor, getAlignmentBaseline: alignment, sizeScale} = this.props;\n\n    // Heuristics to avoid label overlap\n    const paddingX = 12 * sizeScale;\n    const paddingY = 3 * sizeScale;\n    const backgroundPadding = [0, 0, 0, 0];\n    if (alignment === 'top') {\n      backgroundPadding[TOP] = paddingY;\n    } else if (alignment === 'bottom') {\n      backgroundPadding[BOTTOM] = paddingY;\n    } else {\n      backgroundPadding[TOP] = 0.5 * paddingY;\n      backgroundPadding[BOTTOM] = 0.5 * paddingY;\n    }\n    if (anchor === 'start') {\n      backgroundPadding[LEFT] = paddingX;\n    } else if (anchor === 'end') {\n      backgroundPadding[RIGHT] = paddingX;\n    } else {\n      backgroundPadding[LEFT] = 0.5 * paddingX;\n      backgroundPadding[RIGHT] = 0.5 * paddingX;\n    }\n\n    return backgroundPadding;\n  }\n\n  renderTextLayer(id, {updateTriggers: updateTriggersOverride = {}, ...props}): EnhancedTextLayer {\n    const {\n      data,\n\n      characterSet,\n      fontFamily,\n      fontSettings,\n      fontWeight,\n      outlineColor,\n      outlineWidth,\n      sizeScale,\n      radiusScale,\n\n      getAlignmentBaseline,\n      getColor,\n      getPosition,\n      getTextAnchor,\n\n      updateTriggers\n    } = this.props;\n\n    return new EnhancedTextLayer(\n      this.getSubLayerProps({\n        id,\n        data,\n\n        characterSet,\n        fontFamily,\n        fontSettings,\n        fontWeight,\n        outlineColor,\n        outlineWidth,\n        sizeScale,\n\n        getAlignmentBaseline,\n        getColor,\n        getPosition,\n        getTextAnchor,\n\n        updateTriggers: {\n          ...updateTriggers,\n          ...updateTriggersOverride,\n          getPixelOffset: [\n            updateTriggers.getRadius,\n            updateTriggers.getTextAnchor,\n            updateTriggers.getAlignmentBaseline,\n            radiusScale,\n            sizeScale\n          ]\n        }\n      }),\n      {\n        getSize: 1,\n        _subLayerProps: {background: {type: EnhancedTextBackgroundLayer}}\n      },\n      props\n    );\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {\n      getText,\n      getSecondaryColor,\n      getSecondaryText,\n      secondaryOutlineColor,\n      secondarySizeScale,\n      updateTriggers\n    } = this.props;\n    const getPixelOffset = this.calculatePixelOffset(false);\n    const backgroundPadding = this.calculateBackgroundPadding();\n    const out = [\n      // Text doesn't update via updateTrigger for some reason\n      this.renderTextLayer(`${updateTriggers.getText}-primary`, {\n        backgroundPadding,\n        getText,\n        getPixelOffset,\n        background: true // Only use background for primary label for faster collisions\n      }),\n      Boolean(getSecondaryText) &&\n        this.renderTextLayer(`${updateTriggers.getSecondaryText}-secondary`, {\n          getText: getSecondaryText,\n          getPixelOffset: this.calculatePixelOffset(true),\n          getAlignmentBaseline: 'top',\n          // updateTriggers: {getText: updateTriggers.getSecondaryText},\n\n          // Optional overrides\n          ...(getSecondaryColor && {getColor: getSecondaryColor}),\n          ...(secondarySizeScale && {sizeScale: secondarySizeScale}),\n          ...(secondaryOutlineColor && {outlineColor: secondaryOutlineColor})\n        })\n    ];\n\n    return out;\n  }\n}\n"],"file":"point-label-layer.js"}