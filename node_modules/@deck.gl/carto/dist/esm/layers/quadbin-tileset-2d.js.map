{"version":3,"sources":["../../../src/layers/quadbin-tileset-2d.ts"],"names":["_Tileset2D","Tileset2D","bigIntToHex","cellToParent","cellToTile","getResolution","tileToCell","QuadbinTileset2D","getTileIndices","opts","map","q","i","getTileId","getTileMetadata","getTileZoom","Number","getParentIndex"],"mappings":"AAAA,SAAQA,UAAU,IAAIC,SAAtB,QAAsC,qBAAtC;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,aAA/C,EAA8DC,UAA9D,QAA+E,SAA/E;AAMA,eAAe,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAEtDO,EAAAA,cAAc,CAACC,IAAD,EAA2B;AACvC,WAAO,MACJD,cADI,CACWC,IADX,EAEJC,GAFI,CAEAJ,UAFA,EAGJI,GAHI,CAGAC,CAAC,KAAK;AAACA,MAAAA,CAAD;AAAIC,MAAAA,CAAC,EAAEV,WAAW,CAACS,CAAD;AAAlB,KAAL,CAHD,CAAP;AAID;;AAGDE,EAAAA,SAAS,CAAC;AAACF,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,GAAD,EAAmC;AAC1C,WAAOA,CAAC,IAAIV,WAAW,CAACS,CAAD,CAAvB;AACD;;AAGDG,EAAAA,eAAe,CAAC;AAACH,IAAAA;AAAD,GAAD,EAAwB;AACrC,WAAO,MAAMG,eAAN,CAAsBV,UAAU,CAACO,CAAD,CAAhC,CAAP;AACD;;AAGDI,EAAAA,WAAW,CAAC;AAACJ,IAAAA;AAAD,GAAD,EAAgC;AACzC,WAAOK,MAAM,CAACX,aAAa,CAACM,CAAD,CAAd,CAAb;AACD;;AAGDM,EAAAA,cAAc,CAAC;AAACN,IAAAA;AAAD,GAAD,EAA0C;AACtD,WAAO;AAACA,MAAAA,CAAC,EAAER,YAAY,CAACQ,CAAD;AAAhB,KAAP;AACD;;AA3BqD","sourcesContent":["import {_Tileset2D as Tileset2D} from '@deck.gl/geo-layers';\nimport {bigIntToHex, cellToParent, cellToTile, getResolution, tileToCell} from 'quadbin';\n\n// For calculations bigint representation is used, but\n// for constructing URL also provide the hexidecimal value\ntype QuadbinTileIndex = {q: bigint; i?: string};\n\nexport default class QuadbinTileset2D extends Tileset2D {\n  // @ts-expect-error for spatial indices, TileSet2d should be parametrized by TileIndexT\n  getTileIndices(opts): QuadbinTileIndex[] {\n    return super\n      .getTileIndices(opts)\n      .map(tileToCell)\n      .map(q => ({q, i: bigIntToHex(q)}));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileId({q, i}: QuadbinTileIndex): string {\n    return i || bigIntToHex(q);\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileMetadata({q}: QuadbinTileIndex) {\n    return super.getTileMetadata(cellToTile(q));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileZoom({q}: QuadbinTileIndex): number {\n    return Number(getResolution(q));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getParentIndex({q}: QuadbinTileIndex): QuadbinTileIndex {\n    return {q: cellToParent(q)};\n  }\n}\n"],"file":"quadbin-tileset-2d.js"}