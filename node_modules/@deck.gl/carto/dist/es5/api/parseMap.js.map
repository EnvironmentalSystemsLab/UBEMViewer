{"version":3,"sources":["../../../src/api/parseMap.ts"],"names":["collisionFilterExtension","CollisionFilterExtension","parseMap","json","keplerMapConfig","datasets","token","version","config","mapState","mapStyle","visState","layers","layerBlending","interactionConfig","id","title","description","createdAt","updatedAt","initialViewState","reverse","map","type","visualChannels","dataId","dataset","find","d","data","Layer","propMap","defaultProps","styleProps","createStyleProps","createInteractionProps","createChannelProps","createParametersProp","parameters","createLoadOptions","e","log","error","message","undefined","blendFunc","blendEquation","Object","keys","length","pickable","tooltip","enabled","autoHighlight","mapProps","source","target","mapping","sourceKey","sourceValue","targetKey","entries","key","value","result","stroked","getLineColor","getFillColor","colorAccessor","OPACITY_MAP","Array","isArray","color","opacityKey","opacity","visConfig","highlightColor","enable3d","colorField","colorScale","radiusField","radiusScale","sizeField","sizeScale","strokeColorField","strokeColorScale","heightField","heightScale","textLabel","colorScaleType","colorAggregation","AGGREGATION","getColorValue","getColorWeight","name","aggregation","range","colorRange","altitude","columns","dataTransform","features","forEach","geometry","properties","coordinates","getPointRadius","sizeAggregation","radiusRange","sizeRange","fallbackOpacity","strokeOpacity","strokeColorAggregation","strokeColorRange","getElevation","heightAggregation","heightRange","customMarkers","maxIconSize","customMarkersUrl","customMarkersRange","useMaskedIcons","filled","pointType","getIcon","customMarkersField","fallbackUrl","_subLayerProps","loadOptions","image","imagebitmap","resizeWidth","resizeHeight","resizeQuality","getIconColor","getIconSize","rotationField","getIconAngle","field","mainLabel","secondaryLabel","collisionGroup","getTextAlignmentBaseline","alignment","getTextAnchor","anchor","getTextColor","textOutlineColor","outlineColor","textSizeScale","size","getSecondaryColor","secondaryField","secondaryOutlineColor","secondarySizeScale","getText","getSecondaryText","textCharacterSet","textFontFamily","textFontSettings","sdf","textFontWeight","textOutlineWidth","PointLabelLayer","extensions","collisionEnabled","getRadius","radius","accessToken","fetch","headers","Authorization"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AAaA;;AACA;;AACA;;AACA;;;;;;AAGA,IAAMA,wBAAwB,GAAG,IAAIC,oCAAJ,EAAjC;;AAEO,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,MAAOC,eAAP,GAA2CD,IAA3C,CAAOC,eAAP;AAAA,MAAwBC,QAAxB,GAA2CF,IAA3C,CAAwBE,QAAxB;AAAA,MAAkCC,KAAlC,GAA2CH,IAA3C,CAAkCG,KAAlC;AACA,qBAAOF,eAAe,CAACG,OAAhB,KAA4B,IAAnC,EAAyC,wBAAzC;AACA,8BAA6BH,eAAe,CAACI,MAA7C;AAAA,MAAOC,QAAP,yBAAOA,QAAP;AAAA,MAAiBC,QAAjB,yBAAiBA,QAAjB;AACA,+BAAmDN,eAAe,CAACI,MAAhB,CAAuBG,QAA1E;AAAA,MAAOC,MAAP,0BAAOA,MAAP;AAAA,MAAeC,aAAf,0BAAeA,aAAf;AAAA,MAA8BC,iBAA9B,0BAA8BA,iBAA9B;AAEA,SAAO;AACLC,IAAAA,EAAE,EAAEZ,IAAI,CAACY,EADJ;AAELC,IAAAA,KAAK,EAAEb,IAAI,CAACa,KAFP;AAGLC,IAAAA,WAAW,EAAEd,IAAI,CAACc,WAHb;AAILC,IAAAA,SAAS,EAAEf,IAAI,CAACe,SAJX;AAKLC,IAAAA,SAAS,EAAEhB,IAAI,CAACgB,SALX;AAMLC,IAAAA,gBAAgB,EAAEX,QANb;AAOLC,IAAAA,QAAQ,EAARA,QAPK;AAQLJ,IAAAA,KAAK,EAALA,KARK;AASLM,IAAAA,MAAM,EAAEA,MAAM,CAACS,OAAP,GAAiBC,GAAjB,CAAqB,gBAAwC;AAAA,UAAtCP,EAAsC,QAAtCA,EAAsC;AAAA,UAAlCQ,IAAkC,QAAlCA,IAAkC;AAAA,UAA5Bf,MAA4B,QAA5BA,MAA4B;AAAA,UAApBgB,cAAoB,QAApBA,cAAoB;;AACnE,UAAI;AACF,YAAOC,MAAP,GAAiBjB,MAAjB,CAAOiB,MAAP;AACA,YAAMC,OAA0B,GAAGrB,QAAQ,CAACsB,IAAT,CAAc,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACb,EAAF,KAASU,MAAb;AAAA,SAAf,CAAnC;AACA,2BAAOC,OAAP,wCAA+CD,MAA/C;AACA,YAAOI,IAAP,GAAeH,OAAf,CAAOG,IAAP;AACA,2BAAOA,IAAP,uCAA2CJ,MAA3C;;AACA,wBAAuC,wBAASF,IAAT,EAAef,MAAf,EAAuBkB,OAAvB,CAAvC;AAAA,YAAOI,KAAP,aAAOA,KAAP;AAAA,YAAcC,OAAd,aAAcA,OAAd;AAAA,YAAuBC,YAAvB,aAAuBA,YAAvB;;AACA,YAAMC,UAAU,GAAGC,gBAAgB,CAAC1B,MAAD,EAASuB,OAAT,CAAnC;AACA,eAAO,IAAID,KAAJ;AACLf,UAAAA,EAAE,EAAFA,EADK;AAELc,UAAAA,IAAI,EAAJA;AAFK,WAGFG,YAHE,GAIFG,sBAAsB,CAACrB,iBAAD,CAJpB,GAKFmB,UALE,GAMFG,kBAAkB,CAACrB,EAAD,EAAKQ,IAAL,EAAWf,MAAX,EAAmBgB,cAAnB,EAAmCK,IAAnC,CANhB,GAOFQ,oBAAoB,CAACxB,aAAD,EAAgBoB,UAAU,CAACK,UAAX,IAAyB,EAAzC,CAPlB,GAQFC,iBAAiB,CAACjC,KAAD,CARf,EAAP;AAUD,OAlBD,CAkBE,OAAOkC,CAAP,EAAe;AACfC,kBAAIC,KAAJ,CAAUF,CAAC,CAACG,OAAZ;;AACA,eAAOC,SAAP;AACD;AACF,KAvBO;AATH,GAAP;AAkCD;;AAED,SAASP,oBAAT,CAA8BxB,aAA9B,EAA6CyB,UAA7C,EAA8E;AAC5E,MAAIzB,aAAa,KAAK,UAAtB,EAAkC;AAChCyB,IAAAA,UAAU,CAACO,SAAX,GAAuB,UAAvB;AACAP,IAAAA,UAAU,CAACQ,aAAX;AACD,GAHD,MAGO,IAAIjC,aAAa,KAAK,aAAtB,EAAqC;AAC1CyB,IAAAA,UAAU,CAACO,SAAX,GAAuB,kBAAvB;AACAP,IAAAA,UAAU,CAACQ,aAAX,GAA2B,cAA3B;AACD;;AAED,SAAOC,MAAM,CAACC,IAAP,CAAYV,UAAZ,EAAwBW,MAAxB,GAAiC;AAACX,IAAAA,UAAU,EAAVA;AAAD,GAAjC,GAAgD,EAAvD;AACD;;AAED,SAASH,sBAAT,CAAgCrB,iBAAhC,EAAmD;AACjD,MAAMoC,QAAQ,GAAGpC,iBAAiB,IAAIA,iBAAiB,CAACqC,OAAlB,CAA0BC,OAAhE;AACA,SAAO;AACLC,IAAAA,aAAa,EAAEH,QADV;AAELA,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASI,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AACzC,OAAK,IAAMC,SAAX,IAAwBD,OAAxB,EAAiC;AAC/B,QAAME,WAAW,GAAGJ,MAAM,CAACG,SAAD,CAA1B;AACA,QAAME,SAAS,GAAGH,OAAO,CAACC,SAAD,CAAzB;;AACA,QAAIC,WAAW,KAAKf,SAApB,EAA+B;AAE7B;AACD;;AACD,QAAI,OAAOgB,SAAP,KAAqB,QAAzB,EAAmC;AACjCJ,MAAAA,MAAM,CAACI,SAAD,CAAN,GAAoBD,WAApB;AACD,KAFD,MAEO,IAAI,OAAOC,SAAP,KAAqB,UAAzB,EAAqC;AAC1C,0DAAqBb,MAAM,CAACc,OAAP,CAAeD,SAAS,CAACD,WAAD,CAAxB,EAAuC,CAAvC,CAArB;AAAA,UAAOG,GAAP;AAAA,UAAYC,KAAZ;;AACAP,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcC,KAAd;AACD,KAHM,MAGA,IAAI,sBAAOH,SAAP,MAAqB,QAAzB,EAAmC;AAExCN,MAAAA,QAAQ,CAACK,WAAD,EAAcH,MAAd,EAAsBI,SAAtB,CAAR;AACD;AACF;AACF;;AAED,SAAS1B,gBAAT,CAA0B1B,MAA1B,EAAkDiD,OAAlD,EAA2D;AACzD,MAAMO,MAA2B,GAAG,EAApC;AACAV,EAAAA,QAAQ,CAAC9C,MAAD,EAASwD,MAAT,EAAiBP,OAAjB,CAAR;;AAIA,MAAIO,MAAM,CAACC,OAAP,IAAkB,CAACD,MAAM,CAACE,YAA9B,EAA4C;AAC1CF,IAAAA,MAAM,CAACE,YAAP,GAAsBF,MAAM,CAACG,YAA7B;AACD;;AAED,OAAK,IAAMC,aAAX,IAA4BC,qBAA5B,EAAyC;AACvC,QAAIC,KAAK,CAACC,OAAN,CAAcP,MAAM,CAACI,aAAD,CAApB,CAAJ,EAA0C;AACxC,UAAMI,KAAK,oCAAOR,MAAM,CAACI,aAAD,CAAb,CAAX;AACA,UAAMK,UAAU,GAAGJ,sBAAYD,aAAZ,CAAnB;AACA,UAAMM,OAAO,GAAGlE,MAAM,CAACmE,SAAP,CAAiBF,UAAjB,CAAhB;AACAD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,8BAAeE,OAAf,CAAX;AACAV,MAAAA,MAAM,CAACI,aAAD,CAAN,GAAwBI,KAAxB;AACD;AACF;;AAEDR,EAAAA,MAAM,CAACY,cAAP,GAAwBpE,MAAM,CAACmE,SAAP,CAAiBE,QAAjB,GAA4B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,CAA5B,GAAkD,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,EAAe,GAAf,CAA1E;AACA,SAAOb,MAAP;AACD;;AAGD,SAAS5B,kBAAT,CACErB,EADF,EAEEQ,IAFF,EAGEf,MAHF,EAIEgB,cAJF,EAKEK,IALF,EAME;AACA,MACEiD,UADF,GASItD,cATJ,CACEsD,UADF;AAAA,MAEEC,UAFF,GASIvD,cATJ,CAEEuD,UAFF;AAAA,MAGEC,WAHF,GASIxD,cATJ,CAGEwD,WAHF;AAAA,MAIEC,WAJF,GASIzD,cATJ,CAIEyD,WAJF;AAAA,MAKEC,SALF,GASI1D,cATJ,CAKE0D,SALF;AAAA,MAMEC,SANF,GASI3D,cATJ,CAME2D,SANF;AAAA,MAOEC,gBAPF,GASI5D,cATJ,CAOE4D,gBAPF;AAAA,MAQEC,gBARF,GASI7D,cATJ,CAQE6D,gBARF;AAUA,MAAKC,WAAL,GAAiC9D,cAAjC,CAAK8D,WAAL;AAAA,MAAkBC,WAAlB,GAAiC/D,cAAjC,CAAkB+D,WAAlB;;AACA,MAAIhE,IAAI,KAAK,WAAb,EAA0B;AACxB+D,IAAAA,WAAW,GAAGJ,SAAd;AACAK,IAAAA,WAAW,GAAGJ,SAAd;AACD;;AACD,MAAOK,SAAP,GAA+BhF,MAA/B,CAAOgF,SAAP;AAAA,MAAkBb,SAAlB,GAA+BnE,MAA/B,CAAkBmE,SAAlB;AACA,MAAMX,MAA2B,GAAG,EAApC;;AAEA,MAAIzC,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,SAAhC,EAA2C;AACzCyC,IAAAA,MAAM,CAACyB,cAAP,GAAwBV,UAAxB;;AACA,QAAID,UAAJ,EAAgB;AACd,UAAOY,gBAAP,GAA2BlF,MAAM,CAACmE,SAAlC,CAAOe,gBAAP;;AACA,UAAI,CAACC,sBAAYD,gBAAZ,CAAL,EAAoC;AAClC1B,QAAAA,MAAM,CAAC4B,aAAP,GAAuB,qCAAsBd,UAAtB,EAAkCY,gBAAlC,EAAoD7D,IAApD,CAAvB;AACD,OAFD,MAEO;AACLmC,QAAAA,MAAM,CAAC6B,cAAP,GAAwB,UAAAjE,CAAC;AAAA,iBAAIA,CAAC,CAACkD,UAAU,CAACgB,IAAZ,CAAL;AAAA,SAAzB;AACD;AACF;AACF,GAVD,MAUO,IAAIhB,UAAJ,EAAgB;AACrB,QAAyBiB,WAAzB,GAA2DpB,SAA3D,CAAOe,gBAAP;AAAA,QAAkDM,KAAlD,GAA2DrB,SAA3D,CAAsCsB,UAAtC;AACAjC,IAAAA,MAAM,CAACG,YAAP,GAAsB,gCACpBW,UADoB,EAGpBC,UAHoB,EAIpB;AAACgB,MAAAA,WAAW,EAAXA,WAAD;AAAcC,MAAAA,KAAK,EAALA;AAAd,KAJoB,EAKpBrB,SAAS,CAACD,OALU,EAMpB7C,IANoB,CAAtB;AAQD;;AAED,MAAIN,IAAI,KAAK,OAAb,EAAsB;AAAA;;AACpB,QAAM2E,QAAQ,sBAAG1F,MAAM,CAAC2F,OAAV,oDAAG,gBAAgBD,QAAjC;;AACA,QAAIA,QAAJ,EAAc;AACZlC,MAAAA,MAAM,CAACoC,aAAP,GAAuB,UAAAvE,IAAI,EAAI;AAC7BA,QAAAA,IAAI,CAACwE,QAAL,CAAcC,OAAd,CAAsB,iBAA4B;AAAA,cAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,cAAhBC,UAAgB,SAAhBA,UAAgB;AAChD,cAAOjF,IAAP,GAA4BgF,QAA5B,CAAOhF,IAAP;AAAA,cAAakF,WAAb,GAA4BF,QAA5B,CAAaE,WAAb;;AACA,cAAIlF,IAAI,KAAK,OAAb,EAAsB;AACpBkF,YAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBD,UAAU,CAACN,QAAD,CAA3B;AACD;AACF,SALD;AAMA,eAAOrE,IAAP;AACD,OARD;AASD;AACF;;AAED,MAAImD,WAAW,IAAIE,SAAnB,EAA8B;AAC5BlB,IAAAA,MAAM,CAAC0C,cAAP,GAAwB,+BAEtB1B,WAAW,IAAIE,SAFO,EAItBD,WAAW,IAAIE,SAJO,EAKtBR,SAAS,CAACgC,eALY,EAMtBhC,SAAS,CAACiC,WAAV,IAAyBjC,SAAS,CAACkC,SANb,EAOtBhF,IAPsB,CAAxB;AASD;;AAED,MAAIuD,gBAAJ,EAAsB;AACpB,QAAM0B,eAAe,GAAGvF,IAAI,KAAK,OAAT,GAAmBoD,SAAS,CAACD,OAA7B,GAAuC,CAA/D;AACA,QAAMA,OAAO,GACXC,SAAS,CAACoC,aAAV,KAA4BnE,SAA5B,GAAwC+B,SAAS,CAACoC,aAAlD,GAAkED,eADpE;AAEA,QAA+Bf,YAA/B,GAAuEpB,SAAvE,CAAOqC,sBAAP;AAAA,QAA8DhB,MAA9D,GAAuErB,SAAvE,CAA4CsC,gBAA5C;AACAjD,IAAAA,MAAM,CAACE,YAAP,GAAsB,gCACpBkB,gBADoB,EAGpBC,gBAHoB,EAKpB;AAACU,MAAAA,WAAW,EAAXA,YAAD;AAAcC,MAAAA,KAAK,EAALA;AAAd,KALoB,EAMpBtB,OANoB,EAOpB7C,IAPoB,CAAtB;AASD;;AAED,MAAIyD,WAAW,IAAIX,SAAS,CAACE,QAA7B,EAAuC;AACrCb,IAAAA,MAAM,CAACkD,YAAP,GAAsB,+BACpB5B,WADoB,EAGpBC,WAHoB,EAIpBZ,SAAS,CAACwC,iBAJU,EAKpBxC,SAAS,CAACyC,WAAV,IAAyBzC,SAAS,CAACkC,SALf,EAMpBhF,IANoB,CAAtB;AAQD;;AAED,MAAI8C,SAAS,CAAC0C,aAAd,EAA6B;AAC3B,QAAMC,WAAW,GAAG,gCAAiB3C,SAAjB,EAA4BnD,cAA5B,CAApB;AACA,QAAOkF,cAAP,GAAuC1C,MAAvC,CAAO0C,cAAP;AAAA,QAAuBvC,YAAvB,GAAuCH,MAAvC,CAAuBG,YAAvB;AACA,QAAOoD,gBAAP,GAAuE5C,SAAvE,CAAO4C,gBAAP;AAAA,QAAyBC,kBAAzB,GAAuE7C,SAAvE,CAAyB6C,kBAAzB;AAAA,QAAqDC,cAArD,GAAuE9C,SAAvE,CAA6C+C,MAA7C;AAEA1D,IAAAA,MAAM,CAAC2D,SAAP,GAAmB,MAAnB;AACA3D,IAAAA,MAAM,CAAC4D,OAAP,GAAiB,kCACfpG,cAAc,CAACqG,kBADA,EAEfL,kBAFe,EAGf;AAACM,MAAAA,WAAW,EAAEP,gBAAd;AAAgCD,MAAAA,WAAW,EAAXA,WAAhC;AAA6CG,MAAAA,cAAc,EAAdA;AAA7C,KAHe,EAIf5F,IAJe,CAAjB;AAMAmC,IAAAA,MAAM,CAAC+D,cAAP,GAAwB;AACtB,qBAAe;AACbC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE;AACL1G,YAAAA,IAAI,EAAE;AADD,WADI;AAIX2G,UAAAA,WAAW,EAAE;AACXC,YAAAA,WAAW,EAAEb,WADF;AAEXc,YAAAA,YAAY,EAAEd,WAFH;AAGXe,YAAAA,aAAa,EAAE;AAHJ;AAJF;AADA;AADO,KAAxB;;AAeA,QAAIlE,YAAY,IAAIsD,cAApB,EAAoC;AAClCzD,MAAAA,MAAM,CAACsE,YAAP,GAAsBnE,YAAtB;AACD;;AAED,QAAIuC,cAAJ,EAAoB;AAClB1C,MAAAA,MAAM,CAACuE,WAAP,GAAqB7B,cAArB;AACD;;AAED,QAAIlF,cAAc,CAACgH,aAAnB,EAAkC;AAChCxE,MAAAA,MAAM,CAACyE,YAAP,GAAsB,8BACpB,+BAAgBjH,cAAc,CAACgH,aAA/B,EAA8C5F,SAA9C,EAAyD,IAAzD,EAA+DA,SAA/D,EAA0Ef,IAA1E,CADoB,CAAtB;AAGD;AACF,GAxCD,MAwCO,IAAIN,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,SAAjC,EAA4C;AACjDyC,IAAAA,MAAM,CAAC2D,SAAP,GAAmB,QAAnB;AACD;;AAED,MAAInC,SAAS,IAAIA,SAAS,CAACvC,MAAvB,IAAiCuC,SAAS,CAAC,CAAD,CAAT,CAAakD,KAAlD,EAAyD;AACvD,kDAAoClD,SAApC;AAAA,QAAOmD,SAAP;AAAA,QAAkBC,cAAlB;;AACA,QAAMC,cAAc,GAAG9H,EAAvB;AAGaiD,IAAAA,MAAM,CAAC8E,wBALmC,GAUnDH,SAVmD,CAKrDI,SALqD;AAM7C/E,IAAAA,MAAM,CAACgF,aANsC,GAUnDL,SAVmD,CAMrDM,MANqD;AAO9CjF,IAAAA,MAAM,CAACkF,YAPuC,GAUnDP,SAVmD,CAOrDnE,KAPqD;AAQvCR,IAAAA,MAAM,CAACmF,gBARgC,GAUnDR,SAVmD,CAQrDS,YARqD;AAS/CpF,IAAAA,MAAM,CAACqF,aATwC,GAUnDV,SAVmD,CASrDW,IATqD;;AAWvD,gBAKIV,cAAc,IAAI,EALtB;AAAA,QACSW,iBADT,SACE/E,KADF;AAAA,QAESgF,cAFT,SAEEd,KAFF;AAAA,QAGgBe,qBAHhB,SAGEL,YAHF;AAAA,QAIQM,kBAJR,SAIEJ,IAJF;;AAOAtF,IAAAA,MAAM,CAAC2F,OAAP,GAAiBhB,SAAS,CAACD,KAAV,IAAmB,+BAAgBC,SAAS,CAACD,KAA1B,EAAiC7G,IAAjC,CAApC;AACA,QAAM+H,gBAAgB,GAAGJ,cAAc,IAAI,+BAAgBA,cAAhB,EAAgC3H,IAAhC,CAA3C;AAEAmC,IAAAA,MAAM,CAAC2D,SAAP,aAAsB3D,MAAM,CAAC2D,SAA7B;AACA3D,IAAAA,MAAM,CAAC6F,gBAAP,GAA0B,MAA1B;AACA7F,IAAAA,MAAM,CAAC8F,cAAP,GAAwB,aAAxB;AACA9F,IAAAA,MAAM,CAAC+F,gBAAP,GAA0B;AAACC,MAAAA,GAAG,EAAE;AAAN,KAA1B;AACAhG,IAAAA,MAAM,CAACiG,cAAP,GAAwB,GAAxB;AACAjG,IAAAA,MAAM,CAACkG,gBAAP,GAA0B,CAA1B;AAEAlG,IAAAA,MAAM,CAAC+D,cAAP,mCACK/D,MAAM,CAAC+D,cADZ;AAEE;AACExG,QAAAA,IAAI,EAAE4I,wBADR;AAEEC,QAAAA,UAAU,EAAE,CAACpK,wBAAD,CAFd;AAGEqK,QAAAA,gBAAgB,EAAE,IAHpB;AAIExB,QAAAA,cAAc,EAAdA;AAJF,SAOM7E,MAAM,CAAC0C,cAAP,GACA;AAAC4D,QAAAA,SAAS,EAAEtG,MAAM,CAAC0C;AAAnB,OADA,GAEA;AAACzB,QAAAA,WAAW,EAAEN,SAAS,CAAC4F;AAAxB,OATN,GAWMf,cAAc,IAAI;AACpBI,QAAAA,gBAAgB,EAAhBA,gBADoB;AAEpBL,QAAAA,iBAAiB,EAAjBA,iBAFoB;AAGpBG,QAAAA,kBAAkB,EAAlBA,kBAHoB;AAIpBD,QAAAA,qBAAqB,EAArBA;AAJoB,OAXxB;AAFF;AAqBD;;AAED,SAAOzF,MAAP;AACD;;AAED,SAASzB,iBAAT,CAA2BiI,WAA3B,EAAgD;AAC9C,SAAO;AACLxC,IAAAA,WAAW,EAAE;AAACyC,MAAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,mBAAYH,WAAZ;AAAd;AAAV;AAAR;AADR,GAAP;AAGD","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AGGREGATION,\n  getLayer,\n  getColorAccessor,\n  getColorValueAccessor,\n  getSizeAccessor,\n  getTextAccessor,\n  OPACITY_MAP,\n  opacityToAlpha,\n  getIconUrlAccessor,\n  negateAccessor,\n  getMaxMarkerSize\n} from './layer-map';\nimport PointLabelLayer from '../layers/point-label-layer';\nimport {log} from '@deck.gl/core';\nimport {CollisionFilterExtension} from '@deck.gl/extensions';\nimport {assert} from '../utils';\nimport {MapDataset, MapLayerConfig, VisualChannels} from './types';\n\nconst collisionFilterExtension = new CollisionFilterExtension();\n\nexport function parseMap(json) {\n  const {keplerMapConfig, datasets, token} = json;\n  assert(keplerMapConfig.version === 'v1', 'Only support Kepler v1');\n  const {mapState, mapStyle} = keplerMapConfig.config;\n  const {layers, layerBlending, interactionConfig} = keplerMapConfig.config.visState;\n\n  return {\n    id: json.id,\n    title: json.title,\n    description: json.description,\n    createdAt: json.createdAt,\n    updatedAt: json.updatedAt,\n    initialViewState: mapState,\n    mapStyle,\n    token,\n    layers: layers.reverse().map(({id, type, config, visualChannels}) => {\n      try {\n        const {dataId} = config;\n        const dataset: MapDataset | null = datasets.find(d => d.id === dataId);\n        assert(dataset, `No dataset matching dataId: ${dataId}`);\n        const {data} = dataset;\n        assert(data, `No data loaded for dataId: ${dataId}`);\n        const {Layer, propMap, defaultProps} = getLayer(type, config, dataset);\n        const styleProps = createStyleProps(config, propMap);\n        return new Layer({\n          id,\n          data,\n          ...defaultProps,\n          ...createInteractionProps(interactionConfig),\n          ...styleProps,\n          ...createChannelProps(id, type, config, visualChannels, data), // Must come after style\n          ...createParametersProp(layerBlending, styleProps.parameters || {}), // Must come after style\n          ...createLoadOptions(token)\n        });\n      } catch (e: any) {\n        log.error(e.message)();\n        return undefined;\n      }\n    })\n  };\n}\n\nfunction createParametersProp(layerBlending, parameters: Record<string, any>) {\n  if (layerBlending === 'additive') {\n    parameters.blendFunc = [GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = GL.FUNC_ADD;\n  } else if (layerBlending === 'subtractive') {\n    parameters.blendFunc = [GL.ONE, GL.ONE_MINUS_DST_COLOR, GL.SRC_ALPHA, GL.DST_ALPHA];\n    parameters.blendEquation = [GL.FUNC_SUBTRACT, GL.FUNC_ADD];\n  }\n\n  return Object.keys(parameters).length ? {parameters} : {};\n}\n\nfunction createInteractionProps(interactionConfig) {\n  const pickable = interactionConfig && interactionConfig.tooltip.enabled;\n  return {\n    autoHighlight: pickable,\n    pickable\n  };\n}\n\nfunction mapProps(source, target, mapping) {\n  for (const sourceKey in mapping) {\n    const sourceValue = source[sourceKey];\n    const targetKey = mapping[sourceKey];\n    if (sourceValue === undefined) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (typeof targetKey === 'string') {\n      target[targetKey] = sourceValue;\n    } else if (typeof targetKey === 'function') {\n      const [key, value] = Object.entries(targetKey(sourceValue))[0];\n      target[key] = value;\n    } else if (typeof targetKey === 'object') {\n      // Nested definition, recurse down one level (also handles arrays)\n      mapProps(sourceValue, target, targetKey);\n    }\n  }\n}\n\nfunction createStyleProps(config: MapLayerConfig, mapping) {\n  const result: Record<string, any> = {};\n  mapProps(config, result, mapping);\n\n  // Kepler format sometimes omits strokeColor. TODO: remove once we can rely on\n  // `strokeColor` always being set when `stroke: true`.\n  if (result.stroked && !result.getLineColor) {\n    result.getLineColor = result.getFillColor;\n  }\n\n  for (const colorAccessor in OPACITY_MAP) {\n    if (Array.isArray(result[colorAccessor])) {\n      const color = [...result[colorAccessor]];\n      const opacityKey = OPACITY_MAP[colorAccessor];\n      const opacity = config.visConfig[opacityKey];\n      color[3] = opacityToAlpha(opacity);\n      result[colorAccessor] = color;\n    }\n  }\n\n  result.highlightColor = config.visConfig.enable3d ? [255, 255, 255, 60] : [252, 242, 26, 255];\n  return result;\n}\n\n/* eslint-disable complexity, max-statements */\nfunction createChannelProps(\n  id: string,\n  type: string,\n  config: MapLayerConfig,\n  visualChannels: VisualChannels,\n  data\n) {\n  const {\n    colorField,\n    colorScale,\n    radiusField,\n    radiusScale,\n    sizeField,\n    sizeScale,\n    strokeColorField,\n    strokeColorScale\n  } = visualChannels;\n  let {heightField, heightScale} = visualChannels;\n  if (type === 'hexagonId') {\n    heightField = sizeField;\n    heightScale = sizeScale;\n  }\n  const {textLabel, visConfig} = config;\n  const result: Record<string, any> = {};\n\n  if (type === 'grid' || type === 'hexagon') {\n    result.colorScaleType = colorScale;\n    if (colorField) {\n      const {colorAggregation} = config.visConfig;\n      if (!AGGREGATION[colorAggregation]) {\n        result.getColorValue = getColorValueAccessor(colorField, colorAggregation, data);\n      } else {\n        result.getColorWeight = d => d[colorField.name];\n      }\n    }\n  } else if (colorField) {\n    const {colorAggregation: aggregation, colorRange: range} = visConfig;\n    result.getFillColor = getColorAccessor(\n      colorField,\n      // @ts-ignore\n      colorScale,\n      {aggregation, range},\n      visConfig.opacity,\n      data\n    );\n  }\n\n  if (type === 'point') {\n    const altitude = config.columns?.altitude;\n    if (altitude) {\n      result.dataTransform = data => {\n        data.features.forEach(({geometry, properties}) => {\n          const {type, coordinates} = geometry;\n          if (type === 'Point') {\n            coordinates[2] = properties[altitude];\n          }\n        });\n        return data;\n      };\n    }\n  }\n\n  if (radiusField || sizeField) {\n    result.getPointRadius = getSizeAccessor(\n      // @ts-ignore\n      radiusField || sizeField,\n      // @ts-ignore\n      radiusScale || sizeScale,\n      visConfig.sizeAggregation,\n      visConfig.radiusRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (strokeColorField) {\n    const fallbackOpacity = type === 'point' ? visConfig.opacity : 1;\n    const opacity =\n      visConfig.strokeOpacity !== undefined ? visConfig.strokeOpacity : fallbackOpacity;\n    const {strokeColorAggregation: aggregation, strokeColorRange: range} = visConfig;\n    result.getLineColor = getColorAccessor(\n      strokeColorField,\n      // @ts-ignore\n      strokeColorScale,\n      // @ts-ignore\n      {aggregation, range},\n      opacity,\n      data\n    );\n  }\n\n  if (heightField && visConfig.enable3d) {\n    result.getElevation = getSizeAccessor(\n      heightField,\n      // @ts-ignore\n      heightScale,\n      visConfig.heightAggregation,\n      visConfig.heightRange || visConfig.sizeRange,\n      data\n    );\n  }\n\n  if (visConfig.customMarkers) {\n    const maxIconSize = getMaxMarkerSize(visConfig, visualChannels);\n    const {getPointRadius, getFillColor} = result;\n    const {customMarkersUrl, customMarkersRange, filled: useMaskedIcons} = visConfig;\n\n    result.pointType = 'icon';\n    result.getIcon = getIconUrlAccessor(\n      visualChannels.customMarkersField,\n      customMarkersRange,\n      {fallbackUrl: customMarkersUrl, maxIconSize, useMaskedIcons},\n      data\n    );\n    result._subLayerProps = {\n      'points-icon': {\n        loadOptions: {\n          image: {\n            type: 'imagebitmap'\n          },\n          imagebitmap: {\n            resizeWidth: maxIconSize,\n            resizeHeight: maxIconSize,\n            resizeQuality: 'high'\n          }\n        }\n      }\n    };\n\n    if (getFillColor && useMaskedIcons) {\n      result.getIconColor = getFillColor;\n    }\n\n    if (getPointRadius) {\n      result.getIconSize = getPointRadius;\n    }\n\n    if (visualChannels.rotationField) {\n      result.getIconAngle = negateAccessor(\n        getSizeAccessor(visualChannels.rotationField, undefined, null, undefined, data)\n      );\n    }\n  } else if (type === 'point' || type === 'tileset') {\n    result.pointType = 'circle';\n  }\n\n  if (textLabel && textLabel.length && textLabel[0].field) {\n    const [mainLabel, secondaryLabel] = textLabel;\n    const collisionGroup = id;\n\n    ({\n      alignment: result.getTextAlignmentBaseline,\n      anchor: result.getTextAnchor,\n      color: result.getTextColor,\n      outlineColor: result.textOutlineColor,\n      size: result.textSizeScale\n    } = mainLabel);\n    const {\n      color: getSecondaryColor,\n      field: secondaryField,\n      outlineColor: secondaryOutlineColor,\n      size: secondarySizeScale\n    } = secondaryLabel || {};\n\n    result.getText = mainLabel.field && getTextAccessor(mainLabel.field, data);\n    const getSecondaryText = secondaryField && getTextAccessor(secondaryField, data);\n\n    result.pointType = `${result.pointType}+text`;\n    result.textCharacterSet = 'auto';\n    result.textFontFamily = 'Inter, sans';\n    result.textFontSettings = {sdf: true};\n    result.textFontWeight = 600;\n    result.textOutlineWidth = 3;\n\n    result._subLayerProps = {\n      ...result._subLayerProps,\n      'points-text': {\n        type: PointLabelLayer,\n        extensions: [collisionFilterExtension],\n        collisionEnabled: true,\n        collisionGroup,\n\n        // getPointRadius already has radiusScale baked in, so only pass one or the other\n        ...(result.getPointRadius\n          ? {getRadius: result.getPointRadius}\n          : {radiusScale: visConfig.radius}),\n\n        ...(secondaryField && {\n          getSecondaryText,\n          getSecondaryColor,\n          secondarySizeScale,\n          secondaryOutlineColor\n        })\n      }\n    };\n  }\n\n  return result;\n}\n\nfunction createLoadOptions(accessToken: string) {\n  return {\n    loadOptions: {fetch: {headers: {Authorization: `Bearer ${accessToken}`}}}\n  };\n}\n"],"file":"parseMap.js"}