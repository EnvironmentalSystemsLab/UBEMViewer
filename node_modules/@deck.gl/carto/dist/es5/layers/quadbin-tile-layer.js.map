{"version":3,"sources":["../../../src/layers/quadbin-tile-layer.ts"],"names":["renderSubLayers","props","data","length","isBigInt","id","QuadbinLayer","getQuadbin","d","defaultProps","aggregationResLevel","QuadbinTileLayer","setState","tileJSON","changeFlags","dataChanged","tiles","state","maxZoom","parseInt","maxresolution","SpatialIndexTileLayer","TilesetClass","QuadbinTileset2D","loadOptions","getLoadOptions","cartoSpatialTile","scheme","mimeType","CompositeLayer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAQA;;AACA;;AACA;;AACA;;;;;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AACtC,MAAOC,IAAP,GAAeD,KAAf,CAAOC,IAAP;AACA,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,MAAnB,EAA2B,OAAO,IAAP;AAC3B,MAAMC,QAAQ,GAAG,OAAOF,IAAI,CAAC,CAAD,CAAJ,CAAQG,EAAf,KAAsB,QAAvC;AACA,SAAO,IAAIC,qBAAJ,CAAiBL,KAAjB,EAAwB;AAC7BM,IAAAA,UAAU,EAAEH,QAAQ,GAAG,UAAAI,CAAC;AAAA,aAAIA,CAAC,CAACH,EAAN;AAAA,KAAJ,GAAe,UAAAG,CAAC;AAAA,aAAI,0BAAYA,CAAC,CAACH,EAAd,CAAJ;AAAA;AADP,GAAxB,CAAP;AAGD,CAPM;;;AASP,IAAMI,YAAiD,GAAG;AACxDC,EAAAA,mBAAmB,EAAE;AADmC,CAA1D;;IAcqBC,gB;;;;;;;;;;;;;;;;;;;;;WAWnB,2BAAwB;AACtB,WAAKC,QAAL,CAAc;AAACV,QAAAA,IAAI,EAAE,IAAP;AAAaW,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AACD;;;WAED,2BAAyD;AAAA,UAA5CC,WAA4C,QAA5CA,WAA4C;;AACvD,UAAIA,WAAW,CAACC,WAAhB,EAA6B;AAC3B,YAAKb,IAAL,GAAa,KAAKD,KAAlB,CAAKC,IAAL;AACA,YAAMW,QAAQ,GAAGX,IAAjB;AACAA,QAAAA,IAAI,GAAIW,QAAD,CAAkBG,KAAzB;AACA,aAAKJ,QAAL,CAAc;AAACV,UAAAA,IAAI,EAAJA,IAAD;AAAOW,UAAAA,QAAQ,EAARA;AAAP,SAAd;AACD;AACF;;;WAED,wBAA0C;AACxC,wBAAyB,KAAKI,KAA9B;AAAA,UAAOf,IAAP,eAAOA,IAAP;AAAA,UAAaW,QAAb,eAAaA,QAAb;AACA,UAAMK,OAAO,GAAGC,QAAQ,CAACN,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEO,aAAX,CAAxB;AACA,aAAO,CACL,IAAIC,8BAAJ,CAA0B,KAAKpB,KAA/B,EAAsC;AACpCI,QAAAA,EAAE,+BAAwB,KAAKJ,KAAL,CAAWI,EAAnC,CADkC;AAEpCH,QAAAA,IAAI,EAAJA,IAFoC;AAIpCoB,QAAAA,YAAY,EAAEC,yBAJsB;AAKpCvB,QAAAA,eAAe,EAAfA,eALoC;AAMpCkB,QAAAA,OAAO,EAAPA,OANoC;AAOpCM,QAAAA,WAAW,kCACN,KAAKC,cAAL,EADM;AAETC,UAAAA,gBAAgB,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAFT;AAGTC,UAAAA,QAAQ,EAAE;AAHD;AAPyB,OAAtC,CADK,CAAP;AAeD;;;EAvCOC,oB;;;8BAHWlB,gB,eAIA,kB;8BAJAA,gB,kBAKGF,Y","sourcesContent":["import {\n  CompositeLayer,\n  CompositeLayerProps,\n  Layer,\n  LayersList,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\nimport QuadbinLayer, {QuadbinLayerProps} from './quadbin-layer';\nimport QuadbinTileset2D from './quadbin-tileset-2d';\nimport SpatialIndexTileLayer from './spatial-index-tile-layer';\nimport {hexToBigInt} from 'quadbin';\n\nexport const renderSubLayers = props => {\n  const {data} = props;\n  if (!data || !data.length) return null;\n  const isBigInt = typeof data[0].id === 'bigint';\n  return new QuadbinLayer(props, {\n    getQuadbin: isBigInt ? d => d.id : d => hexToBigInt(d.id)\n  });\n};\n\nconst defaultProps: DefaultProps<QuadbinTileLayerProps> = {\n  aggregationResLevel: 6\n};\n\n/** All properties supported by QuadbinTileLayer. */\nexport type QuadbinTileLayerProps<DataT = any> = _QuadbinTileLayerProps<DataT> &\n  CompositeLayerProps;\n\n/** Properties added by QuadbinTileLayer. */\ntype _QuadbinTileLayerProps<DataT> = QuadbinLayerProps<DataT> & {\n  data: string;\n  aggregationResLevel?: number;\n};\n\nexport default class QuadbinTileLayer<\n  DataT = any,\n  ExtraProps extends {} = {}\n> extends CompositeLayer<ExtraProps & Required<_QuadbinTileLayerProps<DataT>>> {\n  static layerName = 'QuadbinTileLayer';\n  static defaultProps = defaultProps;\n\n  state!: {\n    tileJSON: any;\n    data: any;\n  };\n  initializeState(): void {\n    this.setState({data: null, tileJSON: null});\n  }\n\n  updateState({changeFlags}: UpdateParameters<this>): void {\n    if (changeFlags.dataChanged) {\n      let {data} = this.props;\n      const tileJSON = data;\n      data = (tileJSON as any).tiles;\n      this.setState({data, tileJSON});\n    }\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {data, tileJSON} = this.state;\n    const maxZoom = parseInt(tileJSON?.maxresolution);\n    return [\n      new SpatialIndexTileLayer(this.props, {\n        id: `quadbin-tile-layer-${this.props.id}`,\n        data,\n        // TODO: Tileset2D should be generic over TileIndex type\n        TilesetClass: QuadbinTileset2D as any,\n        renderSubLayers,\n        maxZoom,\n        loadOptions: {\n          ...this.getLoadOptions(),\n          cartoSpatialTile: {scheme: 'quadbin'},\n          mimeType: 'application/vnd.carto-spatial-tile'\n        }\n      })\n    ];\n  }\n}\n"],"file":"quadbin-tile-layer.js"}