{"version":3,"sources":["../../../src/layers/quadbin-tileset-2d.ts"],"names":["QuadbinTileset2D","opts","map","tileToCell","q","i","Number","Tileset2D"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;IAMqBA,gB;;;;;;;;;;;;WAEnB,wBAAeC,IAAf,EAAyC;AACvC,aAAO,iHACWA,IADX,EAEJC,GAFI,CAEAC,mBAFA,EAGJD,GAHI,CAGA,UAAAE,CAAC;AAAA,eAAK;AAACA,UAAAA,CAAC,EAADA,CAAD;AAAIC,UAAAA,CAAC,EAAE,0BAAYD,CAAZ;AAAP,SAAL;AAAA,OAHD,CAAP;AAID;;;WAGD,yBAA4C;AAAA,UAAjCA,CAAiC,QAAjCA,CAAiC;AAAA,UAA9BC,CAA8B,QAA9BA,CAA8B;AAC1C,aAAOA,CAAC,IAAI,0BAAYD,CAAZ,CAAZ;AACD;;;WAGD,gCAAuC;AAAA,UAAtBA,CAAsB,SAAtBA,CAAsB;AACrC,+HAA6B,yBAAWA,CAAX,CAA7B;AACD;;;WAGD,4BAA2C;AAAA,UAA9BA,CAA8B,SAA9BA,CAA8B;AACzC,aAAOE,MAAM,CAAC,4BAAcF,CAAd,CAAD,CAAb;AACD;;;WAGD,+BAAwD;AAAA,UAAxCA,CAAwC,SAAxCA,CAAwC;AACtD,aAAO;AAACA,QAAAA,CAAC,EAAE,2BAAaA,CAAb;AAAJ,OAAP;AACD;;;EA3B2CG,qB","sourcesContent":["import {_Tileset2D as Tileset2D} from '@deck.gl/geo-layers';\nimport {bigIntToHex, cellToParent, cellToTile, getResolution, tileToCell} from 'quadbin';\n\n// For calculations bigint representation is used, but\n// for constructing URL also provide the hexidecimal value\ntype QuadbinTileIndex = {q: bigint; i?: string};\n\nexport default class QuadbinTileset2D extends Tileset2D {\n  // @ts-expect-error for spatial indices, TileSet2d should be parametrized by TileIndexT\n  getTileIndices(opts): QuadbinTileIndex[] {\n    return super\n      .getTileIndices(opts)\n      .map(tileToCell)\n      .map(q => ({q, i: bigIntToHex(q)}));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileId({q, i}: QuadbinTileIndex): string {\n    return i || bigIntToHex(q);\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileMetadata({q}: QuadbinTileIndex) {\n    return super.getTileMetadata(cellToTile(q));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getTileZoom({q}: QuadbinTileIndex): number {\n    return Number(getResolution(q));\n  }\n\n  // @ts-expect-error TileIndex must be generic\n  getParentIndex({q}: QuadbinTileIndex): QuadbinTileIndex {\n    return {q: cellToParent(q)};\n  }\n}\n"],"file":"quadbin-tileset-2d.js"}