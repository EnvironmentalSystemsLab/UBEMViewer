{"version":3,"sources":["../../../src/layers/point-label-layer.ts"],"names":["LEFT","TOP","RIGHT","BOTTOM","EnhancedTextBackgroundLayer","shaders","vs","replaceAll","replace","TextBackgroundLayer","EnhancedTextLayer","layer","renderPass","background","id","includes","TextLayer","defaultProps","getRadius","type","value","radiusScale","min","PointLabelLayer","secondary","props","anchor","getTextAnchor","alignment","getAlignmentBaseline","getSecondaryText","secondarySizeScale","sizeScale","xMult","yMult","xPadding","yPadding","secondaryOffset","yOffset","radiusPadding","d","info","r","paddingX","paddingY","backgroundPadding","updateTriggers","updateTriggersOverride","data","characterSet","fontFamily","fontSettings","fontWeight","outlineColor","outlineWidth","getColor","getPosition","getSubLayerProps","getPixelOffset","getSize","_subLayerProps","getText","getSecondaryColor","secondaryOutlineColor","calculatePixelOffset","calculateBackgroundPadding","out","renderTextLayer","Boolean","CompositeLayer"],"mappings":"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","sourcesContent":["import {\n  Accessor,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  DefaultProps,\n  Layer,\n  LayersList\n} from '@deck.gl/core';\nimport {\n  TextLayer,\n  TextLayerProps,\n  _TextBackgroundLayer as TextBackgroundLayer\n} from '@deck.gl/layers';\n\nconst [LEFT, TOP, RIGHT, BOTTOM] = [0, 1, 2, 3];\n\nclass EnhancedTextBackgroundLayer extends TextBackgroundLayer {\n  static layerName = 'EnhancedTextBackgroundLayer';\n\n  getShaders() {\n    const shaders = super.getShaders();\n    let vs = shaders.vs;\n\n    // Modify shader so that the padding is offset by the pixel offset to ensure the padding\n    // always captures the anchor point. As padding is uniform we cannot pass it a per-label value\n    vs = vs.replaceAll('padding.', '_padding.');\n    vs = vs.replace(\n      'void main(void) {',\n      'void main(void) {\\n  vec4 _padding = padding + instancePixelOffsets.xyxy * vec4(1.0, 1.0, -1.0, -1.0);'\n    );\n\n    return {...shaders, vs};\n  }\n}\n\n// TextLayer which includes modified text-background-layer-vertex shader and only renders the\n// primary background layer in the collision pass\nclass EnhancedTextLayer extends TextLayer {\n  static layerName = 'EnhancedTextLayer';\n\n  filterSubLayer({layer, renderPass}) {\n    const background = layer.id.includes('primary-background');\n    if (renderPass === 'collision') {\n      return background; // Only draw primary background layer in collision pass\n    }\n\n    return !background; // Do not draw background layer in other passes\n  }\n}\n\nconst defaultProps: DefaultProps<PointLabelLayerProps> = {\n  ...TextLayer.defaultProps,\n  getRadius: {type: 'accessor', value: 1},\n  radiusScale: {type: 'number', min: 0, value: 1}\n};\n\n/** All properties supported by PointLabelLayer. */\nexport type PointLabelLayerProps<DataT = any> = _PointLabelLayerProps<DataT> &\n  TextLayerProps &\n  CompositeLayerProps;\n\n/** Properties added by PointLabelLayer. */\ntype _PointLabelLayerProps<DataT> = TextLayerProps<DataT> & {\n  /**\n   * Radius multiplier.\n   * @default 1\n   */\n  radiusScale?: number;\n  /**\n   * Radius accessor.\n   * @default 1\n   */\n  getRadius?: Accessor<DataT, number>;\n  /**\n   * Secondary label text accessor\n   */\n  getSecondaryText?: Accessor<DataT, string>;\n  /**\n   * Secondary label color accessor\n   * @default [0, 0, 0, 255]\n   */\n  getSecondaryColor?: Accessor<DataT, Color>;\n  /**\n   * Secondary label color of outline around the text, in `[r, g, b, [a]]`. Each channel is a number between 0-255 and `a` is 255 if not supplied.\n   * @default [0, 0, 0, 255]\n   */\n  secondaryOutlineColor?: Color;\n  /**\n   * Secondary label text size multiplier.\n   * @default 1\n   */\n  secondarySizeScale?: number;\n};\n\nexport default class PointLabelLayer<\n  DataT = any,\n  ExtraProps extends {} = {}\n> extends CompositeLayer<ExtraProps & Required<_PointLabelLayerProps<DataT>>> {\n  static layerName = 'PointLabelLayer';\n  static defaultProps = defaultProps;\n\n  calculatePixelOffset(secondary) {\n    const {\n      getTextAnchor: anchor,\n      getAlignmentBaseline: alignment,\n      getRadius,\n      getSecondaryText,\n      radiusScale,\n      secondarySizeScale,\n      sizeScale\n    } = this.props;\n    const xMult = anchor === 'middle' ? 0 : anchor === 'start' ? 1 : -1;\n    const yMult = alignment === 'center' ? 0 : alignment === 'bottom' ? 1 : -1;\n\n    // Padding based on font size (font size / 4)\n    const xPadding = sizeScale / 4;\n    const yPadding = sizeScale * (1 + 1 / 4);\n\n    // Place secondary label under main label (secondary label always 'top' baseline aligned)\n    const secondaryOffset = 0.6 * (1 - yMult) * sizeScale;\n    let yOffset = secondary ? secondaryOffset : 0;\n\n    // Special case, position relative to secondary label\n    if (anchor === 'middle' && alignment === 'top' && getSecondaryText) {\n      yOffset -= secondaryOffset;\n      yOffset -= secondarySizeScale;\n      yOffset += sizeScale;\n    }\n\n    // Padding based on point radius (radius/ 4)\n    const radiusPadding = 1 + 1 / 4;\n\n    return typeof getRadius === 'function'\n      ? (d, info) => {\n          const r = (info ? getRadius(d, info) : 1) * radiusScale * radiusPadding;\n          return [xMult * (r + xPadding), yMult * (r + yPadding) + yOffset];\n        }\n      : [\n          xMult * (getRadius * radiusScale * radiusPadding + xPadding),\n          yMult * (getRadius * radiusScale * radiusPadding + yPadding) + yOffset\n        ];\n  }\n\n  calculateBackgroundPadding() {\n    const {getTextAnchor: anchor, getAlignmentBaseline: alignment, sizeScale} = this.props;\n\n    // Heuristics to avoid label overlap\n    const paddingX = 12 * sizeScale;\n    const paddingY = 3 * sizeScale;\n    const backgroundPadding = [0, 0, 0, 0];\n    if (alignment === 'top') {\n      backgroundPadding[TOP] = paddingY;\n    } else if (alignment === 'bottom') {\n      backgroundPadding[BOTTOM] = paddingY;\n    } else {\n      backgroundPadding[TOP] = 0.5 * paddingY;\n      backgroundPadding[BOTTOM] = 0.5 * paddingY;\n    }\n    if (anchor === 'start') {\n      backgroundPadding[LEFT] = paddingX;\n    } else if (anchor === 'end') {\n      backgroundPadding[RIGHT] = paddingX;\n    } else {\n      backgroundPadding[LEFT] = 0.5 * paddingX;\n      backgroundPadding[RIGHT] = 0.5 * paddingX;\n    }\n\n    return backgroundPadding;\n  }\n\n  renderTextLayer(id, {updateTriggers: updateTriggersOverride = {}, ...props}): EnhancedTextLayer {\n    const {\n      data,\n\n      characterSet,\n      fontFamily,\n      fontSettings,\n      fontWeight,\n      outlineColor,\n      outlineWidth,\n      sizeScale,\n      radiusScale,\n\n      getAlignmentBaseline,\n      getColor,\n      getPosition,\n      getTextAnchor,\n\n      updateTriggers\n    } = this.props;\n\n    return new EnhancedTextLayer(\n      this.getSubLayerProps({\n        id,\n        data,\n\n        characterSet,\n        fontFamily,\n        fontSettings,\n        fontWeight,\n        outlineColor,\n        outlineWidth,\n        sizeScale,\n\n        getAlignmentBaseline,\n        getColor,\n        getPosition,\n        getTextAnchor,\n\n        updateTriggers: {\n          ...updateTriggers,\n          ...updateTriggersOverride,\n          getPixelOffset: [\n            updateTriggers.getRadius,\n            updateTriggers.getTextAnchor,\n            updateTriggers.getAlignmentBaseline,\n            radiusScale,\n            sizeScale\n          ]\n        }\n      }),\n      {\n        getSize: 1,\n        _subLayerProps: {background: {type: EnhancedTextBackgroundLayer}}\n      },\n      props\n    );\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {\n      getText,\n      getSecondaryColor,\n      getSecondaryText,\n      secondaryOutlineColor,\n      secondarySizeScale,\n      updateTriggers\n    } = this.props;\n    const getPixelOffset = this.calculatePixelOffset(false);\n    const backgroundPadding = this.calculateBackgroundPadding();\n    const out = [\n      // Text doesn't update via updateTrigger for some reason\n      this.renderTextLayer(`${updateTriggers.getText}-primary`, {\n        backgroundPadding,\n        getText,\n        getPixelOffset,\n        background: true // Only use background for primary label for faster collisions\n      }),\n      Boolean(getSecondaryText) &&\n        this.renderTextLayer(`${updateTriggers.getSecondaryText}-secondary`, {\n          getText: getSecondaryText,\n          getPixelOffset: this.calculatePixelOffset(true),\n          getAlignmentBaseline: 'top',\n          // updateTriggers: {getText: updateTriggers.getSecondaryText},\n\n          // Optional overrides\n          ...(getSecondaryColor && {getColor: getSecondaryColor}),\n          ...(secondarySizeScale && {sizeScale: secondarySizeScale}),\n          ...(secondaryOutlineColor && {outlineColor: secondaryOutlineColor})\n        })\n    ];\n\n    return out;\n  }\n}\n"],"file":"point-label-layer.js"}