{"version":3,"file":"compute-vertex-normals.js","names":["_core","require","_constants","_assert","_primitiveIterator","_modes","_getAttributeFromGeometry","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","computeVertexNormals","geometry","assert","getPrimitiveModeType","mode","GL","TRIANGLES","_getPositions","getPositions","positions","values","normals","Float32Array","vectorA","Vector3","vectorB","vectorC","vectorCB","vectorAB","_iterator","makePrimitiveIterator","_step","primitive","fromArray","i1","i2","i3","subVectors","normal","cross","normalize","primitiveIndex","x","y","z"],"sources":["../../../../src/geometry/attributes/compute-vertex-normals.ts"],"sourcesContent":["import type {TypedArray} from '@math.gl/core';\nimport {Vector3} from '@math.gl/core';\nimport {GL} from '../constants';\nimport {assert} from '../utils/assert';\nimport {makePrimitiveIterator} from '../iterators/primitive-iterator';\nimport {getPrimitiveModeType} from '../primitives/modes';\nimport {getPositions} from './get-attribute-from-geometry';\n\ntype Geometry = {\n  mode: any;\n  indices?: {size: number; values: TypedArray};\n  attributes?: {};\n};\n/**\n * Computes vertex normals for a geometry\n * @param param0\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport function computeVertexNormals(geometry: Geometry): Float32Array {\n  // Only support GL.TRIANGLES, GL.TRIANGLE_STRIP, GL.TRIANGLE_FAN\n  assert(getPrimitiveModeType(geometry.mode) === GL.TRIANGLES, 'TRIANGLES required');\n\n  const {values: positions} = getPositions(geometry);\n\n  const normals = new Float32Array(positions.length);\n\n  const vectorA = new Vector3();\n  const vectorB = new Vector3();\n  const vectorC = new Vector3();\n\n  const vectorCB = new Vector3();\n  const vectorAB = new Vector3();\n\n  for (const primitive of makePrimitiveIterator(geometry)) {\n    vectorA.fromArray(positions, primitive.i1 * 3);\n    vectorB.fromArray(positions, primitive.i2 * 3 + 3);\n    vectorC.fromArray(positions, primitive.i3 * 3 + 6);\n\n    vectorCB.subVectors(vectorC, vectorB);\n    vectorAB.subVectors(vectorA, vectorB);\n    const normal = vectorCB.cross(vectorAB);\n    normal.normalize();\n    // @ts-ignore\n    const {primitiveIndex} = primitive;\n\n    normals[primitiveIndex * 9 + 0] = normal.x;\n    normals[primitiveIndex * 9 + 1] = normal.y;\n    normals[primitiveIndex * 9 + 2] = normal.z;\n\n    normals[primitiveIndex * 9 + 3] = normal.x;\n    normals[primitiveIndex * 9 + 4] = normal.y;\n    normals[primitiveIndex * 9 + 5] = normal.z;\n\n    normals[primitiveIndex * 9 + 6] = normal.x;\n    normals[primitiveIndex * 9 + 7] = normal.y;\n    normals[primitiveIndex * 9 + 8] = normal.z;\n  }\n\n  return normals;\n}\n"],"mappings":"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"}