{"version":3,"file":"managed-array.js","names":["assert","ManagedArray","constructor","length","arguments","undefined","_defineProperty","Map","_array","Array","_length","values","get","index","set","element","_map","has","delete","splice","peek","push","pop","reserve","resize","trim","reset","find","target"],"sources":["../../../src/utils/managed-array.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n  _map = new Map();\n  _array: any[];\n  _length: number;\n\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n"],"mappings":"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"}