{"version":3,"file":"tile-3d.js","names":["Vector3","Matrix4","CullingVolume","load","TILE_REFINEMENT","TILE_CONTENT_STATE","TILESET_TYPE","createBoundingVolume","getCartographicBounds","getTiles3DScreenSpaceError","getProjectedRadius","get3dTilesOptions","TilesetTraverser","scratchVector","defined","x","undefined","Tile3D","constructor","tileset","header","parentHeader","extendedId","arguments","length","_defineProperty","UNLOADED","id","url","parent","refine","_getRefine","type","contentUrl","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","Object","seal","destroy","isDestroyed","selected","_selectedFrame","_frameNumber","isVisible","_visible","isVisibleAndInRequestVolume","_inRequestVolume","hasRenderContent","hasEmptyContent","hasTilesetContent","hasChildren","children","contentReady","contentState","READY","contentAvailable","Boolean","_expiredContent","contentFailed","hasUnloadedContent","contentUnloaded","contentExpired","EXPIRED","FAILED","distanceToCamera","_distanceToCamera","screenSpaceError","_screenSpaceError","boundingBox","_boundingBox","boundingVolume","getScreenSpaceError","frameState","useParentLodMetric","I3S","TILES3D","Error","unselect","_getGpuMemoryUsageInBytes","content","gpuMemoryUsageInBytes","byteLength","_getPriority","traverser","_traverser","skipLevelOfDetail","options","maySkipTile","ADD","_touchedFrame","useParentScreenSpaceError","rootScreenSpaceError","root","Math","max","loadContent","expired","_expireDate","LOADING","requestToken","_requestScheduler","scheduleRequest","bind","getTileUrl","loader","loadOptions","isTileset","_getLoaderSpecificOptions","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","error","done","unloadContent","updateVisibility","viewportIds","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","cameraSpaceZDepth","_ref","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","updateExpiration","now","Date","lessThan","extras","lodMetricType","console","warn","lodMetricValue","tileHeader","transform","clone","multiplyRight","parentInitialTransform","_initialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","depth","level","_shouldRefine","_centerZDepth","_stackLength","_selectionDepth","_visitedFrame","_requestedFrame","_priority","REPLACE","indexOf","disableSkipLevelOfDetail","didTransformChange","equals","loaderId","i3s","_tileOptions","attributeUrls","textureUrl","textureFormat","textureLoaderOptions","materialDefinition","isDracoGeometry","mbs","_tilesetOptions","store","attributeStorageInfo","fields","isTileHeader"],"sources":["../../../src/tileset/tile-3d.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport type {DoublyLinkedListNode} from '../utils/doubly-linked-list-node';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {\n  createBoundingVolume,\n  getCartographicBounds,\n  CartographicBounds\n} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  /* Specifies the type of refine that is used when traversing this tile for rendering. */\n  refine: number;\n  type: string;\n  contentUrl: string;\n  /** Different refinement algorithms used by I3S and 3D tiles */\n  lodMetricType: 'geometricError' | 'maxScreenThreshold' = 'geometricError';\n  /** The error, in meters, introduced if this tile is rendered and its children are not. */\n  lodMetricValue: number = 0;\n\n  /** @todo math.gl is not exporting BoundingVolume base type? */\n  boundingVolume: any = null;\n\n  /**\n   * The tile's content.  This represents the actual tile's payload,\n   * not the content's metadata in the tileset JSON file.\n   */\n  content: any = null;\n  contentState: number = TILE_CONTENT_STATE.UNLOADED;\n  gpuMemoryUsageInBytes: number = 0;\n\n  /** The tile's children - an array of Tile3D objects. */\n  children: Tile3D[] = [];\n  depth: number = 0;\n  viewportIds: any[] = [];\n  transform = new Matrix4();\n  extensions: any = null;\n  /** TODO Cesium 3d tiles specific */\n  implicitTiling?: any = null;\n\n  /** Container to store application specific data */\n  userData: Record<string, any> = {};\n\n  computedTransform: any;\n  hasEmptyContent: boolean = false;\n  hasTilesetContent: boolean = false;\n\n  traverser = new TilesetTraverser({});\n\n  /** Used by TilesetCache */\n  _cacheNode: DoublyLinkedListNode | null = null;\n\n  private _frameNumber: any = null;\n\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any = null;\n  private _expiredContent: any = null;\n\n  private _boundingBox?: CartographicBounds;\n\n  /** updated every frame for tree traversal and rendering optimizations: */\n  public _distanceToCamera: number = 0;\n  _screenSpaceError: number = 0;\n  private _visibilityPlaneMask: any;\n  private _visible: boolean | undefined = undefined;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4 = new Matrix4();\n\n  // Used by traverser, cannot be marked private\n  _priority: number = 0;\n  _selectedFrame: number = 0;\n  _requestedFrame: number = 0;\n  _selectionDepth: number = 0;\n  _touchedFrame: number = 0;\n  _centerZDepth: number = 0;\n  _shouldRefine: boolean = false;\n  _stackLength: number = 0;\n  _visitedFrame: number = 0;\n  _inRequestVolume: boolean = false;\n  _lodJudge: any = null; // TODO i3s specific, needs to remove\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /**\n   * Get bounding box in cartographic coordinates\n   * @returns [min, max] each in [longitude, latitude, altitude]\n   */\n  get boundingBox(): CartographicBounds {\n    if (!this._boundingBox) {\n      this._boundingBox = getCartographicBounds(this.header.boundingVolume, this.boundingVolume);\n    }\n    return this._boundingBox;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /**\n   * Memory usage of tile on GPU\n   */\n  _getGpuMemoryUsageInBytes(): number {\n    return this.content.gpuMemoryUsageInBytes || this.content.byteLength || 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          // @ts-expect-error\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    } else {\n      this.gpuMemoryUsageInBytes = this._getGpuMemoryUsageInBytes();\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"mappings":"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"}