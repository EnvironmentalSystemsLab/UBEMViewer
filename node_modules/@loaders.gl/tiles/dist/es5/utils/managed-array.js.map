{"version":3,"file":"managed-array.js","names":["_loaderUtils","require","ManagedArray","length","arguments","undefined","_classCallCheck2","default","_defineProperty2","Map","_array","Array","_length","_createClass2","key","get","set","value","index","assert","element","_map","has","delete","_delete","splice","peek","push","pop","reserve","resize","trim","reset","find","target","exports"],"sources":["../../../src/utils/managed-array.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {assert} from '@loaders.gl/loader-utils';\n\n/**\n * A wrapper around arrays so that the internal length of the array can be manually managed.\n *\n * @alias ManagedArray\n * @constructor\n * @private\n *\n * @param {Number} [length=0] The initial length of the array.\n */\nexport class ManagedArray {\n  _map = new Map();\n  _array: any[];\n  _length: number;\n\n  constructor(length = 0) {\n    this._array = new Array(length);\n    this._length = length;\n  }\n\n  /**\n   * Gets or sets the length of the array.\n   * If the set length is greater than the length of the internal array, the internal array is resized.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Number\n   */\n  get length() {\n    return this._length;\n  }\n\n  set length(length) {\n    this._length = length;\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Gets the internal array.\n   *\n   * @memberof ManagedArray.prototype\n   * @type Array\n   * @readonly\n   */\n  get values() {\n    return this._array;\n  }\n\n  /**\n   * Gets the element at an index.\n   *\n   * @param {Number} index The index to get.\n   */\n  get(index) {\n    assert(index < this._array.length);\n    return this._array[index];\n  }\n\n  /**\n   * Sets the element at an index. Resizes the array if index is greater than the length of the array.\n   *\n   * @param {Number} index The index to set.\n   * @param {*} element The element to set at index.\n   */\n  set(index, element) {\n    assert(index >= 0);\n\n    if (index >= this.length) {\n      this.length = index + 1;\n    }\n\n    if (this._map.has(this._array[index])) {\n      this._map.delete(this._array[index]);\n    }\n\n    this._array[index] = element;\n    this._map.set(element, index);\n  }\n\n  delete(element) {\n    const index = this._map.get(element);\n    if (index >= 0) {\n      this._array.splice(index, 1);\n      this._map.delete(element);\n      this.length--;\n    }\n  }\n\n  /**\n   * Returns the last element in the array without modifying the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  peek() {\n    return this._array[this._length - 1];\n  }\n\n  /**\n   * Push an element into the array.\n   *\n   * @param {*} element The element to push.\n   */\n  push(element) {\n    if (!this._map.has(element)) {\n      const index = this.length++;\n      this._array[index] = element;\n      this._map.set(element, index);\n    }\n  }\n\n  /**\n   * Pop an element from the array.\n   *\n   * @returns {*} The last element in the array.\n   */\n  pop() {\n    const element = this._array[--this.length];\n    this._map.delete(element);\n    return element;\n  }\n\n  /**\n   * Resize the internal array if length > _array.length.\n   *\n   * @param {Number} length The length.\n   */\n  reserve(length) {\n    assert(length >= 0);\n\n    if (length > this._array.length) {\n      this._array.length = length;\n    }\n  }\n\n  /**\n   * Resize the array.\n   *\n   * @param {Number} length The length.\n   */\n  resize(length) {\n    assert(length >= 0);\n\n    this.length = length;\n  }\n\n  /**\n   * Trim the internal array to the specified length. Defaults to the current length.\n   *\n   * @param {Number} [length] The length.\n   */\n  trim(length) {\n    if (length === null || length === undefined) {\n      length = this.length;\n    }\n    this._array.length = length;\n  }\n\n  reset() {\n    this._array = [];\n    this._map = new Map();\n    this._length = 0;\n  }\n\n  find(target) {\n    return this._map.has(target);\n  }\n}\n"],"mappings":"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"}