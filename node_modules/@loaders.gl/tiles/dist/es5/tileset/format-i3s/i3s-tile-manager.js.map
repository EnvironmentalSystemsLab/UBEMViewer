{"version":3,"file":"i3s-tile-manager.js","names":["_i3sPendingTilesRegister","require","STATUS","REQUESTED","COMPLETED","ERROR","I3STileManager","_classCallCheck2","default","_defineProperty2","I3SPendingTilesRegister","_statusMap","_createClass2","key","value","add","request","callback","frameState","_this","frameNumber","id","viewport","status","pendingTilesRegister","register","then","data","_this$_statusMap$key$","actualFrameNumber","deregister","catch","error","_this$_statusMap$key$2","update","_this$_statusMap$key$3","newFrameNumber","newViewportId","find","hasPendingTiles","viewportId","isZero","exports"],"sources":["../../../../src/tileset/format-i3s/i3s-tile-manager.ts"],"sourcesContent":["import {FrameState} from '../helpers/frame-state';\nimport {I3SPendingTilesRegister} from './i3s-pending-tiles-register';\n\nconst STATUS = {\n  REQUESTED: 'REQUESTED',\n  COMPLETED: 'COMPLETED',\n  ERROR: 'ERROR'\n};\n\n// A helper class to manage tile metadata fetching\nexport class I3STileManager {\n  private _statusMap: object;\n  private pendingTilesRegister = new I3SPendingTilesRegister();\n\n  constructor() {\n    this._statusMap = {};\n  }\n\n  /**\n   * Add request to map\n   * @param request - node metadata request\n   * @param key - unique key\n   * @param callback - callback after request completed\n   * @param frameState - frameState data\n   */\n  add(request, key, callback, frameState: FrameState) {\n    if (!this._statusMap[key]) {\n      const {\n        frameNumber,\n        viewport: {id}\n      } = frameState;\n      this._statusMap[key] = {request, callback, key, frameState, status: STATUS.REQUESTED};\n      // Register pending request for the frameNumber\n      this.pendingTilesRegister.register(id, frameNumber);\n      request()\n        .then((data) => {\n          this._statusMap[key].status = STATUS.COMPLETED;\n          const {\n            frameNumber: actualFrameNumber,\n            viewport: {id}\n          } = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(id, actualFrameNumber);\n          this._statusMap[key].callback(data, frameState);\n        })\n        .catch((error) => {\n          this._statusMap[key].status = STATUS.ERROR;\n          const {\n            frameNumber: actualFrameNumber,\n            viewport: {id}\n          } = this._statusMap[key].frameState;\n          // Deregister pending request for the frameNumber\n          this.pendingTilesRegister.deregister(id, actualFrameNumber);\n          callback(error);\n        });\n    }\n  }\n\n  /**\n   * Update request if it is still actual for the new frameState\n   * @param key - unique key\n   * @param frameState - frameState data\n   */\n  update(key, frameState: FrameState) {\n    if (this._statusMap[key]) {\n      // Deregister pending request for the old frameNumber\n      const {\n        frameNumber,\n        viewport: {id}\n      } = this._statusMap[key].frameState;\n      this.pendingTilesRegister.deregister(id, frameNumber);\n\n      // Register pending request for the new frameNumber\n      const {\n        frameNumber: newFrameNumber,\n        viewport: {id: newViewportId}\n      } = frameState;\n      this.pendingTilesRegister.register(newViewportId, newFrameNumber);\n      this._statusMap[key].frameState = frameState;\n    }\n  }\n\n  /**\n   * Find request in the map\n   * @param key - unique key\n   * @returns\n   */\n  find(key) {\n    return this._statusMap[key];\n  }\n\n  /**\n   * Check it there are pending tile headers for the particular frameNumber\n   * @param viewportId\n   * @param frameNumber\n   * @returns\n   */\n  hasPendingTiles(viewportId: string, frameNumber: number): boolean {\n    return !this.pendingTilesRegister.isZero(viewportId, frameNumber);\n  }\n}\n"],"mappings":";;;;;;;;;;AACA,IAAAA,wBAAA,GAAAC,OAAA;AAEA,IAAMC,MAAM,GAAG;EACbC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE;AACT,CAAC;AAAC,IAGWC,cAAc;EAIzB,SAAAA,eAAA,EAAc;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,cAAA;IAAA,IAAAG,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA,gCAFiB,IAAIE,gDAAuB,CAAC,CAAC;IAG1D,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;EACtB;EAAC,IAAAC,aAAA,CAAAJ,OAAA,EAAAF,cAAA;IAAAO,GAAA;IAAAC,KAAA,EASD,SAAAC,IAAIC,OAAO,EAAEH,GAAG,EAAEI,QAAQ,EAAEC,UAAsB,EAAE;MAAA,IAAAC,KAAA;MAClD,IAAI,CAAC,IAAI,CAACR,UAAU,CAACE,GAAG,CAAC,EAAE;QACzB,IACEO,WAAW,GAETF,UAAU,CAFZE,WAAW;UACAC,EAAE,GACXH,UAAU,CADZI,QAAQ,CAAGD,EAAE;QAEf,IAAI,CAACV,UAAU,CAACE,GAAG,CAAC,GAAG;UAACG,OAAO,EAAPA,OAAO;UAAEC,QAAQ,EAARA,QAAQ;UAAEJ,GAAG,EAAHA,GAAG;UAAEK,UAAU,EAAVA,UAAU;UAAEK,MAAM,EAAErB,MAAM,CAACC;QAAS,CAAC;QAErF,IAAI,CAACqB,oBAAoB,CAACC,QAAQ,CAACJ,EAAE,EAAED,WAAW,CAAC;QACnDJ,OAAO,CAAC,CAAC,CACNU,IAAI,CAAC,UAACC,IAAI,EAAK;UACdR,KAAI,CAACR,UAAU,CAACE,GAAG,CAAC,CAACU,MAAM,GAAGrB,MAAM,CAACE,SAAS;UAC9C,IAAAwB,qBAAA,GAGIT,KAAI,CAACR,UAAU,CAACE,GAAG,CAAC,CAACK,UAAU;YAFpBW,iBAAiB,GAAAD,qBAAA,CAA9BR,WAAW;YACAC,EAAE,GAAAO,qBAAA,CAAbN,QAAQ,CAAGD,EAAE;UAGfF,KAAI,CAACK,oBAAoB,CAACM,UAAU,CAACT,EAAE,EAAEQ,iBAAiB,CAAC;UAC3DV,KAAI,CAACR,UAAU,CAACE,GAAG,CAAC,CAACI,QAAQ,CAACU,IAAI,EAAET,UAAU,CAAC;QACjD,CAAC,CAAC,CACDa,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBb,KAAI,CAACR,UAAU,CAACE,GAAG,CAAC,CAACU,MAAM,GAAGrB,MAAM,CAACG,KAAK;UAC1C,IAAA4B,sBAAA,GAGId,KAAI,CAACR,UAAU,CAACE,GAAG,CAAC,CAACK,UAAU;YAFpBW,iBAAiB,GAAAI,sBAAA,CAA9Bb,WAAW;YACAC,EAAE,GAAAY,sBAAA,CAAbX,QAAQ,CAAGD,EAAE;UAGfF,KAAI,CAACK,oBAAoB,CAACM,UAAU,CAACT,EAAE,EAAEQ,iBAAiB,CAAC;UAC3DZ,QAAQ,CAACe,KAAK,CAAC;QACjB,CAAC,CAAC;MACN;IACF;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EAOD,SAAAoB,OAAOrB,GAAG,EAAEK,UAAsB,EAAE;MAClC,IAAI,IAAI,CAACP,UAAU,CAACE,GAAG,CAAC,EAAE;QAExB,IAAAsB,sBAAA,GAGI,IAAI,CAACxB,UAAU,CAACE,GAAG,CAAC,CAACK,UAAU;UAFjCE,WAAW,GAAAe,sBAAA,CAAXf,WAAW;UACAC,EAAE,GAAAc,sBAAA,CAAbb,QAAQ,CAAGD,EAAE;QAEf,IAAI,CAACG,oBAAoB,CAACM,UAAU,CAACT,EAAE,EAAED,WAAW,CAAC;QAGrD,IACegB,cAAc,GAEzBlB,UAAU,CAFZE,WAAW;UACIiB,aAAa,GAC1BnB,UAAU,CADZI,QAAQ,CAAGD,EAAE;QAEf,IAAI,CAACG,oBAAoB,CAACC,QAAQ,CAACY,aAAa,EAAED,cAAc,CAAC;QACjE,IAAI,CAACzB,UAAU,CAACE,GAAG,CAAC,CAACK,UAAU,GAAGA,UAAU;MAC9C;IACF;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAOD,SAAAwB,KAAKzB,GAAG,EAAE;MACR,OAAO,IAAI,CAACF,UAAU,CAACE,GAAG,CAAC;IAC7B;EAAC;IAAAA,GAAA;IAAAC,KAAA,EAQD,SAAAyB,gBAAgBC,UAAkB,EAAEpB,WAAmB,EAAW;MAChE,OAAO,CAAC,IAAI,CAACI,oBAAoB,CAACiB,MAAM,CAACD,UAAU,EAAEpB,WAAW,CAAC;IACnE;EAAC;EAAA,OAAAd,cAAA;AAAA;AAAAoC,OAAA,CAAApC,cAAA,GAAAA,cAAA"}