import type { LoaderWithParser, LoaderOptions } from '@loaders.gl/loader-utils';
import type { SAXParserOptions } from './sax-ts/sax';
import { FastXMLParserOptions } from './lib/parsers/parse-xml';
export type XMLLoaderOptions = LoaderOptions & {
    xml?: {
        parser?: 'fast-xml-parser' | string;
        /** XML is typically PascalCase, JavaScript prefects camelCase */
        uncapitalizeKeys?: boolean;
        removeNSPrefix?: boolean;
        textNodeName?: string;
        arrayPaths?: string[];
    };
    /** @deprecated Experimental, passes options to fast-xml-parser, IF it is being used */
    _fastXML?: FastXMLParserOptions;
    /** @deprecated Experimental, passes options to the SAX XML parser, IF it is being used. */
    _sax?: SAXParserOptions;
};
/**
 * Loader for XML files
 */
export declare const XMLLoader: {
    name: string;
    id: string;
    module: string;
    version: any;
    worker: boolean;
    extensions: string[];
    mimeTypes: string[];
    testText: typeof testXMLFile;
    options: {
        xml: {
            parser: string;
            uncapitalizeKeys: boolean;
            removeNSPrefix: boolean;
            textNodeName: string;
            arrayPaths: never[];
        };
    };
    parse: (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) => Promise<any>;
    parseTextSync: (text: string, options?: XMLLoaderOptions) => any;
};
declare function testXMLFile(text: string): boolean;
export declare const _typecheckXMLLoader: LoaderWithParser;
export {};
//# sourceMappingURL=xml-loader.d.ts.map