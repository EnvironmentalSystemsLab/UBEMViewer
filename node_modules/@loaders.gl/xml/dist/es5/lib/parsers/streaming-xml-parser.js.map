{"version":3,"file":"streaming-xml-parser.js","names":["_sax","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","StreamingXMLParser","options","_this","_classCallCheck2","undefined","freeze","container","reset","parser","SAXParser","onready","previousStates","currentState","onopentag","_ref","name","attributes","isSelfClosing","_openObject","emit","onkey","onclosetag","_closeObject","onopenarray","_openArray","onclosearray","_closeArray","ontext","value","_pushOrSet","onerror","error","onend","result","pop","_createClass2","write","chunk","close","_this$currentState","Array","isArray","newContainer","exports"],"sources":["../../../../src/lib/parsers/streaming-xml-parser.ts"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport {SAXParser, SAXParserOptions} from '../../sax-ts/sax';\n// import JSONPath from '../jsonpath/jsonpath';\n\nexport type StreamingXMLParserOptions = SAXParserOptions;\n\n/**\n * StreamingXMLParser builds a JSON object using the events emitted by the SAX parser\n */\nexport class StreamingXMLParser {\n  readonly parser: SAXParser;\n  result = undefined;\n  previousStates = [];\n  currentState = Object.freeze({container: [], key: null});\n  // jsonpath: JSONPath = new JSONPath();\n\n  constructor(options: SAXParserOptions) {\n    this.reset();\n    this.parser = new SAXParser({\n      onready: () => {\n        this.previousStates.length = 0;\n        this.currentState.container.length = 0;\n      },\n\n      onopentag: ({name, attributes, isSelfClosing}) => {\n        this._openObject({});\n        if (typeof name !== 'undefined') {\n          this.parser.emit('onkey', name);\n        }\n      },\n\n      onkey: (name) => {\n        this.currentState.key = name;\n      },\n\n      onclosetag: () => {\n        this._closeObject();\n      },\n\n      onopenarray: () => {\n        this._openArray();\n      },\n\n      onclosearray: () => {\n        this._closeArray();\n      },\n\n      ontext: (value) => {\n        this._pushOrSet(value);\n      },\n\n      onerror: (error) => {\n        throw error;\n      },\n\n      onend: () => {\n        this.result = this.currentState.container.pop();\n      },\n\n      ...options\n    });\n  }\n\n  reset(): void {\n    this.result = undefined;\n    this.previousStates = [];\n    this.currentState = Object.freeze({container: [], key: null});\n  }\n\n  write(chunk): void {\n    this.parser.write(chunk);\n  }\n\n  close(): void {\n    this.parser.close();\n  }\n\n  // PRIVATE METHODS\n\n  _pushOrSet(value): void {\n    const {container, key} = this.currentState;\n    if (key !== null) {\n      container[key] = value;\n      this.currentState.key = null;\n    } else if (Array.isArray(container)) {\n      container.push(value);\n    } else if (container) {\n      // debugger\n    }\n  }\n\n  _openArray(newContainer = []): void {\n    // this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {container: newContainer, isArray: true, key: null};\n  }\n\n  _closeArray(): void {\n    // this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n\n  _openObject(newContainer = {}): void {\n    // this.jsonpath.push(null);\n    this._pushOrSet(newContainer);\n    this.previousStates.push(this.currentState);\n    this.currentState = {container: newContainer, isArray: false, key: null};\n  }\n\n  _closeObject(): void {\n    // this.jsonpath.pop();\n    this.currentState = this.previousStates.pop();\n  }\n}\n"],"mappings":"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"}