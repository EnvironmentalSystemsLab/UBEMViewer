{"version":3,"file":"xml-loader.js","names":["_parseXml","require","_uncapitalize","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","VERSION","XMLLoader","name","id","module","version","worker","extensions","mimeTypes","testText","testXMLFile","options","xml","parser","uncapitalizeKeys","removeNSPrefix","textNodeName","arrayPaths","parse","_parse","_asyncToGenerator2","_regenerator","mark","_callee","arrayBuffer","wrap","_callee$","_context","prev","next","abrupt","parseTextSync","TextDecoder","decode","stop","_x","_x2","text","exports","startsWith","_options$xml","xmlOptions","fastXMLOptions","allowBooleanAttributes","ignoreDeclaration","isArray","jpath","isLeafNode","isAttribute","_xmlOptions$arrayPath","array","Boolean","some","path","_fastXML","fastParseXML","Error","_typecheckXMLLoader"],"sources":["../../src/xml-loader.ts"],"sourcesContent":["import type {LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {SAXParserOptions} from './sax-ts/sax';\nimport {fastParseXML, FastXMLParserOptions} from './lib/parsers/parse-xml';\nimport {uncapitalizeKeys} from './lib/xml-utils/uncapitalize';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type XMLLoaderOptions = LoaderOptions & {\n  xml?: {\n    // TODO - type this harder\n    parser?: 'fast-xml-parser' | string;\n    /** XML is typically PascalCase, JavaScript prefects camelCase */\n    uncapitalizeKeys?: boolean;\n    removeNSPrefix?: boolean;\n    textNodeName?: string;\n    arrayPaths?: string[];\n  };\n  /** @deprecated Experimental, passes options to fast-xml-parser, IF it is being used */\n  _fastXML?: FastXMLParserOptions;\n  /** @deprecated Experimental, passes options to the SAX XML parser, IF it is being used. */\n  _sax?: SAXParserOptions;\n};\n\n/**\n * Loader for XML files\n */\nexport const XMLLoader = {\n  name: 'XML',\n  id: 'xml',\n  module: 'xml',\n  version: VERSION,\n  worker: false,\n  extensions: ['xml'],\n  mimeTypes: ['application/xml', 'text/xml'],\n  testText: testXMLFile,\n  options: {\n    xml: {\n      parser: 'fast-xml-parser',\n      uncapitalizeKeys: false,\n      removeNSPrefix: false,\n      textNodeName: 'value',\n      arrayPaths: []\n    }\n  },\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseTextSync(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseTextSync(text, options)\n};\n\nfunction testXMLFile(text: string): boolean {\n  // TODO - There could be space first.\n  return text.startsWith('<?xml');\n}\n\nfunction parseTextSync(text: string, options?: XMLLoaderOptions): any {\n  const xmlOptions: Required<XMLLoaderOptions['xml']> = {...XMLLoader.options.xml, ...options?.xml};\n  switch (xmlOptions.parser) {\n    case 'fast-xml-parser':\n      const fastXMLOptions: FastXMLParserOptions = {\n        // Default FastXML options\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes\n        allowBooleanAttributes: true,\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration\n        ignoreDeclaration: true,\n\n        // XMLLoader Options: Map to FastXMLOptions\n\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix\n        removeNSPrefix: xmlOptions.removeNSPrefix,\n\n        // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename\n        textNodeName: xmlOptions.textNodeName,\n\n        isArray: (name: string, jpath: string, isLeafNode: boolean, isAttribute: boolean) => {\n          const array = Boolean(xmlOptions?.arrayPaths?.some((path) => jpath === path));\n          return array;\n        },\n\n        // Application overrides\n        ...options?._fastXML\n      };\n\n      const xml = fastParseXML(text, fastXMLOptions);\n\n      // Note - could be done with FastXML tag processing\n      return xmlOptions.uncapitalizeKeys ? uncapitalizeKeys(xml) : xml;\n\n    default:\n      throw new Error(options?.xml?.parser);\n  }\n}\n\nexport const _typecheckXMLLoader: LoaderWithParser = XMLLoader;\n"],"mappings":"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"}