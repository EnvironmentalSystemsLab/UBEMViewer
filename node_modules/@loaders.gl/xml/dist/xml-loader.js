"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._typecheckXMLLoader = exports.XMLLoader = void 0;
const parse_xml_1 = require("./lib/parsers/parse-xml");
const uncapitalize_1 = require("./lib/xml-utils/uncapitalize");
// __VERSION__ is injected by babel-plugin-version-inline
// @ts-ignore TS2304: Cannot find name '__VERSION__'.
const VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';
/**
 * Loader for XML files
 */
exports.XMLLoader = {
    name: 'XML',
    id: 'xml',
    module: 'xml',
    version: VERSION,
    worker: false,
    extensions: ['xml'],
    mimeTypes: ['application/xml', 'text/xml'],
    testText: testXMLFile,
    options: {
        xml: {
            parser: 'fast-xml-parser',
            uncapitalizeKeys: false,
            removeNSPrefix: false,
            textNodeName: 'value',
            arrayPaths: []
        }
    },
    parse: async (arrayBuffer, options) => parseTextSync(new TextDecoder().decode(arrayBuffer), options),
    parseTextSync: (text, options) => parseTextSync(text, options)
};
function testXMLFile(text) {
    // TODO - There could be space first.
    return text.startsWith('<?xml');
}
function parseTextSync(text, options) {
    const xmlOptions = { ...exports.XMLLoader.options.xml, ...options?.xml };
    switch (xmlOptions.parser) {
        case 'fast-xml-parser':
            const fastXMLOptions = {
                // Default FastXML options
                // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#allowbooleanattributes
                allowBooleanAttributes: true,
                // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#ignoredeclaration
                ignoreDeclaration: true,
                // XMLLoader Options: Map to FastXMLOptions
                // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#removensprefix
                removeNSPrefix: xmlOptions.removeNSPrefix,
                // https://github.com/NaturalIntelligence/fast-xml-parser/blob/master/docs/v4/2.XMLparseOptions.md#textnodename
                textNodeName: xmlOptions.textNodeName,
                isArray: (name, jpath, isLeafNode, isAttribute) => {
                    const array = Boolean(xmlOptions?.arrayPaths?.some((path) => jpath === path));
                    return array;
                },
                // Application overrides
                ...options?._fastXML
            };
            const xml = (0, parse_xml_1.fastParseXML)(text, fastXMLOptions);
            // Note - could be done with FastXML tag processing
            return xmlOptions.uncapitalizeKeys ? (0, uncapitalize_1.uncapitalizeKeys)(xml) : xml;
        default:
            throw new Error(options?.xml?.parser);
    }
}
exports._typecheckXMLLoader = exports.XMLLoader;
