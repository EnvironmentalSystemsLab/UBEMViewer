"use strict";
// loaders.gl, MIT license
Object.defineProperty(exports, "__esModule", { value: true });
exports.renameXMLTags = exports.parseCSWRecords = void 0;
const xml_1 = require("@loaders.gl/xml");
const xml_2 = require("@loaders.gl/xml");
const parse_exception_report_1 = require("./parse-exception-report");
/**
 * Parses a typed data structure from raw XML for `GetRecords` response
 * @note Error handlings is fairly weak
 */
function parseCSWRecords(text, options) {
    const parsedXML = xml_2.XMLLoader.parseTextSync(text, {
        ...options,
        xml: {
            ...options?.xml,
            removeNSPrefix: true,
            uncapitalizeKeys: true,
            arrayPaths: []
        },
        _fastXML: {
            ...options?._fastXML,
            parseAttributeValue: true
        }
    });
    (0, parse_exception_report_1.parseExceptionReport)(parsedXML);
    const xmlRecords = parsedXML.getRecordsResponse;
    // Move results to top
    const elementSet = xmlRecords.searchResults.elementSet;
    const recordsFieldName = `${elementSet}Record`;
    xmlRecords.records = xmlRecords.searchResults[recordsFieldName];
    delete xmlRecords.searchResults[recordsFieldName];
    (0, xml_1.convertXMLFieldToArrayInPlace)(xmlRecords, 'records');
    for (const record of xmlRecords.records) {
        record.boundingBoxes = record.boundingBox;
        delete record.boundingBox;
        (0, xml_1.convertXMLFieldToArrayInPlace)(record, 'boundingBoxes');
        for (const boundingBox of record.boundingBoxes) {
            boundingBox.value = [
                boundingBox.upperCorner[0],
                boundingBox.upperCorner[1],
                boundingBox.lowerCorner[0],
                boundingBox.lowerCorner[1]
            ];
            delete boundingBox.upperCorner;
            delete boundingBox.lowerCorner;
        }
    }
    return xmlRecords;
}
exports.parseCSWRecords = parseCSWRecords;
function renameXMLTags(xml, renameKeys) {
    for (const [oldKey, newKey] of Object.entries(renameKeys)) {
        xml[newKey] = xml[oldKey];
        delete xml[oldKey];
    }
}
exports.renameXMLTags = renameXMLTags;
