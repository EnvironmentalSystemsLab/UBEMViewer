"use strict";
// loaders.gl, MIT license
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseExceptionReport = void 0;
// import type {XMLLoaderOptions} from '@loaders.gl/xml';
// import {XMLLoader} from '@loaders.gl/xml';
/**
 * Parses a typed data structure from raw XML for `GetDomain` response
 * @note Error handlings is fairly weak
 */
function parseExceptionReport(parsedXML) {
    // const parsedXML = XMLLoader.parseTextSync(text, {
    //   ...options,
    //   xml: {
    //     ...options?.xml,
    //     removeNSPrefix: true,
    //     uncapitalizeKeys: true
    //   }
    // });
    const exceptionReport = parsedXML.exceptionReport;
    if (!exceptionReport) {
        return;
    }
    const errorMessage = exceptionReport.exception?.exceptionText ||
        exceptionReport.exception?.exceptionCode ||
        exceptionReport.exception?.locator ||
        'server error';
    throw new Error(`Catalog Server: ${errorMessage}`);
}
exports.parseExceptionReport = parseExceptionReport;
