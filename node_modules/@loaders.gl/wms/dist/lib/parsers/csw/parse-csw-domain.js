"use strict";
// loaders.gl, MIT license
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseCSWDomain = void 0;
const xml_1 = require("@loaders.gl/xml");
const parse_exception_report_1 = require("./parse-exception-report");
/**
 * Parses a typed data structure from raw XML for `GetDomain` response
 * @note Error handlings is fairly weak
 */
function parseCSWDomain(text, options) {
    const parsedXML = xml_1.XMLLoader.parseTextSync(text, {
        ...options,
        xml: {
            ...options?.xml,
            removeNSPrefix: true,
            uncapitalizeKeys: true,
            arrayPaths: [
                'GetDomainResponse.DomainValues',
                'GetDomainResponse.DomainValues.ListOfValues.value'
            ]
        }
    });
    (0, parse_exception_report_1.parseExceptionReport)(parsedXML);
    const xmlDomain = parsedXML.getDomainResponse;
    for (const domainValue of xmlDomain.domainValues) {
        // Drop the nested <listOfValues><value><value><listOfValues>  => values[]
        domainValue.values = domainValue.listOfValues?.value;
        delete domainValue.listOfValues;
    }
    return xmlDomain;
}
exports.parseCSWDomain = parseCSWDomain;
