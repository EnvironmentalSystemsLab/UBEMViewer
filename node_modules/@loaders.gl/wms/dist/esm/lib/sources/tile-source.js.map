{"version":3,"file":"tile-source.js","names":["DataSource","TileSource"],"sources":["../../../../src/lib/sources/tile-source.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {ImageType} from '@loaders.gl/images';\nimport {DataSource, DataSourceProps} from './data-source';\n\n/**\n * Normalized capabilities of an Image service\n * @example\n *  The WMSService will normalize the response to the WMS `GetCapabilities` data structure extracted from WMS XML response\n *  into an TileSourceMetadata.\n */\nexport type TileSourceMetadata = {\n  name: string;\n  title?: string;\n  abstract?: string;\n  keywords: string[];\n  layer: {\n    name: string;\n    title?: string;\n    srs?: string[];\n    boundingBox?: [number, number, number, number];\n    layers: TileSourceLayer[];\n  };\n};\n\nexport type TileSourceLayer = {\n  name: string;\n  title?: string;\n  srs?: string[];\n  boundingBox?: [number, number, number, number];\n  layers: TileSourceLayer[];\n};\n\nexport type GetTileParameters = {\n  /** Layers to render */\n  layers: string | string[];\n  /** Styling */\n  styles?: unknown;\n  /** bounding box of the requested map image */\n  zoom: number;\n  /** tile x coordinate */\n  x: number;\n  /** tile y coordinate */\n  y: number;\n  /** srs for the image (not the bounding box) */\n  srs?: string;\n  /** requested format for the return image */\n  format?: 'image/png';\n};\n\ntype TileSourceProps = DataSourceProps;\n\n/**\n * MapTileSource - data sources that allow data to be queried by (geospatial) extents\n * @note\n * - If geospatial, bounding box is expected to be in web mercator coordinates\n */\nexport abstract class TileSource<PropsT extends TileSourceProps> extends DataSource<PropsT> {\n  abstract getMetadata(): Promise<TileSourceMetadata>;\n  abstract getTile(parameters: GetTileParameters): Promise<ImageType>;\n}\n"],"mappings":"AAGA,SAAQA,UAAU,QAAwB,eAAe;AAsDzD,OAAO,MAAeC,UAAU,SAAyCD,UAAU,CAAS"}