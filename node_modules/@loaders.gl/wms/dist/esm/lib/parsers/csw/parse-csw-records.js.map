{"version":3,"file":"parse-csw-records.js","names":["convertXMLFieldToArrayInPlace","XMLLoader","parseExceptionReport","parseCSWRecords","text","options","parsedXML","parseTextSync","xml","removeNSPrefix","uncapitalizeKeys","arrayPaths","_fastXML","parseAttributeValue","xmlRecords","getRecordsResponse","elementSet","searchResults","recordsFieldName","concat","records","record","boundingBoxes","boundingBox","value","upperCorner","lowerCorner","renameXMLTags","renameKeys","oldKey","newKey","Object","entries"],"sources":["../../../../../src/lib/parsers/csw/parse-csw-records.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {XMLLoaderOptions, convertXMLFieldToArrayInPlace} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\nexport type CSWRecords = {\n  searchStatus: {\n    timestamp?: string;\n  };\n  searchResults: {\n    numberOfRecordsMatched: number;\n    numberOfRecordsReturned: number;\n    elementSet: string;\n    nextRecord: number;\n  };\n  records: {\n    type: string;\n    title: string;\n    abstract: string;\n    subject: string[];\n    boundingBoxes: {\n      crs: string;\n      value: [number, number, number, number];\n    }[];\n    references: {\n      value: string;\n      scheme: string;\n    }[];\n  }[];\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetRecords` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWRecords(text: string, options?: XMLLoaderOptions): CSWRecords {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true,\n      arrayPaths: []\n    },\n    _fastXML: {\n      ...options?._fastXML,\n      parseAttributeValue: true\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlRecords: any = parsedXML.getRecordsResponse;\n\n  // Move results to top\n  const elementSet = xmlRecords.searchResults.elementSet;\n  const recordsFieldName = `${elementSet}Record`;\n  xmlRecords.records = xmlRecords.searchResults[recordsFieldName];\n  delete xmlRecords.searchResults[recordsFieldName];\n\n  convertXMLFieldToArrayInPlace(xmlRecords, 'records');\n\n  for (const record of xmlRecords.records) {\n    record.boundingBoxes = record.boundingBox;\n    delete record.boundingBox;\n\n    convertXMLFieldToArrayInPlace(record, 'boundingBoxes');\n\n    for (const boundingBox of record.boundingBoxes) {\n      boundingBox.value = [\n        boundingBox.upperCorner[0],\n        boundingBox.upperCorner[1],\n        boundingBox.lowerCorner[0],\n        boundingBox.lowerCorner[1]\n      ];\n      delete boundingBox.upperCorner;\n      delete boundingBox.lowerCorner;\n    }\n  }\n\n  return xmlRecords as CSWRecords;\n}\n\nexport function renameXMLTags(xml: any, renameKeys: Record<string, string>): void {\n  for (const [oldKey, newKey] of Object.entries(renameKeys)) {\n    xml[newKey] = xml[oldKey];\n    delete xml[oldKey];\n  }\n}\n"],"mappings":"AAEA,SAA0BA,6BAA6B,QAAO,iBAAiB;AAC/E,SAAQC,SAAS,QAAO,iBAAiB;AACzC,SAAQC,oBAAoB,QAAO,0BAA0B;AAgC7D,OAAO,SAASC,eAAeA,CAACC,IAAY,EAAEC,OAA0B,EAAc;EACpF,MAAMC,SAAS,GAAGL,SAAS,CAACM,aAAa,CAACH,IAAI,EAAE;IAC9C,GAAGC,OAAO;IACVG,GAAG,EAAE;MACH,IAAGH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,GAAG;MACfC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE,IAAI;MACtBC,UAAU,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACR,IAAGP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,QAAQ;MACpBC,mBAAmB,EAAE;IACvB;EACF,CAAC,CAAC;EAEFX,oBAAoB,CAACI,SAAS,CAAC;EAE/B,MAAMQ,UAAe,GAAGR,SAAS,CAACS,kBAAkB;EAGpD,MAAMC,UAAU,GAAGF,UAAU,CAACG,aAAa,CAACD,UAAU;EACtD,MAAME,gBAAgB,MAAAC,MAAA,CAAMH,UAAU,WAAQ;EAC9CF,UAAU,CAACM,OAAO,GAAGN,UAAU,CAACG,aAAa,CAACC,gBAAgB,CAAC;EAC/D,OAAOJ,UAAU,CAACG,aAAa,CAACC,gBAAgB,CAAC;EAEjDlB,6BAA6B,CAACc,UAAU,EAAE,SAAS,CAAC;EAEpD,KAAK,MAAMO,MAAM,IAAIP,UAAU,CAACM,OAAO,EAAE;IACvCC,MAAM,CAACC,aAAa,GAAGD,MAAM,CAACE,WAAW;IACzC,OAAOF,MAAM,CAACE,WAAW;IAEzBvB,6BAA6B,CAACqB,MAAM,EAAE,eAAe,CAAC;IAEtD,KAAK,MAAME,WAAW,IAAIF,MAAM,CAACC,aAAa,EAAE;MAC9CC,WAAW,CAACC,KAAK,GAAG,CAClBD,WAAW,CAACE,WAAW,CAAC,CAAC,CAAC,EAC1BF,WAAW,CAACE,WAAW,CAAC,CAAC,CAAC,EAC1BF,WAAW,CAACG,WAAW,CAAC,CAAC,CAAC,EAC1BH,WAAW,CAACG,WAAW,CAAC,CAAC,CAAC,CAC3B;MACD,OAAOH,WAAW,CAACE,WAAW;MAC9B,OAAOF,WAAW,CAACG,WAAW;IAChC;EACF;EAEA,OAAOZ,UAAU;AACnB;AAEA,OAAO,SAASa,aAAaA,CAACnB,GAAQ,EAAEoB,UAAkC,EAAQ;EAChF,KAAK,MAAM,CAACC,MAAM,EAAEC,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;IACzDpB,GAAG,CAACsB,MAAM,CAAC,GAAGtB,GAAG,CAACqB,MAAM,CAAC;IACzB,OAAOrB,GAAG,CAACqB,MAAM,CAAC;EACpB;AACF"}