{"version":3,"file":"parse-wcs-capabilities.js","names":["XMLLoader","parseWCSCapabilities","text","options","parsedXML","parseTextSync","xml","removeNSPrefix","xmlCapabilities","Capabilities"],"sources":["../../../../../src/wip/lib/wcs/parse-wcs-capabilities.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {XMLLoader} from '@loaders.gl/xml';\n\n/** All capabilities of a WCS service - response to a WCS `GetCapabilities` data structure extracted from XML */\nexport type WCSCapabilities = {\n  serviceIdentification: {\n    title: string;\n    serviceTypeVersion: string;\n    serviceType: string;\n  };\n\n  serviceProvider: {\n    providerName: string;\n    providerSite: string;\n    serviceContact: {\n      individualName: string;\n      positionName: string;\n      contactInfo: {\n        address: {\n          administrativeArea: string;\n          city: string;\n          country: string;\n          deliveryPoint: string;\n          electronicMailAddress: string;\n          postalCode: string;\n        };\n        phone: {\n          voice: string;\n        };\n      };\n    };\n  };\n\n  operationsMetadata: {\n    GetCapabilities: any;\n    GetFeatureInfo: any;\n    GetTile: any;\n  };\n\n  contents: {\n    layers: {\n      abstract: string;\n      identifier: string;\n      title: string;\n      formats: string[];\n      styles: {\n        identifier: string;\n        isDefault: string;\n        title: string;\n        abstract?: string;\n      }[];\n      bounds: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      tileMatrixSetLinks: {\n        tileMatrixSet: string;\n      }[];\n      tileMatrixSets: {\n        identifier: string;\n        matrixIds: {\n          identifier: string;\n          matrixHeight: number;\n          matrixWidth: number;\n          scaleDenominator: number;\n          tileWidth: number;\n          tileHeight: number;\n          topLeftCorner: {\n            lon: number;\n            lat: number;\n          };\n        }[];\n      };\n    }[];\n  };\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseWCSCapabilities(text: string, options): WCSCapabilities {\n  const parsedXML = XMLLoader.parseTextSync(text, {...options, xml: {...options?.xml, removeNSPrefix: true}});\n  const xmlCapabilities: any = parsedXML.Capabilities || parsedXML;\n  return xmlCapabilities;\n}\n"],"mappings":"AAEA,SAAQA,SAAS,QAAO,iBAAiB;AAkFzC,OAAO,SAASC,oBAAoBA,CAACC,IAAY,EAAEC,OAAO,EAAmB;EAC3E,MAAMC,SAAS,GAAGJ,SAAS,CAACK,aAAa,CAACH,IAAI,EAAE;IAAC,GAAGC,OAAO;IAAEG,GAAG,EAAE;MAAC,IAAGH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,GAAG;MAAEC,cAAc,EAAE;IAAI;EAAC,CAAC,CAAC;EAC3G,MAAMC,eAAoB,GAAGJ,SAAS,CAACK,YAAY,IAAIL,SAAS;EAChE,OAAOI,eAAe;AACxB"}