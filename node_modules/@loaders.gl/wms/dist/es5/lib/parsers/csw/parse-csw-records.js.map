{"version":3,"file":"parse-csw-records.js","names":["_xml","require","_parseExceptionReport","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","parseCSWRecords","text","options","parsedXML","XMLLoader","parseTextSync","xml","removeNSPrefix","uncapitalizeKeys","arrayPaths","_fastXML","parseAttributeValue","parseExceptionReport","xmlRecords","getRecordsResponse","elementSet","searchResults","recordsFieldName","concat","records","convertXMLFieldToArrayInPlace","_iterator","_step","record","boundingBoxes","boundingBox","_iterator2","_step2","upperCorner","lowerCorner","renameXMLTags","renameKeys","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray2","oldKey","newKey"],"sources":["../../../../../src/lib/parsers/csw/parse-csw-records.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {XMLLoaderOptions, convertXMLFieldToArrayInPlace} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\nexport type CSWRecords = {\n  searchStatus: {\n    timestamp?: string;\n  };\n  searchResults: {\n    numberOfRecordsMatched: number;\n    numberOfRecordsReturned: number;\n    elementSet: string;\n    nextRecord: number;\n  };\n  records: {\n    type: string;\n    title: string;\n    abstract: string;\n    subject: string[];\n    boundingBoxes: {\n      crs: string;\n      value: [number, number, number, number];\n    }[];\n    references: {\n      value: string;\n      scheme: string;\n    }[];\n  }[];\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetRecords` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWRecords(text: string, options?: XMLLoaderOptions): CSWRecords {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true,\n      arrayPaths: []\n    },\n    _fastXML: {\n      ...options?._fastXML,\n      parseAttributeValue: true\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlRecords: any = parsedXML.getRecordsResponse;\n\n  // Move results to top\n  const elementSet = xmlRecords.searchResults.elementSet;\n  const recordsFieldName = `${elementSet}Record`;\n  xmlRecords.records = xmlRecords.searchResults[recordsFieldName];\n  delete xmlRecords.searchResults[recordsFieldName];\n\n  convertXMLFieldToArrayInPlace(xmlRecords, 'records');\n\n  for (const record of xmlRecords.records) {\n    record.boundingBoxes = record.boundingBox;\n    delete record.boundingBox;\n\n    convertXMLFieldToArrayInPlace(record, 'boundingBoxes');\n\n    for (const boundingBox of record.boundingBoxes) {\n      boundingBox.value = [\n        boundingBox.upperCorner[0],\n        boundingBox.upperCorner[1],\n        boundingBox.lowerCorner[0],\n        boundingBox.lowerCorner[1]\n      ];\n      delete boundingBox.upperCorner;\n      delete boundingBox.lowerCorner;\n    }\n  }\n\n  return xmlRecords as CSWRecords;\n}\n\nexport function renameXMLTags(xml: any, renameKeys: Record<string, string>): void {\n  for (const [oldKey, newKey] of Object.entries(renameKeys)) {\n    xml[newKey] = xml[oldKey];\n    delete xml[oldKey];\n  }\n}\n"],"mappings":"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"}