{"version":3,"file":"parse-exception-report.js","names":["parseExceptionReport","parsedXML","_exceptionReport$exce","_exceptionReport$exce2","_exceptionReport$exce3","exceptionReport","errorMessage","exception","exceptionText","exceptionCode","locator","Error","concat"],"sources":["../../../../../src/lib/parsers/csw/parse-exception-report.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// import type {XMLLoaderOptions} from '@loaders.gl/xml';\n// import {XMLLoader} from '@loaders.gl/xml';\n\n/**\n * Parses a typed data structure from raw XML for `GetDomain` response\n * @note Error handlings is fairly weak\n */\nexport function parseExceptionReport(parsedXML: any): void {\n  // const parsedXML = XMLLoader.parseTextSync(text, {\n  //   ...options,\n  //   xml: {\n  //     ...options?.xml,\n  //     removeNSPrefix: true,\n  //     uncapitalizeKeys: true\n  //   }\n  // });\n\n  const exceptionReport: any = parsedXML.exceptionReport;\n  if (!exceptionReport) {\n    return;\n  }\n  const errorMessage =\n    exceptionReport.exception?.exceptionText ||\n    exceptionReport.exception?.exceptionCode ||\n    exceptionReport.exception?.locator ||\n    'server error';\n\n  throw new Error(`Catalog Server: ${errorMessage}`);\n}\n"],"mappings":";;;;;;AASO,SAASA,oBAAoBA,CAACC,SAAc,EAAQ;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAUzD,IAAMC,eAAoB,GAAGJ,SAAS,CAACI,eAAe;EACtD,IAAI,CAACA,eAAe,EAAE;IACpB;EACF;EACA,IAAMC,YAAY,GAChB,EAAAJ,qBAAA,GAAAG,eAAe,CAACE,SAAS,cAAAL,qBAAA,uBAAzBA,qBAAA,CAA2BM,aAAa,OAAAL,sBAAA,GACxCE,eAAe,CAACE,SAAS,cAAAJ,sBAAA,uBAAzBA,sBAAA,CAA2BM,aAAa,OAAAL,sBAAA,GACxCC,eAAe,CAACE,SAAS,cAAAH,sBAAA,uBAAzBA,sBAAA,CAA2BM,OAAO,KAClC,cAAc;EAEhB,MAAM,IAAIC,KAAK,oBAAAC,MAAA,CAAoBN,YAAY,CAAE,CAAC;AACpD"}