{"version":3,"file":"s2-token-functions.js","names":["Long","MAXIMUM_TOKEN_LENGTH","getS2CellIdFromToken","token","paddedToken","padEnd","fromString","getS2TokenFromCellId","cellId","isZero","numZeroDigits","countTrailingZeros","remainder","trailingZeroHexChars","x","shiftRightUnsigned","hexString","toString","replace","zeroString","Array","length","join","getS2ChildCellId","index","newLsb","lsb","childCellId","add","fromNumber","multiply","and","not"],"sources":["../../../../../src/lib/utils/s2/s2-token-functions.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport Long from 'long';\n\nconst MAXIMUM_TOKEN_LENGTH = 16;\n\n/**\n * Convert the S2 token to the S2 cell ID\n * @param token {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n * @returns {Long} Cell id that is a 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * See {@link https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439} for more information\n */\nexport function getS2CellIdFromToken(token: string): Long {\n  if (token === 'X') {\n    token = '';\n  }\n  // pad token with zeros to make the length 16 that is defined in MAXIMUM_TOKEN_LENGTH\n  const paddedToken = token.padEnd(MAXIMUM_TOKEN_LENGTH, '0');\n  return Long.fromString(paddedToken, true, 16); // Hex base\n}\n\n/**\n * Convert the S2 cell ID to the S2 token\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * @returns {string} A string that is the cell's hex token. Zero cell ID is represented as 'X'.\n */\nexport function getS2TokenFromCellId(cellId: Long): string {\n  if (cellId.isZero()) {\n    return 'X';\n  }\n  let numZeroDigits = cellId.countTrailingZeros();\n\n  const remainder = numZeroDigits % 4;\n  numZeroDigits = (numZeroDigits - remainder) / 4;\n  const trailingZeroHexChars = numZeroDigits;\n  numZeroDigits *= 4;\n\n  const x = cellId.shiftRightUnsigned(numZeroDigits);\n  const hexString = x.toString(16).replace(/0+$/, '');\n  const zeroString = Array(17 - trailingZeroHexChars - hexString.length).join('0');\n  return zeroString + hexString;\n}\n\n/**\n * Get one of four S2 cell's children.\n * @param cellId {Long} A 64-bit encoding of a face and a Hilbert curve parameter on that face.\n * The cell must NOT be a leaf one. So, the cell's level is in the range [0-29].\n * @param index {number} Child index defines one of four S2 cell's children. Must be in the range [0-3].\n * @returns The ID of the cell's child.\n */\nexport function getS2ChildCellId(cellId: Long, index: number): Long {\n  // Shift sentinel bit 2 positions to the right.\n  const newLsb = lsb(cellId).shiftRightUnsigned(2);\n  // Insert child index before the sentinel bit.\n  const childCellId: Long = cellId.add(Long.fromNumber(2 * index + 1 - 4).multiply(newLsb));\n  return childCellId;\n}\n\n/**\n * Return the lowest-numbered bit that is on for this cell id.\n * @private\n * @param cellId {Long} Cell id.\n * @returns {Long} The lowest-numbered bit that is on for this cell id.\n */\nfunction lsb(cellId: Long): Long {\n  return cellId.and(cellId.not().add(1)); // eslint-disable-line\n}\n"],"mappings":"AAEA,OAAOA,IAAI,MAAM,MAAM;AAEvB,MAAMC,oBAAoB,GAAG,EAAE;AAQ/B,OAAO,SAASC,oBAAoBA,CAACC,KAAa,EAAQ;EACxD,IAAIA,KAAK,KAAK,GAAG,EAAE;IACjBA,KAAK,GAAG,EAAE;EACZ;EAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACJ,oBAAoB,EAAE,GAAG,CAAC;EAC3D,OAAOD,IAAI,CAACM,UAAU,CAACF,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;AAC/C;AAOA,OAAO,SAASG,oBAAoBA,CAACC,MAAY,EAAU;EACzD,IAAIA,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE;IACnB,OAAO,GAAG;EACZ;EACA,IAAIC,aAAa,GAAGF,MAAM,CAACG,kBAAkB,CAAC,CAAC;EAE/C,MAAMC,SAAS,GAAGF,aAAa,GAAG,CAAC;EACnCA,aAAa,GAAG,CAACA,aAAa,GAAGE,SAAS,IAAI,CAAC;EAC/C,MAAMC,oBAAoB,GAAGH,aAAa;EAC1CA,aAAa,IAAI,CAAC;EAElB,MAAMI,CAAC,GAAGN,MAAM,CAACO,kBAAkB,CAACL,aAAa,CAAC;EAClD,MAAMM,SAAS,GAAGF,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACnD,MAAMC,UAAU,GAAGC,KAAK,CAAC,EAAE,GAAGP,oBAAoB,GAAGG,SAAS,CAACK,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAChF,OAAOH,UAAU,GAAGH,SAAS;AAC/B;AASA,OAAO,SAASO,gBAAgBA,CAACf,MAAY,EAAEgB,KAAa,EAAQ;EAElE,MAAMC,MAAM,GAAGC,GAAG,CAAClB,MAAM,CAAC,CAACO,kBAAkB,CAAC,CAAC,CAAC;EAEhD,MAAMY,WAAiB,GAAGnB,MAAM,CAACoB,GAAG,CAAC5B,IAAI,CAAC6B,UAAU,CAAC,CAAC,GAAGL,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAACM,QAAQ,CAACL,MAAM,CAAC,CAAC;EACzF,OAAOE,WAAW;AACpB;AAQA,SAASD,GAAGA,CAAClB,MAAY,EAAQ;EAC/B,OAAOA,MAAM,CAACuB,GAAG,CAACvB,MAAM,CAACwB,GAAG,CAAC,CAAC,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC;AACxC"}