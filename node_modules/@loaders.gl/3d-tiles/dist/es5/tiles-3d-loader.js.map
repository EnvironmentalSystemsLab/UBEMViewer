{"version":3,"file":"tiles-3d-loader.js","names":["_loaderUtils","require","_tiles","_version","_parse3dTile","_parse3dTileHeader","Tiles3DLoader","id","name","module","version","VERSION","extensions","mimeTypes","tests","parse","options","loadGLTF","decodeQuantizedPositions","isTileset","assetGltfUpAxis","exports","getBaseUri","tileset","path","dirname","url","parseTile","_x","_x2","_x3","_parseTile","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","arrayBuffer","context","tile","byteOffset","wrap","_callee$","_context","prev","next","content","featureIds","parse3DTile","abrupt","stop","parseTileset","_x4","_x5","_x6","_parseTileset","_callee2","data","_tilesetJson$root","tilesetJson","_callee2$","_context2","JSON","TextDecoder","decode","loader","queryString","basePath","normalizeTileHeaders","root","sent","type","TILESET_TYPE","TILES3D","lodMetricType","LOD_METRIC_TYPE","GEOMETRIC_ERROR","lodMetricValue","_x7","_x8","_x9","_parse","_callee3","loaderOptions","_callee3$","_context3","indexOf"],"sources":["../../src/tiles-3d-loader.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {path} from '@loaders.gl/loader-utils';\nimport {TILESET_TYPE, LOD_METRIC_TYPE} from '@loaders.gl/tiles';\nimport {VERSION} from './lib/utils/version';\nimport {parse3DTile} from './lib/parsers/parse-3d-tile';\nimport {normalizeTileHeaders} from './lib/parsers/parse-3d-tile-header';\n\n/**\n * Loader for 3D Tiles\n */\nexport const Tiles3DLoader: LoaderWithParser = {\n  id: '3d-tiles',\n  name: '3D Tiles',\n  module: '3d-tiles',\n  version: VERSION,\n  extensions: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  mimeTypes: ['application/octet-stream'],\n  tests: ['cmpt', 'pnts', 'b3dm', 'i3dm'],\n  parse,\n  options: {\n    '3d-tiles': {\n      loadGLTF: true,\n      decodeQuantizedPositions: false,\n      isTileset: 'auto',\n      assetGltfUpAxis: null\n    }\n  }\n};\n\nfunction getBaseUri(tileset) {\n  return path.dirname(tileset.url);\n}\n\nasync function parseTile(arrayBuffer, options, context) {\n  const tile = {\n    content: {\n      featureIds: null\n    }\n  };\n  const byteOffset = 0;\n  await parse3DTile(arrayBuffer, byteOffset, options, context, tile.content);\n  return tile.content;\n}\n\nasync function parseTileset(data, options, context) {\n  const tilesetJson = JSON.parse(new TextDecoder().decode(data));\n  // eslint-disable-next-line no-use-before-define\n  tilesetJson.loader = options.loader || Tiles3DLoader;\n  tilesetJson.url = context.url;\n  tilesetJson.queryString = context.queryString;\n\n  // base path that non-absolute paths in tileset are relative to.\n  tilesetJson.basePath = getBaseUri(tilesetJson);\n  tilesetJson.root = await normalizeTileHeaders(tilesetJson, options);\n\n  tilesetJson.type = TILESET_TYPE.TILES3D;\n\n  tilesetJson.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tilesetJson.lodMetricValue = tilesetJson.root?.lodMetricValue || 0;\n\n  return tilesetJson;\n}\n\nasync function parse(data, options, context) {\n  // auto detect file type\n  const loaderOptions = options['3d-tiles'] || {};\n  let isTileset;\n  if (loaderOptions.isTileset === 'auto') {\n    isTileset = context.url && context.url.indexOf('.json') !== -1;\n  } else {\n    isTileset = loaderOptions.isTileset;\n  }\n\n  if (isTileset) {\n    data = await parseTileset(data, options, context);\n  } else {\n    data = await parseTile(data, options, context);\n  }\n\n  return data;\n}\n"],"mappings":"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"}