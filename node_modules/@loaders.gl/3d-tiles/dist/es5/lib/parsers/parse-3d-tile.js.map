{"version":3,"file":"parse-3d-tile.js","names":["_constants","require","_parseUtils","_parse3dTilePointCloud","_parse3dTileBatchedModel","_parse3dTileInstancedModel","_parse3dTileComposite","_parse3dTileGltf","parse3DTile","_x","_parse3DTile","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","arrayBuffer","byteOffset","options","context","tile","_args","wrap","_callee$","_context","prev","next","length","undefined","type","getMagicString","t0","TILE3D_TYPE","COMPOSITE","BATCHED_3D_MODEL","GLTF","INSTANCED_3D_MODEL","POINT_CLOUD","parseComposite3DTile","abrupt","sent","parseBatchedModel3DTile","parseGltf3DTile","parseInstancedModel3DTile","parsePointCloud3DTile","Error","concat","stop"],"sources":["../../../../src/lib/parsers/parse-3d-tile.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_TYPE} from '../constants';\nimport {getMagicString} from './helpers/parse-utils';\n\nimport {parsePointCloud3DTile} from './parse-3d-tile-point-cloud';\nimport {parseBatchedModel3DTile} from './parse-3d-tile-batched-model';\nimport {parseInstancedModel3DTile} from './parse-3d-tile-instanced-model';\nimport {parseComposite3DTile} from './parse-3d-tile-composite';\nimport {parseGltf3DTile} from './parse-3d-tile-gltf';\n\n// Extracts\nexport async function parse3DTile(arrayBuffer, byteOffset = 0, options, context, tile = {}) {\n  // @ts-expect-error\n  tile.byteOffset = byteOffset;\n  // @ts-expect-error\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  // @ts-expect-error\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      // Note: We pass this function as argument so that embedded tiles can be parsed recursively\n      return await parseComposite3DTile(\n        tile,\n        arrayBuffer,\n        byteOffset,\n        options,\n        context,\n        parse3DTile\n      );\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return await parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.GLTF:\n      return await parseGltf3DTile(tile, arrayBuffer, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return await parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return await parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      // @ts-expect-error\n      throw new Error(`3DTileLoader: unknown type ${tile.type}`); // eslint-disable-line\n  }\n}\n"],"mappings":"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"}