{"version":3,"file":"parse-3d-tile-instanced-model.js","names":["_core","require","_geospatial","_math","_tile3dFeatureTable","_interopRequireDefault","_tile3dBatchTable","_parse3dTileHeader","_parse3dTileTables","_parse3dTileGltfView","parseInstancedModel3DTile","_x","_x2","_x3","_x4","_x5","_parseInstancedModel3DTile","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","tile","arrayBuffer","byteOffset","options","context","wrap","_callee$","_context","prev","next","parseInstancedModel","extractGLTF","gltfFormat","abrupt","stop","parse3DTileHeaderSync","version","Error","concat","parse3DTileTablesHeaderSync","view","DataView","getUint32","parse3DTileTablesSync","parse3DTileGLTFViewSync","featureTableJsonByteLength","featureTable","Tile3DFeatureTable","featureTableJson","featureTableBinary","instancesLength","getGlobalProperty","featuresLength","Number","isFinite","eastNorthUp","rtcCenter","GL","FLOAT","batchTable","Tile3DBatchTable","batchTableJson","batchTableBinary","extractInstancedAttributes","collectionOptions","instances","Array","_batchTable","cull","url","undefined","gltf","basePath","incrementallyLoadTextures","forwardAxis","instancePosition","Vector3","instanceNormalRight","instanceNormalUp","instanceNormalForward","instanceRotation","Matrix3","instanceQuaternion","Quaternion","instanceScale","instanceTranslationRotationScale","instanceTransform","Matrix4","scratch1","scratch2","scratchVector1","scratchVector2","i","position","hasProperty","getProperty","UNSIGNED_SHORT","quantizedVolumeOffset","quantizedVolumeScale","MAX_UNSIGNED_SHORT","j","copy","translation","normalUp","normalRight","hasCustomOrientation","octNormalUp","octNormalRight","Ellipsoid","WGS84","eastNorthUpToFixedFrame","getRotationMatrix3","identity","cross","normalize","setColumn","fromMatrix3","rotation","set","scale","multiplyByScalar","nonUniformScale","batchId","rotationMatrix","fromQuaternion","translate","multiplyRight","modelMatrix","clone"],"sources":["../../../../src/lib/parsers/parse-3d-tile-instanced-model.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3, Matrix4, Quaternion} from '@math.gl/core';\nimport {Ellipsoid} from '@math.gl/geospatial';\nimport {GL} from '@loaders.gl/math'; // 'math.gl/geometry';\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\nimport Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseInstancedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, tile.gltfFormat, options, context);\n  return byteOffset;\n}\n\nfunction parseInstancedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n  if (tile.version !== 1) {\n    throw new Error(`Instanced 3D Model version ${tile.version} is not supported`);\n  }\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n\n  const view = new DataView(arrayBuffer);\n\n  tile.gltfFormat = view.getUint32(byteOffset, true);\n  byteOffset += 4;\n\n  // PARSE FEATURE TABLE\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  // TODO - Is the feature table sometimes optional or can check be moved into table header parser?\n  if (tile.featureTableJsonByteLength === 0) {\n    throw new Error('i3dm parser: featureTableJsonByteLength is zero.');\n  }\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n\n  const instancesLength = featureTable.getGlobalProperty('INSTANCES_LENGTH');\n  featureTable.featuresLength = instancesLength;\n\n  if (!Number.isFinite(instancesLength)) {\n    throw new Error('i3dm parser: INSTANCES_LENGTH must be defined');\n  }\n\n  tile.eastNorthUp = featureTable.getGlobalProperty('EAST_NORTH_UP');\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  const batchTable = new Tile3DBatchTable(\n    tile.batchTableJson,\n    tile.batchTableBinary,\n    instancesLength\n  );\n\n  extractInstancedAttributes(tile, featureTable, batchTable, instancesLength);\n\n  return byteOffset;\n}\n\n// eslint-disable-next-line max-statements, complexity\nfunction extractInstancedAttributes(tile, featureTable, batchTable, instancesLength) {\n  // Create model instance collection\n  const collectionOptions = {\n    instances: new Array(instancesLength),\n    batchTable: tile._batchTable,\n    cull: false, // Already culled by 3D Tiles\n    url: undefined,\n    // requestType: RequestType.TILES3D,\n    gltf: undefined,\n    basePath: undefined,\n    incrementallyLoadTextures: false,\n    // TODO - tileset is not available at this stage, tile is parsed independently\n    // upAxis: (tileset && tileset._gltfUpAxis) || [0, 1, 0],\n    forwardAxis: [1, 0, 0]\n  };\n\n  const instances = collectionOptions.instances;\n  const instancePosition = new Vector3();\n  const instanceNormalRight = new Vector3();\n  const instanceNormalUp = new Vector3();\n  const instanceNormalForward = new Vector3();\n  const instanceRotation = new Matrix3();\n  const instanceQuaternion = new Quaternion();\n  const instanceScale = new Vector3();\n  const instanceTranslationRotationScale = {};\n  const instanceTransform = new Matrix4();\n  const scratch1 = [];\n  const scratch2 = [];\n  const scratchVector1 = new Vector3();\n  const scratchVector2 = new Vector3();\n\n  for (let i = 0; i < instancesLength; i++) {\n    let position;\n\n    // Get the instance position\n    if (featureTable.hasProperty('POSITION')) {\n      position = featureTable.getProperty('POSITION', GL.FLOAT, 3, i, instancePosition);\n    } else if (featureTable.hasProperty('POSITION_QUANTIZED')) {\n      position = featureTable.getProperty(\n        'POSITION_QUANTIZED',\n        GL.UNSIGNED_SHORT,\n        3,\n        i,\n        instancePosition\n      );\n\n      const quantizedVolumeOffset = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_OFFSET',\n        GL.FLOAT,\n        3,\n        scratchVector1\n      );\n      if (!quantizedVolumeOffset) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.'\n        );\n      }\n\n      const quantizedVolumeScale = featureTable.getGlobalProperty(\n        'QUANTIZED_VOLUME_SCALE',\n        GL.FLOAT,\n        3,\n        scratchVector2\n      );\n      if (!quantizedVolumeScale) {\n        throw new Error(\n          'i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.'\n        );\n      }\n\n      const MAX_UNSIGNED_SHORT = 65535.0;\n      for (let j = 0; j < 3; j++) {\n        position[j] =\n          (position[j] / MAX_UNSIGNED_SHORT) * quantizedVolumeScale[j] + quantizedVolumeOffset[j];\n      }\n    }\n\n    if (!position) {\n      throw new Error('i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.');\n    }\n\n    instancePosition.copy(position);\n    // @ts-expect-error\n    instanceTranslationRotationScale.translation = instancePosition;\n\n    // Get the instance rotation\n    tile.normalUp = featureTable.getProperty('NORMAL_UP', GL.FLOAT, 3, i, scratch1);\n    tile.normalRight = featureTable.getProperty('NORMAL_RIGHT', GL.FLOAT, 3, i, scratch2);\n\n    const hasCustomOrientation = false;\n    if (tile.normalUp) {\n      if (!tile.normalRight) {\n        throw new Error('i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.');\n      }\n      // Vector3.unpack(normalUp, 0, instanceNormalUp);\n      // Vector3.unpack(normalRight, 0, instanceNormalRight);\n      tile.hasCustomOrientation = true;\n    } else {\n      tile.octNormalUp = featureTable.getProperty(\n        'NORMAL_UP_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch1\n      );\n      tile.octNormalRight = featureTable.getProperty(\n        'NORMAL_RIGHT_OCT32P',\n        GL.UNSIGNED_SHORT,\n        2,\n        scratch2\n      );\n\n      if (tile.octNormalUp) {\n        if (!tile.octNormalRight) {\n          throw new Error(\n            'i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P'\n          );\n        }\n\n        throw new Error('i3dm: oct-encoded orientation not implemented');\n        /*\n        AttributeCompression.octDecodeInRange(octNormalUp[0], octNormalUp[1], 65535, instanceNormalUp);\n        AttributeCompression.octDecodeInRange(octNormalRight[0], octNormalRight[1], 65535, instanceNormalRight);\n        hasCustomOrientation = true;\n        */\n      } else if (tile.eastNorthUp) {\n        Ellipsoid.WGS84.eastNorthUpToFixedFrame(instancePosition, instanceTransform);\n        instanceTransform.getRotationMatrix3(instanceRotation);\n      } else {\n        instanceRotation.identity();\n      }\n    }\n\n    if (hasCustomOrientation) {\n      instanceNormalForward.copy(instanceNormalRight).cross(instanceNormalUp).normalize();\n      instanceRotation.setColumn(0, instanceNormalRight);\n      instanceRotation.setColumn(1, instanceNormalUp);\n      instanceRotation.setColumn(2, instanceNormalForward);\n    }\n\n    instanceQuaternion.fromMatrix3(instanceRotation);\n    // @ts-expect-error\n    instanceTranslationRotationScale.rotation = instanceQuaternion;\n\n    // Get the instance scale\n    instanceScale.set(1.0, 1.0, 1.0);\n    const scale = featureTable.getProperty('SCALE', GL.FLOAT, 1, i);\n    if (Number.isFinite(scale)) {\n      instanceScale.multiplyByScalar(scale);\n    }\n    const nonUniformScale = featureTable.getProperty('SCALE_NON_UNIFORM', GL.FLOAT, 3, i, scratch1);\n    if (nonUniformScale) {\n      instanceScale.scale(nonUniformScale);\n    }\n\n    // @ts-expect-error\n    instanceTranslationRotationScale.scale = instanceScale;\n\n    // Get the batchId\n    let batchId = featureTable.getProperty('BATCH_ID', GL.UNSIGNED_SHORT, 1, i);\n    if (batchId === undefined) {\n      // If BATCH_ID semantic is undefined, batchId is just the instance number\n      batchId = i;\n    }\n\n    // @ts-expect-error\n    const rotationMatrix = new Matrix4().fromQuaternion(instanceTranslationRotationScale.rotation);\n\n    // Create the model matrix and the instance\n    instanceTransform.identity();\n    // @ts-expect-error\n    instanceTransform.translate(instanceTranslationRotationScale.translation);\n    instanceTransform.multiplyRight(rotationMatrix);\n    // @ts-expect-error\n    instanceTransform.scale(instanceTranslationRotationScale.scale);\n\n    const modelMatrix = instanceTransform.clone();\n    instances[i] = {\n      modelMatrix,\n      batchId\n    };\n  }\n\n  tile.instances = instances;\n}\n"],"mappings":"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"}