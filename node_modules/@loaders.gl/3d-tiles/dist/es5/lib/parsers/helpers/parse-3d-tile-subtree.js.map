{"version":3,"file":"parse-3d-tile-subtree.js","names":["SUBTREE_FILE_MAGIC","SUBTREE_FILE_VERSION","parse3DTilesSubtree","_x","_x2","_x3","_parse3DTilesSubtree","apply","arguments","_asyncToGenerator2","default","_regenerator","mark","_callee","data","options","context","magic","version","jsonByteLength","stringAttribute","textDecoder","string","subtree","binaryByteLength","internalBinaryBuffer","wrap","_callee$","_context","prev","next","Uint32Array","slice","Error","parseUint64Value","Uint8Array","TextDecoder","decode","JSON","parse","ArrayBuffer","tileAvailability","getExplicitBitstream","explicitBitstream","sent","contentAvailability","childSubtreeAvailability","abrupt","stop","resolveBufferUri","bitstreamRelativeUri","basePath","hasProtocol","startsWith","resolvedUri","URL","decodeURI","toString","basePathWithProtocol","concat","host","pathname","_x4","_x5","_x6","_x7","_getExplicitBitstream","_callee2","name","bufferViewIndex","bufferView","buffer","bufferUri","response","_callee2$","_context2","bufferViews","buffers","url","fetch","uri","arrayBuffer","byteOffset","byteLength","dataView","DataView","left","getUint32","right","Math","pow"],"sources":["../../../../../src/lib/parsers/helpers/parse-3d-tile-subtree.ts"],"sourcesContent":["import type {Subtree, ExplicitBitstream} from '../../../types';\nimport type {LoaderContext, LoaderOptions} from '@loaders.gl/loader-utils';\n\nconst SUBTREE_FILE_MAGIC = 0x74627573;\nconst SUBTREE_FILE_VERSION = 1;\n\n/**\n * Parse subtree file\n * Spec - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling#subtree-file-format\n * @param data\n * @returns\n */\n// eslint-disable-next-line max-statements\nexport default async function parse3DTilesSubtree(\n  data: ArrayBuffer,\n  options: LoaderOptions | undefined,\n  context: LoaderContext | undefined\n): Promise<Subtree> {\n  const magic = new Uint32Array(data.slice(0, 4));\n\n  if (magic[0] !== SUBTREE_FILE_MAGIC) {\n    throw new Error('Wrong subtree file magic number');\n  }\n\n  const version = new Uint32Array(data.slice(4, 8));\n\n  if (version[0] !== SUBTREE_FILE_VERSION) {\n    throw new Error('Wrong subtree file verson, must be 1');\n  }\n\n  const jsonByteLength = parseUint64Value(data.slice(8, 16));\n  const stringAttribute = new Uint8Array(data, 24, jsonByteLength);\n\n  const textDecoder = new TextDecoder('utf8');\n  const string = textDecoder.decode(stringAttribute);\n  const subtree = JSON.parse(string);\n\n  const binaryByteLength = parseUint64Value(data.slice(16, 24));\n  let internalBinaryBuffer = new ArrayBuffer(0);\n\n  if (binaryByteLength) {\n    internalBinaryBuffer = data.slice(24 + jsonByteLength);\n  }\n\n  if ('bufferView' in subtree.tileAvailability) {\n    subtree.tileAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'tileAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  if ('bufferView' in subtree.contentAvailability) {\n    subtree.contentAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'contentAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  if ('bufferView' in subtree.childSubtreeAvailability) {\n    subtree.childSubtreeAvailability.explicitBitstream = await getExplicitBitstream(\n      subtree,\n      'childSubtreeAvailability',\n      internalBinaryBuffer,\n      context\n    );\n  }\n\n  return subtree;\n}\n\n/**\n * Get url for bitstream downloading\n * @param bitstreamRelativeUri\n * @param basePath\n * @returns\n */\nfunction resolveBufferUri(bitstreamRelativeUri: string, basePath: string): string {\n  const hasProtocol = basePath.startsWith('http');\n\n  if (hasProtocol) {\n    const resolvedUri = new URL(bitstreamRelativeUri, basePath);\n    return decodeURI(resolvedUri.toString());\n  }\n\n  /**\n   * Adding http protocol only for new URL constructor usage.\n   * It allows to resolve relative paths like ../../example with basePath.\n   */\n  const basePathWithProtocol = `http://${basePath}`;\n  const resolvedUri = new URL(bitstreamRelativeUri, basePathWithProtocol);\n  /**\n   * Drop protocol and use just relative path.\n   */\n  return `/${resolvedUri.host}${resolvedUri.pathname}`;\n}\n\n/**\n * Get explicit bitstream for subtree availability data.\n * @param subtree\n * @param name\n * @param internalBinaryBuffer\n */\nasync function getExplicitBitstream(\n  subtree: Subtree,\n  name: string,\n  internalBinaryBuffer: ArrayBuffer,\n  context: LoaderContext | undefined\n): Promise<ExplicitBitstream> {\n  const bufferViewIndex = subtree[name].bufferView;\n  const bufferView = subtree.bufferViews[bufferViewIndex];\n  const buffer = subtree.buffers[bufferView.buffer];\n\n  if (!context?.url || !context.fetch) {\n    throw new Error('Url is not provided');\n  }\n\n  if (!context.fetch) {\n    throw new Error('fetch is not provided');\n  }\n\n  // External bitstream loading\n  if (buffer.uri) {\n    const bufferUri = resolveBufferUri(buffer.uri, context?.url);\n    const response = await context.fetch(bufferUri);\n    const data = await response.arrayBuffer();\n    // Return view of bitstream.\n    return new Uint8Array(data, bufferView.byteOffset, bufferView.byteLength);\n  }\n  // Return view of bitstream.\n  return new Uint8Array(internalBinaryBuffer, bufferView.byteOffset, bufferView.byteLength);\n}\n\n/**\n * Parse buffer to return uint64 value\n * @param buffer\n * @returns 64-bit value until precision is lost after Number.MAX_SAFE_INTEGER\n */\nfunction parseUint64Value(buffer: ArrayBuffer): number {\n  const dataView = new DataView(buffer);\n  const left = dataView.getUint32(0, true);\n  const right = dataView.getUint32(4, true);\n  // combine the two 32-bit values\n  return left + 2 ** 32 * right;\n}\n"],"mappings":"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"}