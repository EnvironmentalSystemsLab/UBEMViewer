{"version":3,"file":"s2-to-obb-points.js","names":["_s2CellUtils","require","_s2ToRegion","_core","getS2OrientedBoundingBoxCornerPoints","tokenOrKey","heightInfo","min","minimumHeight","max","maximumHeight","s2cell","getS2Cell","region","getS2Region","W","west","S","south","E","east","N","north","points","push","Vector3"],"sources":["../../../../../../src/lib/utils/s2/converters/s2-to-obb-points.ts"],"sourcesContent":["import {getS2Cell} from '../s2geometry/s2-cell-utils';\nimport {getS2Region} from './s2-to-region';\nimport {Vector3} from '@math.gl/core';\n\nexport type S2HeightInfo = {\n  minimumHeight: number;\n  maximumHeight: number;\n};\n\n/**\n * Converts S2HeightInfo to corner points of an oriented bounding box\n * Can be used to constuct an OrientedBoundingBox instance\n * @param tokenOrKey {string} A string that is the cell's hex token or the Hilbert quad key (containing /)\n * @param heightInfo {S2HeightInfo} min and max height of the box\n * @returns corner points of the oriented bounding box\n */\nexport function getS2OrientedBoundingBoxCornerPoints(\n  tokenOrKey: string, // This can be an S2 key or token\n  heightInfo?: S2HeightInfo\n): Vector3[] {\n  const min: number = heightInfo?.minimumHeight || 0;\n  const max: number = heightInfo?.maximumHeight || 0;\n\n  const s2cell = getS2Cell(tokenOrKey);\n  const region = getS2Region(s2cell);\n\n  // region lng/lat are in degrees\n  const W = region.west;\n  const S = region.south;\n  const E = region.east;\n  const N = region.north;\n\n  const points: Vector3[] = [];\n\n  points.push(new Vector3(W, N, min));\n  points.push(new Vector3(E, N, min));\n  points.push(new Vector3(E, S, min));\n  points.push(new Vector3(W, S, min));\n\n  points.push(new Vector3(W, N, max));\n  points.push(new Vector3(E, N, max));\n  points.push(new Vector3(E, S, max));\n  points.push(new Vector3(W, S, max));\n\n  return points;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAcO,SAASG,oCAAoCA,CAClDC,UAAkB,EAClBC,UAAyB,EACd;EACX,IAAMC,GAAW,GAAG,CAAAD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEE,aAAa,KAAI,CAAC;EAClD,IAAMC,GAAW,GAAG,CAAAH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI,aAAa,KAAI,CAAC;EAElD,IAAMC,MAAM,GAAG,IAAAC,sBAAS,EAACP,UAAU,CAAC;EACpC,IAAMQ,MAAM,GAAG,IAAAC,uBAAW,EAACH,MAAM,CAAC;EAGlC,IAAMI,CAAC,GAAGF,MAAM,CAACG,IAAI;EACrB,IAAMC,CAAC,GAAGJ,MAAM,CAACK,KAAK;EACtB,IAAMC,CAAC,GAAGN,MAAM,CAACO,IAAI;EACrB,IAAMC,CAAC,GAAGR,MAAM,CAACS,KAAK;EAEtB,IAAMC,MAAiB,GAAG,EAAE;EAE5BA,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACV,CAAC,EAAEM,CAAC,EAAEd,GAAG,CAAC,CAAC;EACnCgB,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACN,CAAC,EAAEE,CAAC,EAAEd,GAAG,CAAC,CAAC;EACnCgB,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACN,CAAC,EAAEF,CAAC,EAAEV,GAAG,CAAC,CAAC;EACnCgB,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACV,CAAC,EAAEE,CAAC,EAAEV,GAAG,CAAC,CAAC;EAEnCgB,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACV,CAAC,EAAEM,CAAC,EAAEZ,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACN,CAAC,EAAEE,CAAC,EAAEZ,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACN,CAAC,EAAEF,CAAC,EAAER,GAAG,CAAC,CAAC;EACnCc,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAO,CAACV,CAAC,EAAEE,CAAC,EAAER,GAAG,CAAC,CAAC;EAEnC,OAAOc,MAAM;AACf"}