{"version":3,"file":"vector-tile.js","names":["_vectorTileLayer","_interopRequireDefault","require","VectorTile","_createClass2","default","pbf","end","_classCallCheck2","_defineProperty2","layers","readFields","readTile","exports","tag","layer","VectorTileLayer","readVarint","pos","length","name"],"sources":["../../../../src/lib/binary-vector-tile/vector-tile.ts"],"sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileLayer from './vector-tile-layer';\nimport Protobuf from 'pbf';\n\nexport default class VectorTile {\n  layers: {[x: string]: VectorTileLayer};\n  constructor(pbf: Protobuf, end?: number) {\n    this.layers = pbf.readFields(readTile, {}, end);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag: number, layers?: {[x: string]: VectorTileLayer}, pbf?: Protobuf): void {\n  if (tag === 3) {\n    if (pbf) {\n      const layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n      if (layer.length && layers) {\n        layers[layer.name] = layer;\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AAEA,IAAAA,gBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAkD,IAG7BC,UAAU,OAAAC,aAAA,CAAAC,OAAA,EAE7B,SAAAF,WAAYG,GAAa,EAAEC,GAAY,EAAE;EAAA,IAAAC,gBAAA,CAAAH,OAAA,QAAAF,UAAA;EAAA,IAAAM,gBAAA,CAAAJ,OAAA;EACvC,IAAI,CAACK,MAAM,GAAGJ,GAAG,CAACK,UAAU,CAACC,QAAQ,EAAE,CAAC,CAAC,EAAEL,GAAG,CAAC;AACjD,CAAC;AAAAM,OAAA,CAAAR,OAAA,GAAAF,UAAA;AASH,SAASS,QAAQA,CAACE,GAAW,EAAEJ,MAAuC,EAAEJ,GAAc,EAAQ;EAC5F,IAAIQ,GAAG,KAAK,CAAC,EAAE;IACb,IAAIR,GAAG,EAAE;MACP,IAAMS,KAAK,GAAG,IAAIC,wBAAe,CAACV,GAAG,EAAEA,GAAG,CAACW,UAAU,CAAC,CAAC,GAAGX,GAAG,CAACY,GAAG,CAAC;MAClE,IAAIH,KAAK,CAACI,MAAM,IAAIT,MAAM,EAAE;QAC1BA,MAAM,CAACK,KAAK,CAACK,IAAI,CAAC,GAAGL,KAAK;MAC5B;IACF;EACF;AACF"}