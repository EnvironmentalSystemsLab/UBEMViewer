{"version":3,"file":"vector-tile-feature.js","names":["_binaryUtilFunctions","require","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","endPos","cmd","cmdLen","x","y","TEST_EXPORTS","classifyRings","exports","VectorTileFeature","pbf","end","extent","values","geometryInfo","_classCallCheck2","properties","type","id","_pbf","_geometry","_keys","_values","_geometryInfo","readFields","readFeature","_createClass2","loadGeometry","pos","readVarint","indices","data","readSVarint","start","Error","concat","_toBinaryCoordinates","transform","geom","geometry","coordLength","pointFeaturesCount","pointPositionsCount","lineFeaturesCount","linePathsCount","linePositionsCount","polygonFeaturesCount","polygonObjectsCount","_iterator","_step","polygonRingsCount","polygonPositionsCount","result","toBinaryCoordinates","options","z","size","Math","pow","x0","y0","project"],"sources":["../../../../src/lib/binary-vector-tile/vector-tile-feature.ts"],"sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport Protobuf from 'pbf';\nimport {FlatFeature, FlatIndexedGeometry, GeojsonGeometryInfo} from '@loaders.gl/schema';\nimport {classifyRings, project, readFeature} from '../../helpers/binary-util-functions';\n\n// Reduce GC by reusing variables\nlet endPos: number;\nlet cmd: number;\nlet cmdLen: number;\nlet length: number;\nlet x: number;\nlet y: number;\nlet i: number;\n\nexport const TEST_EXPORTS = {\n  classifyRings\n};\n\nexport default class VectorTileFeature {\n  properties: {[x: string]: string | number | boolean | null};\n  extent: any;\n  type: number;\n  id: number | null;\n  _pbf: Protobuf;\n  _geometry: number;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _geometryInfo: GeojsonGeometryInfo;\n\n  // eslint-disable-next-line max-params\n  constructor(\n    pbf: Protobuf,\n    end: number,\n    extent: any,\n    keys: string[],\n    values: (string | number | boolean | null)[],\n    geometryInfo: GeojsonGeometryInfo\n  ) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n    this.id = null;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n    this._geometryInfo = geometryInfo;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry(): FlatIndexedGeometry {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    endPos = pbf.readVarint() + pbf.pos;\n    cmd = 1;\n    length = 0;\n    x = 0;\n    y = 0;\n    i = 0;\n\n    // Note: I attempted to replace the `data` array with a\n    // Float32Array, but performance was worse, both using\n    // `set()` and direct index access. Also, we cannot\n    // know how large the buffer should be, so it would\n    // increase memory usage\n    const indices: number[] = []; // Indices where geometries start\n    const data: number[] = []; // Flat array of coordinate data\n\n    while (pbf.pos < endPos) {\n      if (length <= 0) {\n        cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // New line\n          indices.push(i);\n        }\n        data.push(x, y);\n        i += 2;\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (i > 0) {\n          const start = indices[indices.length - 1]; // start index of polygon\n          data.push(data[start], data[start + 1]); // closePolygon\n          i += 2;\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return {data, indices};\n  }\n\n  /**\n   *\n   * @param transform\n   * @returns result\n   */\n  _toBinaryCoordinates(transform) {\n    // Expands the protobuf data to an intermediate Flat GeoJSON\n    // data format, which maps closely to the binary data buffers.\n    // It is similar to GeoJSON, but rather than storing the coordinates\n    // in multidimensional arrays, we have a 1D `data` with all the\n    // coordinates, and then index into this using the `indices`\n    // parameter, e.g.\n    //\n    // geometry: {\n    //   type: 'Point', data: [1,2], indices: [0]\n    // }\n    // geometry: {\n    //   type: 'LineString', data: [1,2,3,4,...], indices: [0]\n    // }\n    // geometry: {\n    //   type: 'Polygon', data: [1,2,3,4,...], indices: [[0, 2]]\n    // }\n    // Thus the indices member lets us look up the relevant range\n    // from the data array.\n    // The Multi* versions of the above types share the same data\n    // structure, just with multiple elements in the indices array\n    const geom = this.loadGeometry();\n    let geometry;\n\n    // Apply the supplied transformation to data\n    transform(geom.data, this);\n\n    const coordLength = 2;\n\n    // eslint-disable-next-line default-case\n    switch (this.type) {\n      case 1: // Point\n        this._geometryInfo.pointFeaturesCount++;\n        this._geometryInfo.pointPositionsCount += geom.indices.length;\n        geometry = {type: 'Point', ...geom};\n        break;\n\n      case 2: // LineString\n        this._geometryInfo.lineFeaturesCount++;\n        this._geometryInfo.linePathsCount += geom.indices.length;\n        this._geometryInfo.linePositionsCount += geom.data.length / coordLength;\n        geometry = {type: 'LineString', ...geom};\n        break;\n\n      case 3: // Polygon\n        geometry = classifyRings(geom);\n\n        // Unlike Point & LineString geom.indices is a 2D array, thanks\n        // to the classifyRings method\n        this._geometryInfo.polygonFeaturesCount++;\n        this._geometryInfo.polygonObjectsCount += geometry.indices.length;\n\n        for (const indices of geometry.indices) {\n          this._geometryInfo.polygonRingsCount += indices.length;\n        }\n        this._geometryInfo.polygonPositionsCount += geometry.data.length / coordLength;\n\n        break;\n      default:\n        throw new Error(`Invalid geometry type: ${this.type}`);\n    }\n\n    const result: FlatFeature = {type: 'Feature', geometry, properties: this.properties};\n\n    if (this.id !== null) {\n      result.id = this.id;\n    }\n\n    return result;\n  }\n\n  toBinaryCoordinates(\n    options: {x: number; y: number; z: number} | ((data: number[], feature: {extent: any}) => void)\n  ): FlatFeature {\n    if (typeof options === 'function') {\n      return this._toBinaryCoordinates(options);\n    }\n    const {x, y, z} = options;\n    const size = this.extent * Math.pow(2, z);\n    const x0 = this.extent * x;\n    const y0 = this.extent * y;\n\n    return this._toBinaryCoordinates((data: number[]) => project(data, x0, y0, size));\n  }\n}\n"],"mappings":"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"}