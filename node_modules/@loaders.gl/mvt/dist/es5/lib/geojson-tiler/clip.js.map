{"version":3,"file":"clip.js","names":["_feature","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","return","minLen","_arrayLikeToArray","Object","toString","slice","name","from","test","arr","len","arr2","clip","features","scale","k1","k2","axis","minAll","maxAll","options","clipped","_iterator","_step","feature","geometry","type","min","minX","minY","max","maxX","maxY","push","newGeometry","clipPoints","clipLine","lineMetrics","clipLines","_iterator2","_step2","polygon","newPolygon","_iterator3","_step3","line","createFeature","id","tags","geom","newGeom","a","addPoint","isPolygon","trackMetrics","newSlice","intersect","intersectX","intersectY","start","segLen","t","ax","ay","az","bx","by","b","exited","Math","sqrt","pow","end","last","Slice","_Array","_inherits2","_super","_this","_classCallCheck2","_len","args","_key","concat","_defineProperty2","_assertThisInitialized2","_createClass2","_wrapNativeSuper2","size","_iterator4","_step4","out","x","y","z"],"sources":["../../../../src/lib/geojson-tiler/clip.ts"],"sourcesContent":["// loaders.gl, MIT license\n// Forked from https://github.com/mapbox/geojson-vt under compatible ISC license\n\nimport type {GeoJSONTileFeature} from './tile';\nimport {createFeature} from './feature';\n\n/* eslint-disable no-continue */\n\n/**\n * Clip features between two vertical or horizontal axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n *\n * @param k1 and k2 are the line coordinates\n * @param axis: 0 for x, 1 for y\n * @param minAll and maxAll: minimum and maximum coordinate value for all features\n */\n// eslint-disable-next-line max-params, complexity, max-statements\nexport function clip(\n  features: GeoJSONTileFeature[],\n  scale: number,\n  k1: number,\n  k2: number,\n  axis,\n  minAll: number,\n  maxAll: number,\n  options: {lineMetrics: boolean}\n): GeoJSONTileFeature[] | null {\n  k1 /= scale;\n  k2 /= scale;\n\n  if (minAll >= k1 && maxAll < k2) {\n    return features;\n  }\n  // trivial accept\n  else if (maxAll < k1 || minAll >= k2) {\n    return null; // trivial reject\n  }\n\n  const clipped: GeoJSONTileFeature[] = [];\n\n  for (const feature of features) {\n    const geometry = feature.geometry;\n    let type = feature.type;\n\n    const min = axis === 0 ? feature.minX : feature.minY;\n    const max = axis === 0 ? feature.maxX : feature.maxY;\n\n    if (min >= k1 && max < k2) {\n      // trivial accept\n      clipped.push(feature);\n      continue;\n    } else if (max < k1 || min >= k2) {\n      // trivial reject\n      continue;\n    }\n\n    let newGeometry: number[][][] | number[][] = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n      clipPoints(geometry, newGeometry, k1, k2, axis);\n    } else if (type === 'LineString') {\n      clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n    } else if (type === 'MultiLineString') {\n      clipLines(geometry, newGeometry, k1, k2, axis, false);\n    } else if (type === 'Polygon') {\n      clipLines(geometry, newGeometry, k1, k2, axis, true);\n    } else if (type === 'MultiPolygon') {\n      for (const polygon of geometry) {\n        const newPolygon = [];\n        clipLines(polygon, newPolygon, k1, k2, axis, true);\n        if (newPolygon.length) {\n          newGeometry.push(newPolygon);\n        }\n      }\n    }\n\n    if (newGeometry.length) {\n      if (options.lineMetrics && type === 'LineString') {\n        for (const line of newGeometry) {\n          clipped.push(createFeature(feature.id, type, line, feature.tags));\n        }\n        continue;\n      }\n\n      if (type === 'LineString' || type === 'MultiLineString') {\n        if (newGeometry.length === 1) {\n          type = 'LineString';\n          // @ts-expect-error TODO - use proper GeoJSON geometry types\n          newGeometry = newGeometry[0];\n        } else {\n          type = 'MultiLineString';\n        }\n      }\n      if (type === 'Point' || type === 'MultiPoint') {\n        type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n      }\n\n      clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n  }\n\n  return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1: number, k2: number, axis): void {\n  for (let i = 0; i < geom.length; i += 3) {\n    const a = geom[i + axis];\n\n    if (a >= k1 && a <= k2) {\n      addPoint(newGeom, geom[i], geom[i + 1], geom[i + 2]);\n    }\n  }\n}\n\n// eslint-disable-next-line max-params, complexity, max-statements\nfunction clipLine(\n  geom,\n  newGeom,\n  k1: number,\n  k2: number,\n  axis,\n  isPolygon: boolean,\n  trackMetrics: boolean\n): void {\n  let slice = newSlice(geom);\n  const intersect = axis === 0 ? intersectX : intersectY;\n  let len = geom.start;\n  let segLen;\n  let t;\n\n  for (let i = 0; i < geom.length - 3; i += 3) {\n    const ax = geom[i];\n    const ay = geom[i + 1];\n    const az = geom[i + 2];\n    const bx = geom[i + 3];\n    const by = geom[i + 4];\n    const a = axis === 0 ? ax : ay;\n    const b = axis === 0 ? bx : by;\n    let exited = false;\n\n    if (trackMetrics) {\n      segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n    }\n\n    if (a < k1) {\n      // ---|-->  | (line enters the clip region from the left)\n      if (b > k1) {\n        t = intersect(slice, ax, ay, bx, by, k1);\n        if (trackMetrics) {\n          slice.start = len + segLen * t;\n        }\n      }\n    } else if (a > k2) {\n      // |  <--|--- (line enters the clip region from the right)\n      if (b < k2) {\n        t = intersect(slice, ax, ay, bx, by, k2);\n        if (trackMetrics) {\n          slice.start = len + segLen * t;\n        }\n      }\n    } else {\n      addPoint(slice, ax, ay, az);\n    }\n    if (b < k1 && a >= k1) {\n      // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n      t = intersect(slice, ax, ay, bx, by, k1);\n      exited = true;\n    }\n    if (b > k2 && a <= k2) {\n      // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n      t = intersect(slice, ax, ay, bx, by, k2);\n      exited = true;\n    }\n\n    if (!isPolygon && exited) {\n      if (trackMetrics) {\n        slice.end = len + segLen * t;\n      }\n      newGeom.push(slice);\n      slice = newSlice(geom);\n    }\n\n    if (trackMetrics) {\n      len += segLen;\n    }\n  }\n\n  // add the last point\n  let last = geom.length - 3;\n  const ax = geom[last];\n  const ay = geom[last + 1];\n  const az = geom[last + 2];\n  const a = axis === 0 ? ax : ay;\n  if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n  // close the polygon if its endpoints are not the same after clipping\n  last = slice.length - 3;\n  if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n    addPoint(slice, slice[0], slice[1], slice[2]);\n  }\n\n  // add the final slice\n  if (slice.length) {\n    newGeom.push(slice);\n  }\n}\n\nclass Slice extends Array<number> {\n  size?: number;\n  start?: number;\n  end?: number;\n}\n\nfunction newSlice(line: {size: number; start: number; end: number}): Slice {\n  const slice: Slice = [];\n  slice.size = line.size;\n  slice.start = line.start;\n  slice.end = line.end;\n  return slice;\n}\n\n// eslint-disable-next-line max-params\nfunction clipLines(geom, newGeom, k1: number, k2: number, axis, isPolygon: boolean): void {\n  for (const line of geom) {\n    clipLine(line, newGeom, k1, k2, axis, isPolygon, false);\n  }\n}\n\nfunction addPoint(out: number[], x: number, y: number, z: number): void {\n  out.push(x, y, z);\n}\n\n// eslint-disable-next-line max-params\nfunction intersectX(out, ax: number, ay: number, bx: number, by: number, x: number): number {\n  const t = (x - ax) / (bx - ax);\n  addPoint(out, x, ay + (by - ay) * t, 1);\n  return t;\n}\n\n// eslint-disable-next-line max-params\nfunction intersectY(out, ax: number, ay: number, bx: number, by: number, y): number {\n  const t = (y - ay) / (by - ay);\n  addPoint(out, ax + (bx - ax) * t, y, 1);\n  return t;\n}\n"],"mappings":";;;;;;;;;;;;;;;AAIA,IAAAA,QAAA,GAAAC,OAAA;AAAwC,SAAAC,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAP,KAAA,EAAAQ,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAS,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAR,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAQ,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAI,CAAA;AAAA,SAAAC,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAAQ,MAAA,qBAAAN,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAO,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAT,CAAA,CAAAQ,MAAA,WAAAK,IAAA,mBAAAA,IAAA,SAAAC,KAAA,EAAAd,CAAA,CAAAS,CAAA,UAAAX,CAAA,WAAAA,EAAAiB,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAN,CAAA,gBAAAO,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAT,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAAL,IAAA,CAAAG,CAAA,MAAAY,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAnB,EAAA,CAAAoB,IAAA,IAAAJ,gBAAA,GAAAG,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAvB,CAAA,WAAAA,EAAAyB,GAAA,IAAAJ,MAAA,SAAAC,GAAA,GAAAG,GAAA,KAAAP,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAhB,EAAA,CAAAsB,MAAA,UAAAtB,EAAA,CAAAsB,MAAA,oBAAAL,MAAA,QAAAC,GAAA;AAAA,SAAAb,4BAAAP,CAAA,EAAAyB,MAAA,SAAAzB,CAAA,qBAAAA,CAAA,sBAAA0B,iBAAA,CAAA1B,CAAA,EAAAyB,MAAA,OAAAb,CAAA,GAAAe,MAAA,CAAAhC,SAAA,CAAAiC,QAAA,CAAA/B,IAAA,CAAAG,CAAA,EAAA6B,KAAA,aAAAjB,CAAA,iBAAAZ,CAAA,CAAAd,WAAA,EAAA0B,CAAA,GAAAZ,CAAA,CAAAd,WAAA,CAAA4C,IAAA,MAAAlB,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAA0B,IAAA,CAAA/B,CAAA,OAAAY,CAAA,+DAAAoB,IAAA,CAAApB,CAAA,UAAAc,iBAAA,CAAA1B,CAAA,EAAAyB,MAAA;AAAA,SAAAC,kBAAAO,GAAA,EAAAC,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAD,GAAA,CAAAzB,MAAA,EAAA0B,GAAA,GAAAD,GAAA,CAAAzB,MAAA,WAAAC,CAAA,MAAA0B,IAAA,OAAA9B,KAAA,CAAA6B,GAAA,GAAAzB,CAAA,GAAAyB,GAAA,EAAAzB,CAAA,IAAA0B,IAAA,CAAA1B,CAAA,IAAAwB,GAAA,CAAAxB,CAAA,UAAA0B,IAAA;AAgBjC,SAASC,IAAIA,CAClBC,QAA8B,EAC9BC,KAAa,EACbC,EAAU,EACVC,EAAU,EACVC,IAAI,EACJC,MAAc,EACdC,MAAc,EACdC,OAA+B,EACF;EAC7BL,EAAE,IAAID,KAAK;EACXE,EAAE,IAAIF,KAAK;EAEX,IAAII,MAAM,IAAIH,EAAE,IAAII,MAAM,GAAGH,EAAE,EAAE;IAC/B,OAAOH,QAAQ;EACjB,CAAC,MAEI,IAAIM,MAAM,GAAGJ,EAAE,IAAIG,MAAM,IAAIF,EAAE,EAAE;IACpC,OAAO,IAAI;EACb;EAEA,IAAMK,OAA6B,GAAG,EAAE;EAAC,IAAAC,SAAA,GAAA/C,0BAAA,CAEnBsC,QAAQ;IAAAU,KAAA;EAAA;IAA9B,KAAAD,SAAA,CAAAnC,CAAA,MAAAoC,KAAA,GAAAD,SAAA,CAAAlC,CAAA,IAAAC,IAAA,GAAgC;MAAA,IAArBmC,OAAO,GAAAD,KAAA,CAAAjC,KAAA;MAChB,IAAMmC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;MACjC,IAAIC,IAAI,GAAGF,OAAO,CAACE,IAAI;MAEvB,IAAMC,GAAG,GAAGV,IAAI,KAAK,CAAC,GAAGO,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACK,IAAI;MACpD,IAAMC,GAAG,GAAGb,IAAI,KAAK,CAAC,GAAGO,OAAO,CAACO,IAAI,GAAGP,OAAO,CAACQ,IAAI;MAEpD,IAAIL,GAAG,IAAIZ,EAAE,IAAIe,GAAG,GAAGd,EAAE,EAAE;QAEzBK,OAAO,CAACY,IAAI,CAACT,OAAO,CAAC;QACrB;MACF,CAAC,MAAM,IAAIM,GAAG,GAAGf,EAAE,IAAIY,GAAG,IAAIX,EAAE,EAAE;QAEhC;MACF;MAEA,IAAIkB,WAAsC,GAAG,EAAE;MAE/C,IAAIR,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,YAAY,EAAE;QAC7CS,UAAU,CAACV,QAAQ,EAAES,WAAW,EAAEnB,EAAE,EAAEC,EAAE,EAAEC,IAAI,CAAC;MACjD,CAAC,MAAM,IAAIS,IAAI,KAAK,YAAY,EAAE;QAChCU,QAAQ,CAACX,QAAQ,EAAES,WAAW,EAAEnB,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAE,KAAK,EAAEG,OAAO,CAACiB,WAAW,CAAC;MAC3E,CAAC,MAAM,IAAIX,IAAI,KAAK,iBAAiB,EAAE;QACrCY,SAAS,CAACb,QAAQ,EAAES,WAAW,EAAEnB,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAE,KAAK,CAAC;MACvD,CAAC,MAAM,IAAIS,IAAI,KAAK,SAAS,EAAE;QAC7BY,SAAS,CAACb,QAAQ,EAAES,WAAW,EAAEnB,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAE,IAAI,CAAC;MACtD,CAAC,MAAM,IAAIS,IAAI,KAAK,cAAc,EAAE;QAAA,IAAAa,UAAA,GAAAhE,0BAAA,CACZkD,QAAQ;UAAAe,MAAA;QAAA;UAA9B,KAAAD,UAAA,CAAApD,CAAA,MAAAqD,MAAA,GAAAD,UAAA,CAAAnD,CAAA,IAAAC,IAAA,GAAgC;YAAA,IAArBoD,OAAO,GAAAD,MAAA,CAAAlD,KAAA;YAChB,IAAMoD,UAAU,GAAG,EAAE;YACrBJ,SAAS,CAACG,OAAO,EAAEC,UAAU,EAAE3B,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAE,IAAI,CAAC;YAClD,IAAIyB,UAAU,CAAC1D,MAAM,EAAE;cACrBkD,WAAW,CAACD,IAAI,CAACS,UAAU,CAAC;YAC9B;UACF;QAAC,SAAA9C,GAAA;UAAA2C,UAAA,CAAAjE,CAAA,CAAAsB,GAAA;QAAA;UAAA2C,UAAA,CAAA/C,CAAA;QAAA;MACH;MAEA,IAAI0C,WAAW,CAAClD,MAAM,EAAE;QACtB,IAAIoC,OAAO,CAACiB,WAAW,IAAIX,IAAI,KAAK,YAAY,EAAE;UAAA,IAAAiB,UAAA,GAAApE,0BAAA,CAC7B2D,WAAW;YAAAU,MAAA;UAAA;YAA9B,KAAAD,UAAA,CAAAxD,CAAA,MAAAyD,MAAA,GAAAD,UAAA,CAAAvD,CAAA,IAAAC,IAAA,GAAgC;cAAA,IAArBwD,IAAI,GAAAD,MAAA,CAAAtD,KAAA;cACb+B,OAAO,CAACY,IAAI,CAAC,IAAAa,sBAAa,EAACtB,OAAO,CAACuB,EAAE,EAAErB,IAAI,EAAEmB,IAAI,EAAErB,OAAO,CAACwB,IAAI,CAAC,CAAC;YACnE;UAAC,SAAApD,GAAA;YAAA+C,UAAA,CAAArE,CAAA,CAAAsB,GAAA;UAAA;YAAA+C,UAAA,CAAAnD,CAAA;UAAA;UACD;QACF;QAEA,IAAIkC,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,iBAAiB,EAAE;UACvD,IAAIQ,WAAW,CAAClD,MAAM,KAAK,CAAC,EAAE;YAC5B0C,IAAI,GAAG,YAAY;YAEnBQ,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC;UAC9B,CAAC,MAAM;YACLR,IAAI,GAAG,iBAAiB;UAC1B;QACF;QACA,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,YAAY,EAAE;UAC7CA,IAAI,GAAGQ,WAAW,CAAClD,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,YAAY;QAC1D;QAEAqC,OAAO,CAACY,IAAI,CAAC,IAAAa,sBAAa,EAACtB,OAAO,CAACuB,EAAE,EAAErB,IAAI,EAAEQ,WAAW,EAAEV,OAAO,CAACwB,IAAI,CAAC,CAAC;MAC1E;IACF;EAAC,SAAApD,GAAA;IAAA0B,SAAA,CAAAhD,CAAA,CAAAsB,GAAA;EAAA;IAAA0B,SAAA,CAAA9B,CAAA;EAAA;EAED,OAAO6B,OAAO,CAACrC,MAAM,GAAGqC,OAAO,GAAG,IAAI;AACxC;AAEA,SAASc,UAAUA,CAACc,IAAI,EAAEC,OAAO,EAAEnC,EAAU,EAAEC,EAAU,EAAEC,IAAI,EAAQ;EACrE,KAAK,IAAIhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgE,IAAI,CAACjE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;IACvC,IAAMkE,CAAC,GAAGF,IAAI,CAAChE,CAAC,GAAGgC,IAAI,CAAC;IAExB,IAAIkC,CAAC,IAAIpC,EAAE,IAAIoC,CAAC,IAAInC,EAAE,EAAE;MACtBoC,QAAQ,CAACF,OAAO,EAAED,IAAI,CAAChE,CAAC,CAAC,EAAEgE,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC,EAAEgE,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD;EACF;AACF;AAGA,SAASmD,QAAQA,CACfa,IAAI,EACJC,OAAO,EACPnC,EAAU,EACVC,EAAU,EACVC,IAAI,EACJoC,SAAkB,EAClBC,YAAqB,EACf;EACN,IAAIjD,KAAK,GAAGkD,QAAQ,CAACN,IAAI,CAAC;EAC1B,IAAMO,SAAS,GAAGvC,IAAI,KAAK,CAAC,GAAGwC,UAAU,GAAGC,UAAU;EACtD,IAAIhD,GAAG,GAAGuC,IAAI,CAACU,KAAK;EACpB,IAAIC,MAAM;EACV,IAAIC,CAAC;EAEL,KAAK,IAAI5E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgE,IAAI,CAACjE,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE;IAC3C,IAAM6E,GAAE,GAAGb,IAAI,CAAChE,CAAC,CAAC;IAClB,IAAM8E,GAAE,GAAGd,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC;IACtB,IAAM+E,GAAE,GAAGf,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC;IACtB,IAAMgF,EAAE,GAAGhB,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC;IACtB,IAAMiF,EAAE,GAAGjB,IAAI,CAAChE,CAAC,GAAG,CAAC,CAAC;IACtB,IAAMkE,EAAC,GAAGlC,IAAI,KAAK,CAAC,GAAG6C,GAAE,GAAGC,GAAE;IAC9B,IAAMI,CAAC,GAAGlD,IAAI,KAAK,CAAC,GAAGgD,EAAE,GAAGC,EAAE;IAC9B,IAAIE,MAAM,GAAG,KAAK;IAElB,IAAId,YAAY,EAAE;MAChBM,MAAM,GAAGS,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACT,GAAE,GAAGG,EAAE,EAAE,CAAC,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACR,GAAE,GAAGG,EAAE,EAAE,CAAC,CAAC,CAAC;IACjE;IAEA,IAAIf,EAAC,GAAGpC,EAAE,EAAE;MAEV,IAAIoD,CAAC,GAAGpD,EAAE,EAAE;QACV8C,CAAC,GAAGL,SAAS,CAACnD,KAAK,EAAEyD,GAAE,EAAEC,GAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEnD,EAAE,CAAC;QACxC,IAAIuC,YAAY,EAAE;UAChBjD,KAAK,CAACsD,KAAK,GAAGjD,GAAG,GAAGkD,MAAM,GAAGC,CAAC;QAChC;MACF;IACF,CAAC,MAAM,IAAIV,EAAC,GAAGnC,EAAE,EAAE;MAEjB,IAAImD,CAAC,GAAGnD,EAAE,EAAE;QACV6C,CAAC,GAAGL,SAAS,CAACnD,KAAK,EAAEyD,GAAE,EAAEC,GAAE,EAAEE,EAAE,EAAEC,EAAE,EAAElD,EAAE,CAAC;QACxC,IAAIsC,YAAY,EAAE;UAChBjD,KAAK,CAACsD,KAAK,GAAGjD,GAAG,GAAGkD,MAAM,GAAGC,CAAC;QAChC;MACF;IACF,CAAC,MAAM;MACLT,QAAQ,CAAC/C,KAAK,EAAEyD,GAAE,EAAEC,GAAE,EAAEC,GAAE,CAAC;IAC7B;IACA,IAAIG,CAAC,GAAGpD,EAAE,IAAIoC,EAAC,IAAIpC,EAAE,EAAE;MAErB8C,CAAC,GAAGL,SAAS,CAACnD,KAAK,EAAEyD,GAAE,EAAEC,GAAE,EAAEE,EAAE,EAAEC,EAAE,EAAEnD,EAAE,CAAC;MACxCqD,MAAM,GAAG,IAAI;IACf;IACA,IAAID,CAAC,GAAGnD,EAAE,IAAImC,EAAC,IAAInC,EAAE,EAAE;MAErB6C,CAAC,GAAGL,SAAS,CAACnD,KAAK,EAAEyD,GAAE,EAAEC,GAAE,EAAEE,EAAE,EAAEC,EAAE,EAAElD,EAAE,CAAC;MACxCoD,MAAM,GAAG,IAAI;IACf;IAEA,IAAI,CAACf,SAAS,IAAIe,MAAM,EAAE;MACxB,IAAId,YAAY,EAAE;QAChBjD,KAAK,CAACmE,GAAG,GAAG9D,GAAG,GAAGkD,MAAM,GAAGC,CAAC;MAC9B;MACAX,OAAO,CAACjB,IAAI,CAAC5B,KAAK,CAAC;MACnBA,KAAK,GAAGkD,QAAQ,CAACN,IAAI,CAAC;IACxB;IAEA,IAAIK,YAAY,EAAE;MAChB5C,GAAG,IAAIkD,MAAM;IACf;EACF;EAGA,IAAIa,IAAI,GAAGxB,IAAI,CAACjE,MAAM,GAAG,CAAC;EAC1B,IAAM8E,EAAE,GAAGb,IAAI,CAACwB,IAAI,CAAC;EACrB,IAAMV,EAAE,GAAGd,IAAI,CAACwB,IAAI,GAAG,CAAC,CAAC;EACzB,IAAMT,EAAE,GAAGf,IAAI,CAACwB,IAAI,GAAG,CAAC,CAAC;EACzB,IAAMtB,CAAC,GAAGlC,IAAI,KAAK,CAAC,GAAG6C,EAAE,GAAGC,EAAE;EAC9B,IAAIZ,CAAC,IAAIpC,EAAE,IAAIoC,CAAC,IAAInC,EAAE,EAAEoC,QAAQ,CAAC/C,KAAK,EAAEyD,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAGnDS,IAAI,GAAGpE,KAAK,CAACrB,MAAM,GAAG,CAAC;EACvB,IAAIqE,SAAS,IAAIoB,IAAI,IAAI,CAAC,KAAKpE,KAAK,CAACoE,IAAI,CAAC,KAAKpE,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAACoE,IAAI,GAAG,CAAC,CAAC,KAAKpE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;IACxF+C,QAAQ,CAAC/C,KAAK,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/C;EAGA,IAAIA,KAAK,CAACrB,MAAM,EAAE;IAChBkE,OAAO,CAACjB,IAAI,CAAC5B,KAAK,CAAC;EACrB;AACF;AAAC,IAEKqE,KAAK,aAAAC,MAAA;EAAA,IAAAC,UAAA,CAAArH,OAAA,EAAAmH,KAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAA7H,YAAA,CAAA0H,KAAA;EAAA,SAAAA,MAAA;IAAA,IAAAI,KAAA;IAAA,IAAAC,gBAAA,CAAAxH,OAAA,QAAAmH,KAAA;IAAA,SAAAM,IAAA,GAAAnH,SAAA,CAAAmB,MAAA,EAAAiG,IAAA,OAAApG,KAAA,CAAAmG,IAAA,GAAAE,IAAA,MAAAA,IAAA,GAAAF,IAAA,EAAAE,IAAA;MAAAD,IAAA,CAAAC,IAAA,IAAArH,SAAA,CAAAqH,IAAA;IAAA;IAAAJ,KAAA,GAAAD,MAAA,CAAAxG,IAAA,CAAAP,KAAA,CAAA+G,MAAA,SAAAM,MAAA,CAAAF,IAAA;IAAA,IAAAG,gBAAA,CAAA7H,OAAA,MAAA8H,uBAAA,CAAA9H,OAAA,EAAAuH,KAAA;IAAA,IAAAM,gBAAA,CAAA7H,OAAA,MAAA8H,uBAAA,CAAA9H,OAAA,EAAAuH,KAAA;IAAA,IAAAM,gBAAA,CAAA7H,OAAA,MAAA8H,uBAAA,CAAA9H,OAAA,EAAAuH,KAAA;IAAA,OAAAA,KAAA;EAAA;EAAA,WAAAQ,aAAA,CAAA/H,OAAA,EAAAmH,KAAA;AAAA,MAAAa,iBAAA,CAAAhI,OAAA,EAASsB,KAAK;AAMzB,SAAS0E,QAAQA,CAACV,IAAgD,EAAS;EACzE,IAAMxC,KAAY,GAAG,EAAE;EACvBA,KAAK,CAACmF,IAAI,GAAG3C,IAAI,CAAC2C,IAAI;EACtBnF,KAAK,CAACsD,KAAK,GAAGd,IAAI,CAACc,KAAK;EACxBtD,KAAK,CAACmE,GAAG,GAAG3B,IAAI,CAAC2B,GAAG;EACpB,OAAOnE,KAAK;AACd;AAGA,SAASiC,SAASA,CAACW,IAAI,EAAEC,OAAO,EAAEnC,EAAU,EAAEC,EAAU,EAAEC,IAAI,EAAEoC,SAAkB,EAAQ;EAAA,IAAAoC,UAAA,GAAAlH,0BAAA,CACrE0E,IAAI;IAAAyC,MAAA;EAAA;IAAvB,KAAAD,UAAA,CAAAtG,CAAA,MAAAuG,MAAA,GAAAD,UAAA,CAAArG,CAAA,IAAAC,IAAA,GAAyB;MAAA,IAAdwD,IAAI,GAAA6C,MAAA,CAAApG,KAAA;MACb8C,QAAQ,CAACS,IAAI,EAAEK,OAAO,EAAEnC,EAAE,EAAEC,EAAE,EAAEC,IAAI,EAAEoC,SAAS,EAAE,KAAK,CAAC;IACzD;EAAC,SAAAzD,GAAA;IAAA6F,UAAA,CAAAnH,CAAA,CAAAsB,GAAA;EAAA;IAAA6F,UAAA,CAAAjG,CAAA;EAAA;AACH;AAEA,SAAS4D,QAAQA,CAACuC,GAAa,EAAEC,CAAS,EAAEC,CAAS,EAAEC,CAAS,EAAQ;EACtEH,GAAG,CAAC1D,IAAI,CAAC2D,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;AACnB;AAGA,SAASrC,UAAUA,CAACkC,GAAG,EAAE7B,EAAU,EAAEC,EAAU,EAAEE,EAAU,EAAEC,EAAU,EAAE0B,CAAS,EAAU;EAC1F,IAAM/B,CAAC,GAAG,CAAC+B,CAAC,GAAG9B,EAAE,KAAKG,EAAE,GAAGH,EAAE,CAAC;EAC9BV,QAAQ,CAACuC,GAAG,EAAEC,CAAC,EAAE7B,EAAE,GAAG,CAACG,EAAE,GAAGH,EAAE,IAAIF,CAAC,EAAE,CAAC,CAAC;EACvC,OAAOA,CAAC;AACV;AAGA,SAASH,UAAUA,CAACiC,GAAG,EAAE7B,EAAU,EAAEC,EAAU,EAAEE,EAAU,EAAEC,EAAU,EAAE2B,CAAC,EAAU;EAClF,IAAMhC,CAAC,GAAG,CAACgC,CAAC,GAAG9B,EAAE,KAAKG,EAAE,GAAGH,EAAE,CAAC;EAC9BX,QAAQ,CAACuC,GAAG,EAAE7B,EAAE,GAAG,CAACG,EAAE,GAAGH,EAAE,IAAID,CAAC,EAAEgC,CAAC,EAAE,CAAC,CAAC;EACvC,OAAOhC,CAAC;AACV"}