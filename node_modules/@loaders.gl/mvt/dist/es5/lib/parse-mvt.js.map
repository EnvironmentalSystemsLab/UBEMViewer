{"version":3,"file":"parse-mvt.js","names":["_gis","require","_pbf","_interopRequireDefault","_vectorTile","_vectorTile2","parseMVT","arrayBuffer","options","_options$gis","_options$mvt","mvtOptions","normalizeOptions","shape","gis","format","mvt","data","parseToBinary","table","parseToGeojson","Error","_parseToFlatGeoJson","parseToFlatGeoJson","_parseToFlatGeoJson2","_slicedToArray2","default","flatGeoJsonFeatures","geometryInfo","binaryData","flatGeojsonToBinary","byteLength","features","coordLength","pointPositionsCount","pointFeaturesCount","linePositionsCount","linePathsCount","lineFeaturesCount","polygonPositionsCount","polygonObjectsCount","polygonRingsCount","polygonFeaturesCount","tile","BinaryVectorTile","Protobuf","selectedLayers","Array","isArray","layers","Object","keys","forEach","layerName","vectorTileLayer","i","length","vectorTileFeature","feature","decodedFeature","getDecodedFeatureBinary","push","VectorTile","getDecodedFeature","_options$mvt2","wgs84Coordinates","coordinates","tileIndex","hasTileIndex","Number","isFinite","x","y","z","toGeoJSON","transformToLocalCoordinates","layerProperty","properties","toBinaryCoordinates","transformToLocalCoordinatesBinary","line","extent","p","il"],"sources":["../../../src/lib/parse-mvt.ts"],"sourcesContent":["import {flatGeojsonToBinary} from '@loaders.gl/gis';\nimport type {\n  FlatFeature,\n  Feature,\n  GeojsonGeometryInfo,\n  BinaryFeatures,\n  GeoJSONRowTable\n} from '@loaders.gl/schema';\nimport Protobuf from 'pbf';\n\nimport type {MVTMapboxCoordinates, MVTOptions, MVTLoaderOptions} from '../lib/types';\n\nimport VectorTile from './mapbox-vector-tile/vector-tile';\nimport BinaryVectorTile from './binary-vector-tile/vector-tile';\nimport VectorTileFeatureBinary from './binary-vector-tile/vector-tile-feature';\nimport VectorTileFeatureMapBox from './mapbox-vector-tile/vector-tile-feature';\n\n/**\n * Parse MVT arrayBuffer and return GeoJSON.\n *\n * @param arrayBuffer A MVT arrayBuffer\n * @param options\n * @returns A GeoJSON geometry object or a binary representation\n */\nexport default function parseMVT(arrayBuffer: ArrayBuffer, options?: MVTLoaderOptions) {\n  const mvtOptions = normalizeOptions(options);\n\n  const shape = options?.gis?.format || options?.mvt?.shape;\n  switch (shape) {\n    case 'columnar-table': // binary + some JS arrays\n      return {shape: 'columnar-table', data: parseToBinary(arrayBuffer, mvtOptions)};\n    case 'geojson-row-table': {\n      const table: GeoJSONRowTable = {\n        shape: 'geojson-row-table',\n        data: parseToGeojson(arrayBuffer, mvtOptions)\n      };\n      return table;\n    }\n    case 'geojson':\n      return parseToGeojson(arrayBuffer, mvtOptions);\n    case 'binary-geometry':\n      return parseToBinary(arrayBuffer, mvtOptions);\n    case 'binary':\n      return parseToBinary(arrayBuffer, mvtOptions);\n    default:\n      throw new Error(shape);\n  }\n}\n\nfunction parseToBinary(arrayBuffer: ArrayBuffer, options: MVTOptions): BinaryFeatures {\n  const [flatGeoJsonFeatures, geometryInfo] = parseToFlatGeoJson(arrayBuffer, options);\n\n  const binaryData = flatGeojsonToBinary(flatGeoJsonFeatures, geometryInfo);\n  // Add the original byteLength (as a reasonable approximation of the size of the binary data)\n  // TODO decide where to store extra fields like byteLength (header etc) and document\n  // @ts-ignore\n  binaryData.byteLength = arrayBuffer.byteLength;\n  return binaryData;\n}\n\nfunction parseToFlatGeoJson(\n  arrayBuffer: ArrayBuffer,\n  options: MVTOptions\n): [FlatFeature[], GeojsonGeometryInfo] {\n  const features: FlatFeature[] = [];\n  const geometryInfo: GeojsonGeometryInfo = {\n    coordLength: 2,\n    pointPositionsCount: 0,\n    pointFeaturesCount: 0,\n    linePositionsCount: 0,\n    linePathsCount: 0,\n    lineFeaturesCount: 0,\n    polygonPositionsCount: 0,\n    polygonObjectsCount: 0,\n    polygonRingsCount: 0,\n    polygonFeaturesCount: 0\n  };\n\n  if (arrayBuffer.byteLength <= 0) {\n    return [features, geometryInfo];\n  }\n\n  const tile = new BinaryVectorTile(new Protobuf(arrayBuffer));\n\n  const selectedLayers =\n    options && Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n\n  selectedLayers.forEach((layerName: string) => {\n    const vectorTileLayer = tile.layers[layerName];\n    if (!vectorTileLayer) {\n      return;\n    }\n\n    for (let i = 0; i < vectorTileLayer.length; i++) {\n      const vectorTileFeature = vectorTileLayer.feature(i, geometryInfo);\n      const decodedFeature = getDecodedFeatureBinary(vectorTileFeature, options, layerName);\n      features.push(decodedFeature);\n    }\n  });\n\n  return [features, geometryInfo];\n}\n\nfunction parseToGeojson(arrayBuffer: ArrayBuffer, options: MVTOptions): Feature[] {\n  if (arrayBuffer.byteLength <= 0) {\n    return [];\n  }\n\n  const features: MVTMapboxCoordinates[] = [];\n  const tile = new VectorTile(new Protobuf(arrayBuffer));\n\n  const selectedLayers = Array.isArray(options.layers) ? options.layers : Object.keys(tile.layers);\n\n  selectedLayers.forEach((layerName: string) => {\n    const vectorTileLayer = tile.layers[layerName];\n    if (!vectorTileLayer) {\n      return;\n    }\n\n    for (let i = 0; i < vectorTileLayer.length; i++) {\n      const vectorTileFeature = vectorTileLayer.feature(i);\n      const decodedFeature = getDecodedFeature(vectorTileFeature, options, layerName);\n      features.push(decodedFeature);\n    }\n  });\n\n  return features as Feature[];\n}\n\nfunction normalizeOptions(options?: MVTLoaderOptions): MVTOptions {\n  if (!options?.mvt) {\n    throw new Error('mvt options required');\n  }\n\n  // Validate\n  const wgs84Coordinates = options.mvt?.coordinates === 'wgs84';\n  const {tileIndex} = options.mvt;\n  const hasTileIndex =\n    tileIndex &&\n    Number.isFinite(tileIndex.x) &&\n    Number.isFinite(tileIndex.y) &&\n    Number.isFinite(tileIndex.z);\n\n  if (wgs84Coordinates && !hasTileIndex) {\n    throw new Error('MVT Loader: WGS84 coordinates need tileIndex property');\n  }\n\n  return options.mvt;\n}\n\n/**\n * @param feature\n * @param options\n * @returns decoded feature\n */\nfunction getDecodedFeature(\n  feature: VectorTileFeatureMapBox,\n  options: MVTOptions,\n  layerName: string\n): MVTMapboxCoordinates {\n  const decodedFeature = feature.toGeoJSON(\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinates\n  );\n\n  // Add layer name to GeoJSON properties\n  if (options.layerProperty) {\n    decodedFeature.properties[options.layerProperty] = layerName;\n  }\n\n  return decodedFeature;\n}\n\n/**\n * @param feature\n * @param options\n * @returns decoded binary feature\n */\nfunction getDecodedFeatureBinary(\n  feature: VectorTileFeatureBinary,\n  options: MVTOptions,\n  layerName: string\n): FlatFeature {\n  const decodedFeature = feature.toBinaryCoordinates(\n    options.coordinates === 'wgs84' ? options.tileIndex : transformToLocalCoordinatesBinary\n  );\n\n  // Add layer name to GeoJSON properties\n  if (options.layerProperty && decodedFeature.properties) {\n    decodedFeature.properties[options.layerProperty] = layerName;\n  }\n\n  return decodedFeature;\n}\n\n/**\n * @param line\n * @param feature\n */\nfunction transformToLocalCoordinates(line: number[], feature: {extent: any}): void {\n  // This function transforms local coordinates in a\n  // [0 - bufferSize, this.extent + bufferSize] range to a\n  // [0 - (bufferSize / this.extent), 1 + (bufferSize / this.extent)] range.\n  // The resulting extent would be 1.\n  const {extent} = feature;\n  for (let i = 0; i < line.length; i++) {\n    const p = line[i];\n    p[0] /= extent;\n    p[1] /= extent;\n  }\n}\n\nfunction transformToLocalCoordinatesBinary(data: number[], feature: {extent: any}) {\n  // For the binary code path, the feature data is just\n  // one big flat array, so we just divide each value\n  const {extent} = feature;\n  for (let i = 0, il = data.length; i < il; ++i) {\n    data[i] /= extent;\n  }\n}\n"],"mappings":"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"}